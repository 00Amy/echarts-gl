!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("echarts")):"function"==typeof define&&define.amd?define(["echarts"],e):"object"==typeof exports?exports["echarts-gl"]=e(require("echarts")):t["echarts-gl"]=e(t.echarts)}(this,function(t){return function(t){function e(n){if(r[n])return r[n].exports;var i=r[n]={exports:{},id:n,loaded:!1};return t[n].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var r={};return e.m=t,e.c=r,e.p="",e(0)}([function(t,e,r){r(129),r(116),r(110),r(113),r(87),r(100),r(91),r(106),r(97),r(103)},function(e,r){e.exports=t},function(t,e,r){!function(t){"use strict";var r={};r.exports=e,function(t){if(!e)var e=1e-6;if(!r)var r="undefined"!=typeof Float32Array?Float32Array:Array;if(!n)var n=Math.random;var i={};i.setMatrixArrayType=function(t){r=t},"undefined"!=typeof t&&(t.glMatrix=i);var a=Math.PI/180;i.toRadian=function(t){return t*a};var o={};o.create=function(){var t=new r(2);return t[0]=0,t[1]=0,t},o.clone=function(t){var e=new r(2);return e[0]=t[0],e[1]=t[1],e},o.fromValues=function(t,e){var n=new r(2);return n[0]=t,n[1]=e,n},o.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t},o.set=function(t,e,r){return t[0]=e,t[1]=r,t},o.add=function(t,e,r){return t[0]=e[0]+r[0],t[1]=e[1]+r[1],t},o.subtract=function(t,e,r){return t[0]=e[0]-r[0],t[1]=e[1]-r[1],t},o.sub=o.subtract,o.multiply=function(t,e,r){return t[0]=e[0]*r[0],t[1]=e[1]*r[1],t},o.mul=o.multiply,o.divide=function(t,e,r){return t[0]=e[0]/r[0],t[1]=e[1]/r[1],t},o.div=o.divide,o.min=function(t,e,r){return t[0]=Math.min(e[0],r[0]),t[1]=Math.min(e[1],r[1]),t},o.max=function(t,e,r){return t[0]=Math.max(e[0],r[0]),t[1]=Math.max(e[1],r[1]),t},o.scale=function(t,e,r){return t[0]=e[0]*r,t[1]=e[1]*r,t},o.scaleAndAdd=function(t,e,r,n){return t[0]=e[0]+r[0]*n,t[1]=e[1]+r[1]*n,t},o.distance=function(t,e){var r=e[0]-t[0],n=e[1]-t[1];return Math.sqrt(r*r+n*n)},o.dist=o.distance,o.squaredDistance=function(t,e){var r=e[0]-t[0],n=e[1]-t[1];return r*r+n*n},o.sqrDist=o.squaredDistance,o.length=function(t){var e=t[0],r=t[1];return Math.sqrt(e*e+r*r)},o.len=o.length,o.squaredLength=function(t){var e=t[0],r=t[1];return e*e+r*r},o.sqrLen=o.squaredLength,o.negate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t},o.inverse=function(t,e){return t[0]=1/e[0],t[1]=1/e[1],t},o.normalize=function(t,e){var r=e[0],n=e[1],i=r*r+n*n;return i>0&&(i=1/Math.sqrt(i),t[0]=e[0]*i,t[1]=e[1]*i),t},o.dot=function(t,e){return t[0]*e[0]+t[1]*e[1]},o.cross=function(t,e,r){var n=e[0]*r[1]-e[1]*r[0];return t[0]=t[1]=0,t[2]=n,t},o.lerp=function(t,e,r,n){var i=e[0],a=e[1];return t[0]=i+n*(r[0]-i),t[1]=a+n*(r[1]-a),t},o.random=function(t,e){e=e||1;var r=2*n()*Math.PI;return t[0]=Math.cos(r)*e,t[1]=Math.sin(r)*e,t},o.transformMat2=function(t,e,r){var n=e[0],i=e[1];return t[0]=r[0]*n+r[2]*i,t[1]=r[1]*n+r[3]*i,t},o.transformMat2d=function(t,e,r){var n=e[0],i=e[1];return t[0]=r[0]*n+r[2]*i+r[4],t[1]=r[1]*n+r[3]*i+r[5],t},o.transformMat3=function(t,e,r){var n=e[0],i=e[1];return t[0]=r[0]*n+r[3]*i+r[6],t[1]=r[1]*n+r[4]*i+r[7],t},o.transformMat4=function(t,e,r){var n=e[0],i=e[1];return t[0]=r[0]*n+r[4]*i+r[12],t[1]=r[1]*n+r[5]*i+r[13],t},o.forEach=function(){var t=o.create();return function(e,r,n,i,a,o){var s,u;for(r||(r=2),n||(n=0),u=i?Math.min(i*r+n,e.length):e.length,s=n;s<u;s+=r)t[0]=e[s],t[1]=e[s+1],a(t,t,o),e[s]=t[0],e[s+1]=t[1];return e}}(),o.str=function(t){return"vec2("+t[0]+", "+t[1]+")"},"undefined"!=typeof t&&(t.vec2=o);var s={};s.create=function(){var t=new r(3);return t[0]=0,t[1]=0,t[2]=0,t},s.clone=function(t){var e=new r(3);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e},s.fromValues=function(t,e,n){var i=new r(3);return i[0]=t,i[1]=e,i[2]=n,i},s.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t},s.set=function(t,e,r,n){return t[0]=e,t[1]=r,t[2]=n,t},s.add=function(t,e,r){return t[0]=e[0]+r[0],t[1]=e[1]+r[1],t[2]=e[2]+r[2],t},s.subtract=function(t,e,r){return t[0]=e[0]-r[0],t[1]=e[1]-r[1],t[2]=e[2]-r[2],t},s.sub=s.subtract,s.multiply=function(t,e,r){return t[0]=e[0]*r[0],t[1]=e[1]*r[1],t[2]=e[2]*r[2],t},s.mul=s.multiply,s.divide=function(t,e,r){return t[0]=e[0]/r[0],t[1]=e[1]/r[1],t[2]=e[2]/r[2],t},s.div=s.divide,s.min=function(t,e,r){return t[0]=Math.min(e[0],r[0]),t[1]=Math.min(e[1],r[1]),t[2]=Math.min(e[2],r[2]),t},s.max=function(t,e,r){return t[0]=Math.max(e[0],r[0]),t[1]=Math.max(e[1],r[1]),t[2]=Math.max(e[2],r[2]),t},s.scale=function(t,e,r){return t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t},s.scaleAndAdd=function(t,e,r,n){return t[0]=e[0]+r[0]*n,t[1]=e[1]+r[1]*n,t[2]=e[2]+r[2]*n,t},s.distance=function(t,e){var r=e[0]-t[0],n=e[1]-t[1],i=e[2]-t[2];return Math.sqrt(r*r+n*n+i*i)},s.dist=s.distance,s.squaredDistance=function(t,e){var r=e[0]-t[0],n=e[1]-t[1],i=e[2]-t[2];return r*r+n*n+i*i},s.sqrDist=s.squaredDistance,s.length=function(t){var e=t[0],r=t[1],n=t[2];return Math.sqrt(e*e+r*r+n*n)},s.len=s.length,s.squaredLength=function(t){var e=t[0],r=t[1],n=t[2];return e*e+r*r+n*n},s.sqrLen=s.squaredLength,s.negate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t},s.inverse=function(t,e){return t[0]=1/e[0],t[1]=1/e[1],t[2]=1/e[2],t},s.normalize=function(t,e){var r=e[0],n=e[1],i=e[2],a=r*r+n*n+i*i;return a>0&&(a=1/Math.sqrt(a),t[0]=e[0]*a,t[1]=e[1]*a,t[2]=e[2]*a),t},s.dot=function(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]},s.cross=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=r[0],s=r[1],u=r[2];return t[0]=i*u-a*s,t[1]=a*o-n*u,t[2]=n*s-i*o,t},s.lerp=function(t,e,r,n){var i=e[0],a=e[1],o=e[2];return t[0]=i+n*(r[0]-i),t[1]=a+n*(r[1]-a),t[2]=o+n*(r[2]-o),t},s.random=function(t,e){e=e||1;var r=2*n()*Math.PI,i=2*n()-1,a=Math.sqrt(1-i*i)*e;return t[0]=Math.cos(r)*a,t[1]=Math.sin(r)*a,t[2]=i*e,t},s.transformMat4=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=r[3]*n+r[7]*i+r[11]*a+r[15];return o=o||1,t[0]=(r[0]*n+r[4]*i+r[8]*a+r[12])/o,t[1]=(r[1]*n+r[5]*i+r[9]*a+r[13])/o,t[2]=(r[2]*n+r[6]*i+r[10]*a+r[14])/o,t},s.transformMat3=function(t,e,r){var n=e[0],i=e[1],a=e[2];return t[0]=n*r[0]+i*r[3]+a*r[6],t[1]=n*r[1]+i*r[4]+a*r[7],t[2]=n*r[2]+i*r[5]+a*r[8],t},s.transformQuat=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=r[0],s=r[1],u=r[2],c=r[3],l=c*n+s*a-u*i,h=c*i+u*n-o*a,f=c*a+o*i-s*n,d=-o*n-s*i-u*a;return t[0]=l*c+d*-o+h*-u-f*-s,t[1]=h*c+d*-s+f*-o-l*-u,t[2]=f*c+d*-u+l*-s-h*-o,t},s.rotateX=function(t,e,r,n){var i=[],a=[];return i[0]=e[0]-r[0],i[1]=e[1]-r[1],i[2]=e[2]-r[2],a[0]=i[0],a[1]=i[1]*Math.cos(n)-i[2]*Math.sin(n),a[2]=i[1]*Math.sin(n)+i[2]*Math.cos(n),t[0]=a[0]+r[0],t[1]=a[1]+r[1],t[2]=a[2]+r[2],t},s.rotateY=function(t,e,r,n){var i=[],a=[];return i[0]=e[0]-r[0],i[1]=e[1]-r[1],i[2]=e[2]-r[2],a[0]=i[2]*Math.sin(n)+i[0]*Math.cos(n),a[1]=i[1],a[2]=i[2]*Math.cos(n)-i[0]*Math.sin(n),t[0]=a[0]+r[0],t[1]=a[1]+r[1],t[2]=a[2]+r[2],t},s.rotateZ=function(t,e,r,n){var i=[],a=[];return i[0]=e[0]-r[0],i[1]=e[1]-r[1],i[2]=e[2]-r[2],a[0]=i[0]*Math.cos(n)-i[1]*Math.sin(n),a[1]=i[0]*Math.sin(n)+i[1]*Math.cos(n),a[2]=i[2],t[0]=a[0]+r[0],t[1]=a[1]+r[1],t[2]=a[2]+r[2],t},s.forEach=function(){var t=s.create();return function(e,r,n,i,a,o){var s,u;for(r||(r=3),n||(n=0),u=i?Math.min(i*r+n,e.length):e.length,s=n;s<u;s+=r)t[0]=e[s],t[1]=e[s+1],t[2]=e[s+2],a(t,t,o),e[s]=t[0],e[s+1]=t[1],e[s+2]=t[2];return e}}(),s.angle=function(t,e){var r=s.fromValues(t[0],t[1],t[2]),n=s.fromValues(e[0],e[1],e[2]);s.normalize(r,r),s.normalize(n,n);var i=s.dot(r,n);return i>1?0:Math.acos(i)},s.str=function(t){return"vec3("+t[0]+", "+t[1]+", "+t[2]+")"},"undefined"!=typeof t&&(t.vec3=s);var u={};u.create=function(){var t=new r(4);return t[0]=0,t[1]=0,t[2]=0,t[3]=0,t},u.clone=function(t){var e=new r(4);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},u.fromValues=function(t,e,n,i){var a=new r(4);return a[0]=t,a[1]=e,a[2]=n,a[3]=i,a},u.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},u.set=function(t,e,r,n,i){return t[0]=e,t[1]=r,t[2]=n,t[3]=i,t},u.add=function(t,e,r){return t[0]=e[0]+r[0],t[1]=e[1]+r[1],t[2]=e[2]+r[2],t[3]=e[3]+r[3],t},u.subtract=function(t,e,r){return t[0]=e[0]-r[0],t[1]=e[1]-r[1],t[2]=e[2]-r[2],t[3]=e[3]-r[3],t},u.sub=u.subtract,u.multiply=function(t,e,r){return t[0]=e[0]*r[0],t[1]=e[1]*r[1],t[2]=e[2]*r[2],t[3]=e[3]*r[3],t},u.mul=u.multiply,u.divide=function(t,e,r){return t[0]=e[0]/r[0],t[1]=e[1]/r[1],t[2]=e[2]/r[2],t[3]=e[3]/r[3],t},u.div=u.divide,u.min=function(t,e,r){return t[0]=Math.min(e[0],r[0]),t[1]=Math.min(e[1],r[1]),t[2]=Math.min(e[2],r[2]),t[3]=Math.min(e[3],r[3]),t},u.max=function(t,e,r){return t[0]=Math.max(e[0],r[0]),t[1]=Math.max(e[1],r[1]),t[2]=Math.max(e[2],r[2]),t[3]=Math.max(e[3],r[3]),t},u.scale=function(t,e,r){return t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t[3]=e[3]*r,t},u.scaleAndAdd=function(t,e,r,n){return t[0]=e[0]+r[0]*n,t[1]=e[1]+r[1]*n,t[2]=e[2]+r[2]*n,t[3]=e[3]+r[3]*n,t},u.distance=function(t,e){var r=e[0]-t[0],n=e[1]-t[1],i=e[2]-t[2],a=e[3]-t[3];return Math.sqrt(r*r+n*n+i*i+a*a)},u.dist=u.distance,u.squaredDistance=function(t,e){var r=e[0]-t[0],n=e[1]-t[1],i=e[2]-t[2],a=e[3]-t[3];return r*r+n*n+i*i+a*a},u.sqrDist=u.squaredDistance,u.length=function(t){var e=t[0],r=t[1],n=t[2],i=t[3];return Math.sqrt(e*e+r*r+n*n+i*i)},u.len=u.length,u.squaredLength=function(t){var e=t[0],r=t[1],n=t[2],i=t[3];return e*e+r*r+n*n+i*i},u.sqrLen=u.squaredLength,u.negate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t},u.inverse=function(t,e){return t[0]=1/e[0],t[1]=1/e[1],t[2]=1/e[2],t[3]=1/e[3],t},u.normalize=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=r*r+n*n+i*i+a*a;return o>0&&(o=1/Math.sqrt(o),t[0]=e[0]*o,t[1]=e[1]*o,t[2]=e[2]*o,t[3]=e[3]*o),t},u.dot=function(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]+t[3]*e[3]},u.lerp=function(t,e,r,n){var i=e[0],a=e[1],o=e[2],s=e[3];return t[0]=i+n*(r[0]-i),t[1]=a+n*(r[1]-a),t[2]=o+n*(r[2]-o),t[3]=s+n*(r[3]-s),t},u.random=function(t,e){return e=e||1,t[0]=n(),t[1]=n(),t[2]=n(),t[3]=n(),u.normalize(t,t),u.scale(t,t,e),t},u.transformMat4=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3];return t[0]=r[0]*n+r[4]*i+r[8]*a+r[12]*o,t[1]=r[1]*n+r[5]*i+r[9]*a+r[13]*o,t[2]=r[2]*n+r[6]*i+r[10]*a+r[14]*o,t[3]=r[3]*n+r[7]*i+r[11]*a+r[15]*o,t},u.transformQuat=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=r[0],s=r[1],u=r[2],c=r[3],l=c*n+s*a-u*i,h=c*i+u*n-o*a,f=c*a+o*i-s*n,d=-o*n-s*i-u*a;return t[0]=l*c+d*-o+h*-u-f*-s,t[1]=h*c+d*-s+f*-o-l*-u,t[2]=f*c+d*-u+l*-s-h*-o,t},u.forEach=function(){var t=u.create();return function(e,r,n,i,a,o){var s,u;for(r||(r=4),n||(n=0),u=i?Math.min(i*r+n,e.length):e.length,s=n;s<u;s+=r)t[0]=e[s],t[1]=e[s+1],t[2]=e[s+2],t[3]=e[s+3],a(t,t,o),e[s]=t[0],e[s+1]=t[1],e[s+2]=t[2],e[s+3]=t[3];return e}}(),u.str=function(t){return"vec4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},"undefined"!=typeof t&&(t.vec4=u);var c={};c.create=function(){var t=new r(4);return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},c.clone=function(t){var e=new r(4);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},c.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},c.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},c.transpose=function(t,e){if(t===e){var r=e[1];t[1]=e[2],t[2]=r}else t[0]=e[0],t[1]=e[2],t[2]=e[1],t[3]=e[3];return t},c.invert=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=r*a-i*n;return o?(o=1/o,t[0]=a*o,t[1]=-n*o,t[2]=-i*o,t[3]=r*o,t):null},c.adjoint=function(t,e){var r=e[0];return t[0]=e[3],t[1]=-e[1],t[2]=-e[2],t[3]=r,t},c.determinant=function(t){return t[0]*t[3]-t[2]*t[1]},c.multiply=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=r[0],u=r[1],c=r[2],l=r[3];return t[0]=n*s+a*u,t[1]=i*s+o*u,t[2]=n*c+a*l,t[3]=i*c+o*l,t},c.mul=c.multiply,c.rotate=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=Math.sin(r),u=Math.cos(r);return t[0]=n*u+a*s,t[1]=i*u+o*s,t[2]=n*-s+a*u,t[3]=i*-s+o*u,t},c.scale=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=r[0],u=r[1];return t[0]=n*s,t[1]=i*s,t[2]=a*u,t[3]=o*u,t},c.str=function(t){return"mat2("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},c.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2))},c.LDU=function(t,e,r,n){return t[2]=n[2]/n[0],r[0]=n[0],r[1]=n[1],r[3]=n[3]-t[2]*r[1],[t,e,r]},"undefined"!=typeof t&&(t.mat2=c);var l={};l.create=function(){var t=new r(6);return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},l.clone=function(t){var e=new r(6);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e},l.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t},l.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},l.invert=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=r*a-n*i;return u?(u=1/u,t[0]=a*u,t[1]=-n*u,t[2]=-i*u,t[3]=r*u,t[4]=(i*s-a*o)*u,t[5]=(n*o-r*s)*u,t):null},l.determinant=function(t){return t[0]*t[3]-t[1]*t[2]},l.multiply=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],c=r[0],l=r[1],h=r[2],f=r[3],d=r[4],_=r[5];return t[0]=n*c+a*l,t[1]=i*c+o*l,t[2]=n*h+a*f,t[3]=i*h+o*f,t[4]=n*d+a*_+s,t[5]=i*d+o*_+u,t},l.mul=l.multiply,l.rotate=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],c=Math.sin(r),l=Math.cos(r);return t[0]=n*l+a*c,t[1]=i*l+o*c,t[2]=n*-c+a*l,t[3]=i*-c+o*l,t[4]=s,t[5]=u,t},l.scale=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],c=r[0],l=r[1];return t[0]=n*c,t[1]=i*c,t[2]=a*l,t[3]=o*l,t[4]=s,t[5]=u,t},l.translate=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],c=r[0],l=r[1];return t[0]=n,t[1]=i,t[2]=a,t[3]=o,t[4]=n*c+a*l+s,t[5]=i*c+o*l+u,t},l.str=function(t){return"mat2d("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+")"},l.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+1)},"undefined"!=typeof t&&(t.mat2d=l);var h={};h.create=function(){var t=new r(9);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},h.fromMat4=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[4],t[4]=e[5],t[5]=e[6],t[6]=e[8],t[7]=e[9],t[8]=e[10],t},h.clone=function(t){var e=new r(9);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},h.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},h.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},h.transpose=function(t,e){if(t===e){var r=e[1],n=e[2],i=e[5];t[1]=e[3],t[2]=e[6],t[3]=r,t[5]=e[7],t[6]=n,t[7]=i}else t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8];return t},h.invert=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=e[6],c=e[7],l=e[8],h=l*o-s*c,f=-l*a+s*u,d=c*a-o*u,_=r*h+n*f+i*d;return _?(_=1/_,t[0]=h*_,t[1]=(-l*n+i*c)*_,t[2]=(s*n-i*o)*_,t[3]=f*_,t[4]=(l*r-i*u)*_,t[5]=(-s*r+i*a)*_,t[6]=d*_,t[7]=(-c*r+n*u)*_,t[8]=(o*r-n*a)*_,t):null},h.adjoint=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=e[6],c=e[7],l=e[8];return t[0]=o*l-s*c,t[1]=i*c-n*l,t[2]=n*s-i*o,t[3]=s*u-a*l,t[4]=r*l-i*u,t[5]=i*a-r*s,t[6]=a*c-o*u,t[7]=n*u-r*c,t[8]=r*o-n*a,t},h.determinant=function(t){var e=t[0],r=t[1],n=t[2],i=t[3],a=t[4],o=t[5],s=t[6],u=t[7],c=t[8];return e*(c*a-o*u)+r*(-c*i+o*s)+n*(u*i-a*s)},h.multiply=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],c=e[6],l=e[7],h=e[8],f=r[0],d=r[1],_=r[2],p=r[3],m=r[4],v=r[5],g=r[6],y=r[7],x=r[8];return t[0]=f*n+d*o+_*c,t[1]=f*i+d*s+_*l,t[2]=f*a+d*u+_*h,t[3]=p*n+m*o+v*c,t[4]=p*i+m*s+v*l,t[5]=p*a+m*u+v*h,t[6]=g*n+y*o+x*c,t[7]=g*i+y*s+x*l,t[8]=g*a+y*u+x*h,t},h.mul=h.multiply,h.translate=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],c=e[6],l=e[7],h=e[8],f=r[0],d=r[1];return t[0]=n,t[1]=i,t[2]=a,t[3]=o,t[4]=s,t[5]=u,t[6]=f*n+d*o+c,t[7]=f*i+d*s+l,t[8]=f*a+d*u+h,t},h.rotate=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],c=e[6],l=e[7],h=e[8],f=Math.sin(r),d=Math.cos(r);return t[0]=d*n+f*o,t[1]=d*i+f*s,t[2]=d*a+f*u,t[3]=d*o-f*n,t[4]=d*s-f*i,t[5]=d*u-f*a,t[6]=c,t[7]=l,t[8]=h,t},h.scale=function(t,e,r){var n=r[0],i=r[1];return t[0]=n*e[0],t[1]=n*e[1],t[2]=n*e[2],t[3]=i*e[3],t[4]=i*e[4],t[5]=i*e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},h.fromMat2d=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=0,t[3]=e[2],t[4]=e[3],t[5]=0,t[6]=e[4],t[7]=e[5],t[8]=1,t},h.fromQuat=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=r+r,s=n+n,u=i+i,c=r*o,l=n*o,h=n*s,f=i*o,d=i*s,_=i*u,p=a*o,m=a*s,v=a*u;return t[0]=1-h-_,t[3]=l-v,t[6]=f+m,t[1]=l+v,t[4]=1-c-_,t[7]=d-p,t[2]=f-m,t[5]=d+p,t[8]=1-c-h,t},h.normalFromMat4=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=e[6],c=e[7],l=e[8],h=e[9],f=e[10],d=e[11],_=e[12],p=e[13],m=e[14],v=e[15],g=r*s-n*o,y=r*u-i*o,x=r*c-a*o,T=n*u-i*s,b=n*c-a*s,E=i*c-a*u,w=l*p-h*_,S=l*m-f*_,A=l*v-d*_,M=h*m-f*p,C=h*v-d*p,L=f*v-d*m,R=g*L-y*C+x*M+T*A-b*S+E*w;return R?(R=1/R,t[0]=(s*L-u*C+c*M)*R,t[1]=(u*A-o*L-c*S)*R,t[2]=(o*C-s*A+c*w)*R,t[3]=(i*C-n*L-a*M)*R,t[4]=(r*L-i*A+a*S)*R,t[5]=(n*A-r*C-a*w)*R,t[6]=(p*E-m*b+v*T)*R,t[7]=(m*x-_*E-v*y)*R,t[8]=(_*b-p*x+v*g)*R,t):null},h.str=function(t){return"mat3("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+")"},h.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2))},"undefined"!=typeof t&&(t.mat3=h);var f={};f.create=function(){var t=new r(16);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},f.clone=function(t){var e=new r(16);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},f.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},f.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},f.transpose=function(t,e){if(t===e){var r=e[1],n=e[2],i=e[3],a=e[6],o=e[7],s=e[11];t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=r,t[6]=e[9],t[7]=e[13],t[8]=n,t[9]=a,t[11]=e[14],t[12]=i,t[13]=o,t[14]=s}else t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=e[1],t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=e[2],t[9]=e[6],t[10]=e[10],t[11]=e[14],t[12]=e[3],t[13]=e[7],t[14]=e[11],t[15]=e[15];return t},f.invert=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=e[6],c=e[7],l=e[8],h=e[9],f=e[10],d=e[11],_=e[12],p=e[13],m=e[14],v=e[15],g=r*s-n*o,y=r*u-i*o,x=r*c-a*o,T=n*u-i*s,b=n*c-a*s,E=i*c-a*u,w=l*p-h*_,S=l*m-f*_,A=l*v-d*_,M=h*m-f*p,C=h*v-d*p,L=f*v-d*m,R=g*L-y*C+x*M+T*A-b*S+E*w;return R?(R=1/R,t[0]=(s*L-u*C+c*M)*R,t[1]=(i*C-n*L-a*M)*R,t[2]=(p*E-m*b+v*T)*R,t[3]=(f*b-h*E-d*T)*R,t[4]=(u*A-o*L-c*S)*R,t[5]=(r*L-i*A+a*S)*R,t[6]=(m*x-_*E-v*y)*R,t[7]=(l*E-f*x+d*y)*R,t[8]=(o*C-s*A+c*w)*R,t[9]=(n*A-r*C-a*w)*R,t[10]=(_*b-p*x+v*g)*R,t[11]=(h*x-l*b-d*g)*R,t[12]=(s*S-o*M-u*w)*R,t[13]=(r*M-n*S+i*w)*R,t[14]=(p*y-_*T-m*g)*R,t[15]=(l*T-h*y+f*g)*R,t):null},f.adjoint=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=e[6],c=e[7],l=e[8],h=e[9],f=e[10],d=e[11],_=e[12],p=e[13],m=e[14],v=e[15];return t[0]=s*(f*v-d*m)-h*(u*v-c*m)+p*(u*d-c*f),t[1]=-(n*(f*v-d*m)-h*(i*v-a*m)+p*(i*d-a*f)),t[2]=n*(u*v-c*m)-s*(i*v-a*m)+p*(i*c-a*u),t[3]=-(n*(u*d-c*f)-s*(i*d-a*f)+h*(i*c-a*u)),t[4]=-(o*(f*v-d*m)-l*(u*v-c*m)+_*(u*d-c*f)),t[5]=r*(f*v-d*m)-l*(i*v-a*m)+_*(i*d-a*f),t[6]=-(r*(u*v-c*m)-o*(i*v-a*m)+_*(i*c-a*u)),t[7]=r*(u*d-c*f)-o*(i*d-a*f)+l*(i*c-a*u),t[8]=o*(h*v-d*p)-l*(s*v-c*p)+_*(s*d-c*h),t[9]=-(r*(h*v-d*p)-l*(n*v-a*p)+_*(n*d-a*h)),t[10]=r*(s*v-c*p)-o*(n*v-a*p)+_*(n*c-a*s),t[11]=-(r*(s*d-c*h)-o*(n*d-a*h)+l*(n*c-a*s)),t[12]=-(o*(h*m-f*p)-l*(s*m-u*p)+_*(s*f-u*h)),t[13]=r*(h*m-f*p)-l*(n*m-i*p)+_*(n*f-i*h),t[14]=-(r*(s*m-u*p)-o*(n*m-i*p)+_*(n*u-i*s)),t[15]=r*(s*f-u*h)-o*(n*f-i*h)+l*(n*u-i*s),t},f.determinant=function(t){var e=t[0],r=t[1],n=t[2],i=t[3],a=t[4],o=t[5],s=t[6],u=t[7],c=t[8],l=t[9],h=t[10],f=t[11],d=t[12],_=t[13],p=t[14],m=t[15],v=e*o-r*a,g=e*s-n*a,y=e*u-i*a,x=r*s-n*o,T=r*u-i*o,b=n*u-i*s,E=c*_-l*d,w=c*p-h*d,S=c*m-f*d,A=l*p-h*_,M=l*m-f*_,C=h*m-f*p;return v*C-g*M+y*A+x*S-T*w+b*E},f.multiply=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],c=e[6],l=e[7],h=e[8],f=e[9],d=e[10],_=e[11],p=e[12],m=e[13],v=e[14],g=e[15],y=r[0],x=r[1],T=r[2],b=r[3];return t[0]=y*n+x*s+T*h+b*p,t[1]=y*i+x*u+T*f+b*m,t[2]=y*a+x*c+T*d+b*v,t[3]=y*o+x*l+T*_+b*g,y=r[4],x=r[5],T=r[6],b=r[7],t[4]=y*n+x*s+T*h+b*p,t[5]=y*i+x*u+T*f+b*m,t[6]=y*a+x*c+T*d+b*v,t[7]=y*o+x*l+T*_+b*g,y=r[8],x=r[9],T=r[10],b=r[11],t[8]=y*n+x*s+T*h+b*p,t[9]=y*i+x*u+T*f+b*m,t[10]=y*a+x*c+T*d+b*v,t[11]=y*o+x*l+T*_+b*g,y=r[12],x=r[13],T=r[14],b=r[15],t[12]=y*n+x*s+T*h+b*p,t[13]=y*i+x*u+T*f+b*m,t[14]=y*a+x*c+T*d+b*v,t[15]=y*o+x*l+T*_+b*g,t},f.multiplyAffine=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[4],s=e[5],u=e[6],c=e[8],l=e[9],h=e[10],f=e[12],d=e[13],_=e[14],p=r[0],m=r[1],v=r[2];return t[0]=p*n+m*o+v*c,t[1]=p*i+m*s+v*l,t[2]=p*a+m*u+v*h,p=r[4],m=r[5],v=r[6],t[4]=p*n+m*o+v*c,t[5]=p*i+m*s+v*l,t[6]=p*a+m*u+v*h,p=r[8],m=r[9],v=r[10],t[8]=p*n+m*o+v*c,t[9]=p*i+m*s+v*l,t[10]=p*a+m*u+v*h,p=r[12],m=r[13],v=r[14],t[12]=p*n+m*o+v*c+f,t[13]=p*i+m*s+v*l+d,t[14]=p*a+m*u+v*h+_,t},f.mul=f.multiply,f.mulAffine=f.multiplyAffine,f.translate=function(t,e,r){var n,i,a,o,s,u,c,l,h,f,d,_,p=r[0],m=r[1],v=r[2];return e===t?(t[12]=e[0]*p+e[4]*m+e[8]*v+e[12],t[13]=e[1]*p+e[5]*m+e[9]*v+e[13],t[14]=e[2]*p+e[6]*m+e[10]*v+e[14],t[15]=e[3]*p+e[7]*m+e[11]*v+e[15]):(n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],c=e[6],l=e[7],h=e[8],f=e[9],d=e[10],_=e[11],t[0]=n,t[1]=i,t[2]=a,t[3]=o,t[4]=s,t[5]=u,t[6]=c,t[7]=l,t[8]=h,t[9]=f,t[10]=d,t[11]=_,t[12]=n*p+s*m+h*v+e[12],t[13]=i*p+u*m+f*v+e[13],t[14]=a*p+c*m+d*v+e[14],t[15]=o*p+l*m+_*v+e[15]),t},f.scale=function(t,e,r){var n=r[0],i=r[1],a=r[2];return t[0]=e[0]*n,t[1]=e[1]*n,t[2]=e[2]*n,t[3]=e[3]*n,t[4]=e[4]*i,t[5]=e[5]*i,t[6]=e[6]*i,t[7]=e[7]*i,t[8]=e[8]*a,t[9]=e[9]*a,t[10]=e[10]*a,t[11]=e[11]*a,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},f.rotate=function(t,r,n,i){var a,o,s,u,c,l,h,f,d,_,p,m,v,g,y,x,T,b,E,w,S,A,M,C,L=i[0],R=i[1],N=i[2],D=Math.sqrt(L*L+R*R+N*N);return Math.abs(D)<e?null:(D=1/D,L*=D,R*=D,N*=D,a=Math.sin(n),o=Math.cos(n),s=1-o,u=r[0],c=r[1],l=r[2],h=r[3],f=r[4],d=r[5],_=r[6],p=r[7],m=r[8],v=r[9],g=r[10],y=r[11],x=L*L*s+o,T=R*L*s+N*a,b=N*L*s-R*a,E=L*R*s-N*a,w=R*R*s+o,S=N*R*s+L*a,A=L*N*s+R*a,M=R*N*s-L*a,C=N*N*s+o,t[0]=u*x+f*T+m*b,t[1]=c*x+d*T+v*b,t[2]=l*x+_*T+g*b,t[3]=h*x+p*T+y*b,t[4]=u*E+f*w+m*S,t[5]=c*E+d*w+v*S,t[6]=l*E+_*w+g*S,t[7]=h*E+p*w+y*S,t[8]=u*A+f*M+m*C,t[9]=c*A+d*M+v*C,t[10]=l*A+_*M+g*C,t[11]=h*A+p*M+y*C,r!==t&&(t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15]),t)},f.rotateX=function(t,e,r){var n=Math.sin(r),i=Math.cos(r),a=e[4],o=e[5],s=e[6],u=e[7],c=e[8],l=e[9],h=e[10],f=e[11];return e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[4]=a*i+c*n,t[5]=o*i+l*n,t[6]=s*i+h*n,t[7]=u*i+f*n,t[8]=c*i-a*n,t[9]=l*i-o*n,t[10]=h*i-s*n,t[11]=f*i-u*n,t},f.rotateY=function(t,e,r){var n=Math.sin(r),i=Math.cos(r),a=e[0],o=e[1],s=e[2],u=e[3],c=e[8],l=e[9],h=e[10],f=e[11];return e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=a*i-c*n,t[1]=o*i-l*n,t[2]=s*i-h*n,t[3]=u*i-f*n,t[8]=a*n+c*i,t[9]=o*n+l*i,t[10]=s*n+h*i,t[11]=u*n+f*i,t},f.rotateZ=function(t,e,r){var n=Math.sin(r),i=Math.cos(r),a=e[0],o=e[1],s=e[2],u=e[3],c=e[4],l=e[5],h=e[6],f=e[7];return e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=a*i+c*n,t[1]=o*i+l*n,t[2]=s*i+h*n,t[3]=u*i+f*n,t[4]=c*i-a*n,t[5]=l*i-o*n,t[6]=h*i-s*n,t[7]=f*i-u*n,t},f.fromRotationTranslation=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=n+n,u=i+i,c=a+a,l=n*s,h=n*u,f=n*c,d=i*u,_=i*c,p=a*c,m=o*s,v=o*u,g=o*c;return t[0]=1-(d+p),t[1]=h+g,t[2]=f-v,t[3]=0,t[4]=h-g,t[5]=1-(l+p),t[6]=_+m,t[7]=0,t[8]=f+v,t[9]=_-m,t[10]=1-(l+d),t[11]=0,t[12]=r[0],t[13]=r[1],t[14]=r[2],t[15]=1,t},f.fromQuat=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=r+r,s=n+n,u=i+i,c=r*o,l=n*o,h=n*s,f=i*o,d=i*s,_=i*u,p=a*o,m=a*s,v=a*u;return t[0]=1-h-_,t[1]=l+v,t[2]=f-m,t[3]=0,t[4]=l-v,t[5]=1-c-_,t[6]=d+p,t[7]=0,t[8]=f+m,t[9]=d-p,t[10]=1-c-h,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},f.frustum=function(t,e,r,n,i,a,o){var s=1/(r-e),u=1/(i-n),c=1/(a-o);return t[0]=2*a*s,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*a*u,t[6]=0,t[7]=0,t[8]=(r+e)*s,t[9]=(i+n)*u,t[10]=(o+a)*c,t[11]=-1,t[12]=0,t[13]=0,t[14]=o*a*2*c,t[15]=0,t},f.perspective=function(t,e,r,n,i){var a=1/Math.tan(e/2),o=1/(n-i);return t[0]=a/r,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=(i+n)*o,t[11]=-1,t[12]=0,t[13]=0,t[14]=2*i*n*o,t[15]=0,t},f.ortho=function(t,e,r,n,i,a,o){var s=1/(e-r),u=1/(n-i),c=1/(a-o);return t[0]=-2*s,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*u,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*c,t[11]=0,t[12]=(e+r)*s,t[13]=(i+n)*u,t[14]=(o+a)*c,t[15]=1,t},f.lookAt=function(t,r,n,i){var a,o,s,u,c,l,h,d,_,p,m=r[0],v=r[1],g=r[2],y=i[0],x=i[1],T=i[2],b=n[0],E=n[1],w=n[2];return Math.abs(m-b)<e&&Math.abs(v-E)<e&&Math.abs(g-w)<e?f.identity(t):(h=m-b,d=v-E,_=g-w,p=1/Math.sqrt(h*h+d*d+_*_),h*=p,d*=p,_*=p,a=x*_-T*d,o=T*h-y*_,s=y*d-x*h,p=Math.sqrt(a*a+o*o+s*s),p?(p=1/p,a*=p,o*=p,s*=p):(a=0,o=0,s=0),u=d*s-_*o,c=_*a-h*s,l=h*o-d*a,p=Math.sqrt(u*u+c*c+l*l),p?(p=1/p,u*=p,c*=p,l*=p):(u=0,c=0,l=0),t[0]=a,t[1]=u,t[2]=h,t[3]=0,t[4]=o,t[5]=c,t[6]=d,t[7]=0,t[8]=s,t[9]=l,t[10]=_,t[11]=0,t[12]=-(a*m+o*v+s*g),t[13]=-(u*m+c*v+l*g),t[14]=-(h*m+d*v+_*g),t[15]=1,t)},f.str=function(t){return"mat4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+", "+t[9]+", "+t[10]+", "+t[11]+", "+t[12]+", "+t[13]+", "+t[14]+", "+t[15]+")"},f.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2)+Math.pow(t[9],2)+Math.pow(t[10],2)+Math.pow(t[11],2)+Math.pow(t[12],2)+Math.pow(t[13],2)+Math.pow(t[14],2)+Math.pow(t[15],2))},"undefined"!=typeof t&&(t.mat4=f);var d={};d.create=function(){var t=new r(4);return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},d.rotationTo=function(){var t=s.create(),e=s.fromValues(1,0,0),r=s.fromValues(0,1,0);return function(n,i,a){var o=s.dot(i,a);return o<-.999999?(s.cross(t,e,i),s.length(t)<1e-6&&s.cross(t,r,i),s.normalize(t,t),d.setAxisAngle(n,t,Math.PI),n):o>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(s.cross(t,i,a),n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=1+o,d.normalize(n,n))}}(),d.setAxes=function(){var t=h.create();return function(e,r,n,i){return t[0]=n[0],t[3]=n[1],t[6]=n[2],t[1]=i[0],t[4]=i[1],t[7]=i[2],t[2]=-r[0],t[5]=-r[1],t[8]=-r[2],d.normalize(e,d.fromMat3(e,t))}}(),d.clone=u.clone,d.fromValues=u.fromValues,d.copy=u.copy,d.set=u.set,d.identity=function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},d.setAxisAngle=function(t,e,r){r*=.5;var n=Math.sin(r);return t[0]=n*e[0],t[1]=n*e[1],t[2]=n*e[2],t[3]=Math.cos(r),t},d.add=u.add,d.multiply=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=r[0],u=r[1],c=r[2],l=r[3];return t[0]=n*l+o*s+i*c-a*u,t[1]=i*l+o*u+a*s-n*c,t[2]=a*l+o*c+n*u-i*s,t[3]=o*l-n*s-i*u-a*c,t},d.mul=d.multiply,d.scale=u.scale,d.rotateX=function(t,e,r){r*=.5;var n=e[0],i=e[1],a=e[2],o=e[3],s=Math.sin(r),u=Math.cos(r);return t[0]=n*u+o*s,t[1]=i*u+a*s,t[2]=a*u-i*s,t[3]=o*u-n*s,t},d.rotateY=function(t,e,r){r*=.5;var n=e[0],i=e[1],a=e[2],o=e[3],s=Math.sin(r),u=Math.cos(r);return t[0]=n*u-a*s,t[1]=i*u+o*s,t[2]=a*u+n*s,t[3]=o*u-i*s,t},d.rotateZ=function(t,e,r){r*=.5;var n=e[0],i=e[1],a=e[2],o=e[3],s=Math.sin(r),u=Math.cos(r);return t[0]=n*u+i*s,t[1]=i*u-n*s,t[2]=a*u+o*s,t[3]=o*u-a*s,t},d.calculateW=function(t,e){var r=e[0],n=e[1],i=e[2];return t[0]=r,t[1]=n,t[2]=i,t[3]=Math.sqrt(Math.abs(1-r*r-n*n-i*i)),t},d.dot=u.dot,d.lerp=u.lerp,d.slerp=function(t,e,r,n){var i,a,o,s,u,c=e[0],l=e[1],h=e[2],f=e[3],d=r[0],_=r[1],p=r[2],m=r[3];return a=c*d+l*_+h*p+f*m,a<0&&(a=-a,d=-d,_=-_,p=-p,m=-m),1-a>1e-6?(i=Math.acos(a),o=Math.sin(i),s=Math.sin((1-n)*i)/o,u=Math.sin(n*i)/o):(s=1-n,u=n),t[0]=s*c+u*d,t[1]=s*l+u*_,t[2]=s*h+u*p,t[3]=s*f+u*m,t},d.invert=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=r*r+n*n+i*i+a*a,s=o?1/o:0;return t[0]=-r*s,t[1]=-n*s,t[2]=-i*s,t[3]=a*s,t},d.conjugate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=e[3],t},d.length=u.length,d.len=d.length,d.squaredLength=u.squaredLength,d.sqrLen=d.squaredLength,d.normalize=u.normalize,d.fromMat3=function(t,e){var r,n=e[0]+e[4]+e[8];if(n>0)r=Math.sqrt(n+1),t[3]=.5*r,r=.5/r,t[0]=(e[5]-e[7])*r,t[1]=(e[6]-e[2])*r,t[2]=(e[1]-e[3])*r;else{var i=0;e[4]>e[0]&&(i=1),e[8]>e[3*i+i]&&(i=2);var a=(i+1)%3,o=(i+2)%3;r=Math.sqrt(e[3*i+i]-e[3*a+a]-e[3*o+o]+1),t[i]=.5*r,r=.5/r,t[3]=(e[3*a+o]-e[3*o+a])*r,t[a]=(e[3*a+i]+e[3*i+a])*r,t[o]=(e[3*o+i]+e[3*i+o])*r}return t},d.str=function(t){return"quat("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},"undefined"!=typeof t&&(t.quat=d)}(r.exports)}(this)},function(t,e,r){"use strict";function n(t,e,r){return t<e?e:t>r?r:t}var i=r(2),a=i.vec3,o=function(t,e,r){t=t||0,e=e||0,r=r||0,this._array=a.fromValues(t,e,r),this._dirty=!0};o.prototype={constructor:o,add:function(t){return a.add(this._array,this._array,t._array),this._dirty=!0,this},set:function(t,e,r){return this._array[0]=t,this._array[1]=e,this._array[2]=r,this._dirty=!0,this},setArray:function(t){return this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._dirty=!0,this},clone:function(){return new o(this.x,this.y,this.z)},copy:function(t){return a.copy(this._array,t._array),this._dirty=!0,this},cross:function(t,e){return a.cross(this._array,t._array,e._array),this._dirty=!0,this},dist:function(t){return a.dist(this._array,t._array)},distance:function(t){return a.distance(this._array,t._array)},div:function(t){return a.div(this._array,this._array,t._array),this._dirty=!0,this},divide:function(t){return a.divide(this._array,this._array,t._array),this._dirty=!0,this},dot:function(t){return a.dot(this._array,t._array)},len:function(){return a.len(this._array)},length:function(){return a.length(this._array)},lerp:function(t,e,r){return a.lerp(this._array,t._array,e._array,r),this._dirty=!0,this},min:function(t){return a.min(this._array,this._array,t._array),this._dirty=!0,this},max:function(t){return a.max(this._array,this._array,t._array),this._dirty=!0,this},mul:function(t){return a.mul(this._array,this._array,t._array),this._dirty=!0,this},multiply:function(t){return a.multiply(this._array,this._array,t._array),this._dirty=!0,this},negate:function(){return a.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return a.normalize(this._array,this._array),this._dirty=!0,this},random:function(t){return a.random(this._array,t),this._dirty=!0,this},scale:function(t){return a.scale(this._array,this._array,t),this._dirty=!0,this},scaleAndAdd:function(t,e){return a.scaleAndAdd(this._array,this._array,t._array,e),this._dirty=!0,this},sqrDist:function(t){return a.sqrDist(this._array,t._array)},squaredDistance:function(t){return a.squaredDistance(this._array,t._array)},sqrLen:function(){return a.sqrLen(this._array)},squaredLength:function(){return a.squaredLength(this._array)},sub:function(t){return a.sub(this._array,this._array,t._array),this._dirty=!0,this},subtract:function(t){return a.subtract(this._array,this._array,t._array),this._dirty=!0,this},transformMat3:function(t){return a.transformMat3(this._array,this._array,t._array),this._dirty=!0,this},transformMat4:function(t){return a.transformMat4(this._array,this._array,t._array),this._dirty=!0,this},transformQuat:function(t){return a.transformQuat(this._array,this._array,t._array),this._dirty=!0,this},applyProjection:function(t){var e=this._array;if(t=t._array,0===t[15]){var r=-1/e[2];e[0]=t[0]*e[0]*r,e[1]=t[5]*e[1]*r,e[2]=(t[10]*e[2]+t[14])*r}else e[0]=t[0]*e[0]+t[12],e[1]=t[5]*e[1]+t[13],e[2]=t[10]*e[2]+t[14];return this._dirty=!0,this},eulerFromQuat:function(t,e){o.eulerFromQuat(this,t,e)},eulerFromMat3:function(t,e){o.eulerFromMat3(this,t,e)},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]";
},toArray:function(){return Array.prototype.slice.call(this._array)}};var s=Object.defineProperty;if(s){var u=o.prototype;s(u,"x",{get:function(){return this._array[0]},set:function(t){this._array[0]=t,this._dirty=!0}}),s(u,"y",{get:function(){return this._array[1]},set:function(t){this._array[1]=t,this._dirty=!0}}),s(u,"z",{get:function(){return this._array[2]},set:function(t){this._array[2]=t,this._dirty=!0}})}o.add=function(t,e,r){return a.add(t._array,e._array,r._array),t._dirty=!0,t},o.set=function(t,e,r,n){a.set(t._array,e,r,n),t._dirty=!0},o.copy=function(t,e){return a.copy(t._array,e._array),t._dirty=!0,t},o.cross=function(t,e,r){return a.cross(t._array,e._array,r._array),t._dirty=!0,t},o.dist=function(t,e){return a.distance(t._array,e._array)},o.distance=o.dist,o.div=function(t,e,r){return a.divide(t._array,e._array,r._array),t._dirty=!0,t},o.divide=o.div,o.dot=function(t,e){return a.dot(t._array,e._array)},o.len=function(t){return a.length(t._array)},o.lerp=function(t,e,r,n){return a.lerp(t._array,e._array,r._array,n),t._dirty=!0,t},o.min=function(t,e,r){return a.min(t._array,e._array,r._array),t._dirty=!0,t},o.max=function(t,e,r){return a.max(t._array,e._array,r._array),t._dirty=!0,t},o.mul=function(t,e,r){return a.multiply(t._array,e._array,r._array),t._dirty=!0,t},o.multiply=o.mul,o.negate=function(t,e){return a.negate(t._array,e._array),t._dirty=!0,t},o.normalize=function(t,e){return a.normalize(t._array,e._array),t._dirty=!0,t},o.random=function(t,e){return a.random(t._array,e),t._dirty=!0,t},o.scale=function(t,e,r){return a.scale(t._array,e._array,r),t._dirty=!0,t},o.scaleAndAdd=function(t,e,r,n){return a.scaleAndAdd(t._array,e._array,r._array,n),t._dirty=!0,t},o.sqrDist=function(t,e){return a.sqrDist(t._array,e._array)},o.squaredDistance=o.sqrDist,o.sqrLen=function(t){return a.sqrLen(t._array)},o.squaredLength=o.sqrLen,o.sub=function(t,e,r){return a.subtract(t._array,e._array,r._array),t._dirty=!0,t},o.subtract=o.sub,o.transformMat3=function(t,e,r){return a.transformMat3(t._array,e._array,r._array),t._dirty=!0,t},o.transformMat4=function(t,e,r){return a.transformMat4(t._array,e._array,r._array),t._dirty=!0,t},o.transformQuat=function(t,e,r){return a.transformQuat(t._array,e._array,r._array),t._dirty=!0,t};var c=Math.atan2,l=Math.asin,h=Math.abs;o.eulerFromQuat=function(t,e,r){t._dirty=!0,e=e._array;var i=t._array,a=e[0],o=e[1],s=e[2],u=e[3],h=a*a,f=o*o,d=s*s,_=u*u,r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":i[0]=c(2*(a*u-o*s),_-h-f+d),i[1]=l(n(2*(a*s+o*u),-1,1)),i[2]=c(2*(s*u-a*o),_+h-f-d);break;case"YXZ":i[0]=l(n(2*(a*u-o*s),-1,1)),i[1]=c(2*(a*s+o*u),_-h-f+d),i[2]=c(2*(a*o+s*u),_-h+f-d);break;case"ZXY":i[0]=l(n(2*(a*u+o*s),-1,1)),i[1]=c(2*(o*u-s*a),_-h-f+d),i[2]=c(2*(s*u-a*o),_-h+f-d);break;case"ZYX":i[0]=c(2*(a*u+s*o),_-h-f+d),i[1]=l(n(2*(o*u-a*s),-1,1)),i[2]=c(2*(a*o+s*u),_+h-f-d);break;case"YZX":i[0]=c(2*(a*u-s*o),_-h+f-d),i[1]=c(2*(o*u-a*s),_+h-f-d),i[2]=l(n(2*(a*o+s*u),-1,1));break;case"XZY":i[0]=c(2*(a*u+o*s),_-h+f-d),i[1]=c(2*(a*s+o*u),_+h-f-d),i[2]=l(n(2*(s*u-a*o),-1,1));break;default:console.warn("Unkown order: "+r)}return t},o.eulerFromMat3=function(t,e,r){var i=e._array,a=i[0],o=i[3],s=i[6],u=i[1],f=i[4],d=i[7],_=i[2],p=i[5],m=i[8],v=t._array,r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":v[1]=l(n(s,-1,1)),h(s)<.99999?(v[0]=c(-d,m),v[2]=c(-o,a)):(v[0]=c(p,f),v[2]=0);break;case"YXZ":v[0]=l(-n(d,-1,1)),h(d)<.99999?(v[1]=c(s,m),v[2]=c(u,f)):(v[1]=c(-_,a),v[2]=0);break;case"ZXY":v[0]=l(n(p,-1,1)),h(p)<.99999?(v[1]=c(-_,m),v[2]=c(-o,f)):(v[1]=0,v[2]=c(u,a));break;case"ZYX":v[1]=l(-n(_,-1,1)),h(_)<.99999?(v[0]=c(p,m),v[2]=c(u,a)):(v[0]=0,v[2]=c(-o,f));break;case"YZX":v[2]=l(n(u,-1,1)),h(u)<.99999?(v[0]=c(-d,f),v[1]=c(-_,a)):(v[0]=0,v[1]=c(s,m));break;case"XZY":v[2]=l(-n(o,-1,1)),h(o)<.99999?(v[0]=c(p,f),v[1]=c(s,a)):(v[0]=c(-d,m),v[1]=0);break;default:console.warn("Unkown order: "+r)}return t._dirty=!0,t},o.POSITIVE_X=new o(1,0,0),o.NEGATIVE_X=new o(-1,0,0),o.POSITIVE_Y=new o(0,1,0),o.NEGATIVE_Y=new o(0,-1,0),o.POSITIVE_Z=new o(0,0,1),o.NEGATIVE_Z=new o(0,0,-1),o.UP=new o(0,1,0),o.ZERO=new o(0,0,0),t.exports=o},function(t,e,r){function n(t){return!t||"none"===t}function i(t){return t instanceof HTMLCanvasElement||t instanceof HTMLImageElement||t instanceof Image}function a(t){return t.getZr&&t.setOption}var o=r(24),s=r(9),u=r(7),c=r(19),l=r(25),h=r(13),f=r(1),d=r(26),_=r(77),p=r(48),m=r(134),v=r(155),g=r(156),y=r(185),x=r(11),T=r(136);f.util.extend(l.prototype,T),u.import(r(181)),u.import(r(83)),u.import(r(82)),u.import(r(85)),u.import(r(86));var b=d.prototype.addToScene,E=d.prototype.removeFromScene;d.prototype.addToScene=function(t){if(b.call(this,t),this.__zr){var e=this.__zr;t.traverse(function(t){t.__zr=e,t.addAnimatorsToZr&&t.addAnimatorsToZr(e)})}},d.prototype.removeFromScene=function(t){E.call(this,t),t.traverse(function(t){var e=t.__zr;t.__zr=null,e&&t.removeAnimatorsFromZr&&t.removeAnimatorsFromZr(e)})},o.prototype.setTextureImage=function(t,e,r,i){null==r&&(r=i);var a=this.material;if(a&&a.shader){var o=r.getZr(),s=this;return a.shader.disableTexture(t),n(e)||w.loadTexture(e,r,i,function(e){e.surface&&e.surface.attachToMesh(s),a.shader.enableTexture(t),a.set(t,e),o&&o.refresh()}),a.get(t)}};var w={};w.Node=l,w.Mesh=o,w.Shader=u,w.createShader=function(t){var e=u.source(t+".vertex"),r=u.source(t+".fragment");return e||console.error("Vertex shader of '%s' not exits",t),r||console.error("Fragment shader of '%s' not exits",t),new u({vertex:e,fragment:r})},w.COMMON_SHADERS=["lambert","color","realistic"],w.Material=c,w.Texture2D=s,w.Geometry=h,w.SphereGeometry=r(67),w.PlaneGeometry=r(43),w.CubeGeometry=r(66),w.AmbientLight=r(154),w.DirectionalLight=r(68),w.PointLight=r(69),w.SpotLight=r(70),w.Vector2=r(28),w.Vector3=r(3),w.Vector4=r(161),w.Quaternion=r(45),w.Matrix2=r(158),w.Matrix2d=r(159),w.Matrix3=r(160),w.Matrix4=r(14),w.Plane=r(71),w.Ray=r(46),w.BoundingBox=r(10),w.Frustum=r(44);var S=p.createBlank("rgba(255,255,255,0)");w.loadTexture=function(t,e,r,n){"function"==typeof r&&(n=r,r={});for(var o=Object.keys(r).sort(),s="",u=0;u<o.length;u++)s+=o[u]+"_"+r[o[u]]+"_";var c=e.__textureCache=e.__textureCache||new _(20);if(a(t)){var l=t.__textureid__,h=c.get(s+l);if(h)h.texture.surface.setECharts(t),n&&n(h.texture);else{var f=new m(t);f.onupdate=function(){e.getZr().refresh()},h={texture:f.getTexture()};for(var u=0;u<o.length;u++)h.texture[o[u]]=r[o[u]];l=t.__textureid__||"__ecgl_ec__"+h.texture.__GUID__,t.__textureid__=l,c.put(s+l,h),n&&n(h.texture)}return h.texture}if(i(t)){var l=t.__textureid__,h=c.get(s+l);if(!h){h={texture:new w.Texture2D({image:t})};for(var u=0;u<o.length;u++)h.texture[o[u]]=r[o[u]];l=t.__textureid__||"__ecgl_image__"+h.texture.__GUID__,t.__textureid__=l,c.put(s+l,h),n&&n(h.texture)}return h.texture}var h=c.get(s+t);if(h)h.callbacks?h.callbacks.push(n):n&&n(h.texture);else if(t.match(/.hdr$/)){h={callbacks:[n]};var d=p.loadTexture(t,{exposure:r.exposure},function(){d.dirty(),h.callbacks.forEach(function(t){t&&t(d)}),h.callbacks=null});h.texture=d,c.put(s+t,h)}else{for(var d=new w.Texture2D({image:new Image}),u=0;u<o.length;u++)d[o[u]]=r[o[u]];h={texture:d,callbacks:[n]};var v=d.image;v.onload=function(){d.image=v,d.dirty(),h.callbacks.forEach(function(t){t&&t(d)}),h.callbacks=null},v.src=t,d.image=S,c.put(s+t,h)}return h.texture},w.createAmbientCubemap=function(t,e,r){t=t||{};var n=t.texture,i=x.firstNotNull(t.exposure,1),a=new v({intensity:x.firstNotNull(t.specularIntensity,1)}),o=new g({intensity:x.firstNotNull(t.diffuseIntensity,1),coefficients:[.844,.712,.691,-.037,.083,.167,.343,.288,.299,-.041,-.021,-.009,-.003,-.041,-.064,-.011,-.007,-.004,-.031,.034,.081,-.06,-.049,-.06,.046,.056,.05]});return a.cubemap=w.loadTexture(n,r,{exposure:i},function(){a.cubemap.flipY=!1,a.prefilter(e),o.coefficients=y.projectEnvironmentMap(e,a.cubemap)}),{specular:a,diffuse:o}},w.createBlankTexture=p.createBlank,w.isImage=i,w.additiveBlend=function(t){t.blendEquation(t.FUNC_ADD),t.blendFunc(t.SRC_ALPHA,t.ONE)},w.parseColor=function(t,e){return e=f.color.parse(t||"#000",e)||[0,0,0,0],e[0]/=255,e[1]/=255,e[2]/=255,e},w.directionFromAlphaBeta=function(t,e){var r=t/180*Math.PI+Math.PI/2,n=-e/180*Math.PI+Math.PI/2,i=[],a=Math.sin(r);return i[0]=a*Math.cos(n),i[1]=-Math.cos(r),i[2]=a*Math.sin(n),i},w.getShadowResolution=function(t){var e=1024;switch(t){case"low":e=512;break;case"medium":break;case"high":e=2048;break;case"ultra":e=4096}return e},t.exports=w},function(t,e,r){"use strict";var n=r(152),i=r(153),a=r(23),o=function(){this.__GUID__=a.genGUID()};o.__initializers__=[function(t){a.extend(this,t)}],a.extend(o,n),a.extend(o.prototype,i),t.exports=o},function(t,e){t.exports={DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,FUNC_ADD:32774,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,BLEND_COLOR:32773,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,CULL_FACE:2884,BLEND:3042,DITHER:3024,STENCIL_TEST:2960,DEPTH_TEST:2929,SCISSOR_TEST:3089,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CW:2304,CCW:2305,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_UNIFORMS:35718,ACTIVE_ATTRIBUTES:35721,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,NOTEQUAL:517,GEQUAL:518,ALWAYS:519,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,VENDOR:7936,RENDERER:7937,VERSION:7938,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,COMPILE_STATUS:35713,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,CONTEXT_LOST_WEBGL:37442,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,BROWSER_DEFAULT_WEBGL:37444}},function(t,e,r){"use strict";function n(){return{locations:{},attriblocations:{}}}function i(t,e,r){if(!t.getShaderParameter(e,t.COMPILE_STATUS))return[t.getShaderInfoLog(e),a(r)].join("\n")}function a(t){for(var e=t.split("\n"),r=0,n=e.length;r<n;r++)e[r]=r+1+": "+e[r];return e.join("\n")}var o=r(5),s=r(23),u=r(36),c=r(17),l=r(2),h=(r(16),l.mat2),f=l.mat3,d=l.mat4,_=/uniform\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\s+([\w\,]+)?(\[.*?\])?\s*(:\s*([\S\s]+?))?;/g,p=/attribute\s+(float|int|vec2|vec3|vec4)\s+(\w*)\s*(:\s*(\w+))?;/g,m=/#define\s+(\w+)?(\s+[\w-.]+)?\s*;?\s*\n/g,v=/for\s*?\(int\s*?_idx_\s*\=\s*([\w-]+)\;\s*_idx_\s*<\s*([\w-]+);\s*_idx_\s*\+\+\s*\)\s*\{\{([\s\S]+?)(?=\}\})\}\}/g,g={bool:"1i",int:"1i",sampler2D:"t",samplerCube:"t",float:"1f",vec2:"2f",vec3:"3f",vec4:"4f",ivec2:"2i",ivec3:"3i",ivec4:"4i",mat2:"m2",mat3:"m3",mat4:"m4"},y={bool:function(){return!0},int:function(){return 0},float:function(){return 0},sampler2D:function(){return null},samplerCube:function(){return null},vec2:function(){return[0,0]},vec3:function(){return[0,0,0]},vec4:function(){return[0,0,0,0]},ivec2:function(){return[0,0]},ivec3:function(){return[0,0,0]},ivec4:function(){return[0,0,0,0]},mat2:function(){return h.create()},mat3:function(){return f.create()},mat4:function(){return d.create()},array:function(){return[]}},x=["POSITION","NORMAL","BINORMAL","TANGENT","TEXCOORD","TEXCOORD_0","TEXCOORD_1","COLOR","JOINT","WEIGHT"],T=["SKIN_MATRIX","VIEWPORT_SIZE","VIEWPORT","WINDOW_SIZE","NEAR","FAR"],b=["WORLD","VIEW","PROJECTION","WORLDVIEW","VIEWPROJECTION","WORLDVIEWPROJECTION","WORLDINVERSE","VIEWINVERSE","PROJECTIONINVERSE","WORLDVIEWINVERSE","VIEWPROJECTIONINVERSE","WORLDVIEWPROJECTIONINVERSE","WORLDTRANSPOSE","VIEWTRANSPOSE","PROJECTIONTRANSPOSE","WORLDVIEWTRANSPOSE","VIEWPROJECTIONTRANSPOSE","WORLDVIEWPROJECTIONTRANSPOSE","WORLDINVERSETRANSPOSE","VIEWINVERSETRANSPOSE","PROJECTIONINVERSETRANSPOSE","WORLDVIEWINVERSETRANSPOSE","VIEWPROJECTIONINVERSETRANSPOSE","WORLDVIEWPROJECTIONINVERSETRANSPOSE"],E={},w=1,S=2,A=3,M=o.extend(function(){return{vertex:"",fragment:"",precision:"highp",attribSemantics:{},matrixSemantics:{},uniformSemantics:{},matrixSemanticKeys:[],uniformTemplates:{},attributeTemplates:{},vertexDefines:{},fragmentDefines:{},extensions:["OES_standard_derivatives","EXT_shader_texture_lod"],lightGroup:0,lightNumber:{},_textureSlot:0,_attacheMaterialNumber:0,_uniformList:[],_textureStatus:{},_vertexProcessed:"",_fragmentProcessed:"",_currentLocationsMap:{}}},function(){this._cache=new u,this._codeDirty=!0,this._updateShaderString()},{isEqual:function(t){return!!t&&(this===t?!this._codeDirty:(t._codeDirty&&t._updateShaderString(),this._codeDirty&&this._updateShaderString(),!(t._vertexProcessed!==this._vertexProcessed||t._fragmentProcessed!==this._fragmentProcessed)))},setVertex:function(t){this.vertex=t,this._updateShaderString(),this.dirty()},setFragment:function(t){this.fragment=t,this._updateShaderString(),this.dirty()},bind:function(t){var e=this._cache;if(e.use(t.__GLID__,n),this._currentLocationsMap=e.get("locations"),this._textureSlot=0,this._codeDirty&&this._updateShaderString(),e.isDirty("program")){var r=this._buildProgram(t,this._vertexProcessed,this._fragmentProcessed);if(e.fresh("program"),r)return r}t.useProgram(e.get("program"))},dirty:function(){var t=this._cache;this._codeDirty=!0,t.dirtyAll("program");for(var e=0;e<t._caches.length;e++)if(t._caches[e]){var r=t._caches[e];r.locations={},r.attriblocations={}}},_updateShaderString:function(t){this.vertex===this._vertexPrev&&this.fragment===this._fragmentPrev||(this._parseImport(),this.attribSemantics={},this.matrixSemantics={},this._textureStatus={},this._parseUniforms(),this._parseAttributes(),this._parseDefines(),this._vertexPrev=this.vertex,this._fragmentPrev=this.fragment),this._addDefineExtensionAndPrecision(t),this._vertexProcessed=this._unrollLoop(this._vertexProcessed,this.vertexDefines),this._fragmentProcessed=this._unrollLoop(this._fragmentProcessed,this.fragmentDefines),this._codeDirty=!1},define:function(t,e,r){var n=this.vertexDefines,i=this.fragmentDefines;"vertex"!==t&&"fragment"!==t&&"both"!==t&&arguments.length<3&&(r=e,e=t,t="both"),r=null!=r?r:null,"vertex"!==t&&"both"!==t||n[e]!==r&&(n[e]=r,this.dirty()),"fragment"!==t&&"both"!==t||i[e]!==r&&(i[e]=r,"both"!==t&&this.dirty())},unDefine:function(t,e){"vertex"!==t&&"fragment"!==t&&"both"!==t&&arguments.length<2&&(e=t,t="both"),"vertex"!==t&&"both"!==t||this.isDefined("vertex",e)&&(delete this.vertexDefines[e],this.dirty()),"fragment"!==t&&"both"!==t||this.isDefined("fragment",e)&&(delete this.fragmentDefines[e],"both"!==t&&this.dirty())},isDefined:function(t,e){switch(t){case"vertex":return void 0!==this.vertexDefines[e];case"fragment":return void 0!==this.fragmentDefines[e]}},getDefine:function(t,e){switch(t){case"vertex":return this.vertexDefines[e];case"fragment":return this.fragmentDefines[e]}},enableTexture:function(t){if(t instanceof Array)for(var e=0;e<t.length;e++)this.enableTexture(t[e]);else{var r=this._textureStatus[t];if(r){var n=r.enabled;n||(r.enabled=!0,this.dirty())}}},enableTexturesAll:function(){var t=this._textureStatus;for(var e in t)t[e].enabled=!0;this.dirty()},disableTexture:function(t){if(t instanceof Array)for(var e=0;e<t.length;e++)this.disableTexture(t[e]);else{var r=this._textureStatus[t];if(r){var n=!r.enabled;n||(r.enabled=!1,this.dirty())}}},disableTexturesAll:function(){var t=this._textureStatus;for(var e in t)t[e].enabled=!1;this.dirty()},isTextureEnabled:function(t){var e=this._textureStatus;return e[t]&&e[t].enabled},getEnabledTextures:function(){var t=[],e=this._textureStatus;for(var r in e)e[r].enabled&&t.push(r);return t},hasUniform:function(t){var e=this._currentLocationsMap[t];return null!==e&&void 0!==e},currentTextureSlot:function(){return this._textureSlot},resetTextureSlot:function(t){this._textureSlot=t||0},useCurrentTextureSlot:function(t,e){var r=this._textureSlot;return this.useTextureSlot(t,e,r),this._textureSlot++,r},useTextureSlot:function(t,e,r){e&&(t.activeTexture(t.TEXTURE0+r),e.isRenderable()?e.bind(t):e.unbind(t))},setUniform:function(t,e,r,n){var i=this._currentLocationsMap,a=i[r];if(null===a||void 0===a)return!1;switch(e){case"m4":t.uniformMatrix4fv(a,!1,n);break;case"2i":t.uniform2i(a,n[0],n[1]);break;case"2f":t.uniform2f(a,n[0],n[1]);break;case"3i":t.uniform3i(a,n[0],n[1],n[2]);break;case"3f":t.uniform3f(a,n[0],n[1],n[2]);break;case"4i":t.uniform4i(a,n[0],n[1],n[2],n[3]);break;case"4f":t.uniform4f(a,n[0],n[1],n[2],n[3]);break;case"1i":t.uniform1i(a,n);break;case"1f":t.uniform1f(a,n);break;case"1fv":t.uniform1fv(a,n);break;case"1iv":t.uniform1iv(a,n);break;case"2iv":t.uniform2iv(a,n);break;case"2fv":t.uniform2fv(a,n);break;case"3iv":t.uniform3iv(a,n);break;case"3fv":t.uniform3fv(a,n);break;case"4iv":t.uniform4iv(a,n);break;case"4fv":t.uniform4fv(a,n);break;case"m2":case"m2v":t.uniformMatrix2fv(a,!1,n);break;case"m3":case"m3v":t.uniformMatrix3fv(a,!1,n);break;case"m4v":if(n instanceof Array){for(var o=new c.Float32Array(16*n.length),s=0,u=0;u<n.length;u++)for(var l=n[u],h=0;h<16;h++)o[s++]=l[h];t.uniformMatrix4fv(a,!1,o)}else n instanceof c.Float32Array&&t.uniformMatrix4fv(a,!1,n)}return!0},setUniformOfSemantic:function(t,e,r){var n=this.uniformSemantics[e];return!!n&&this.setUniform(t,n.type,n.symbol,r)},enableAttributes:function(t,e,r){var n,i=this._cache.get("program"),a=this._cache.get("attriblocations");n=r?r.__enabledAttributeList:E[t.__GLID__],n||(n=r?r.__enabledAttributeList=[]:E[t.__GLID__]=[]);for(var o=[],s=0;s<e.length;s++){var u=e[s];if(this.attributeTemplates[u]){var c=a[u];if(void 0===c){if(c=t.getAttribLocation(i,u),c===-1){o[s]=-1;continue}a[u]=c}o[s]=c,n[c]?n[c]=S:n[c]=w}else o[s]=-1}for(var s=0;s<n.length;s++)switch(n[s]){case w:t.enableVertexAttribArray(s),n[s]=A;break;case S:n[s]=A;break;case A:t.disableVertexAttribArray(s),n[s]=0}return o},_parseImport:function(){this._vertexProcessedWithoutDefine=M.parseImport(this.vertex),this._fragmentProcessedWithoutDefine=M.parseImport(this.fragment)},_addDefineExtensionAndPrecision:function(t){t=t||this.extensions;for(var e=[],r=0;r<t.length;r++)e.push("#extension GL_"+t[r]+" : enable");var n=this._getDefineStr(this.vertexDefines);this._vertexProcessed=n+"\n"+this._vertexProcessedWithoutDefine;var n=this._getDefineStr(this.fragmentDefines),i=n+"\n"+this._fragmentProcessedWithoutDefine;this._fragmentProcessed=e.join("\n")+"\n"+["precision",this.precision,"float"].join(" ")+";\n"+["precision",this.precision,"int"].join(" ")+";\n"+["precision",this.precision,"sampler2D"].join(" ")+";\n"+i},_getDefineStr:function(t){var e=this.lightNumber,r=this._textureStatus,n=[];for(var i in e){var a=e[i];a>0&&n.push("#define "+i.toUpperCase()+"_COUNT "+a)}for(var o in r){var s=r[o];s.enabled&&n.push("#define "+o.toUpperCase()+"_ENABLED")}for(var o in t){var u=t[o];null===u?n.push("#define "+o):n.push("#define "+o+" "+u.toString())}return n.join("\n")},_unrollLoop:function(t,e){function r(t,r,i,a){var o="";isNaN(r)&&(r=r in e?e[r]:n[r]),isNaN(i)&&(i=i in e?e[i]:n[i]);for(var s=parseInt(r);s<parseInt(i);s++)o+="{"+a.replace(/float\s*\(\s*_idx_\s*\)/g,s.toFixed(1)).replace(/_idx_/g,s)+"\n}";return o}var n={};for(var i in this.lightNumber)n[i+"_COUNT"]=this.lightNumber[i];return t.replace(v,r)},_parseUniforms:function(){function t(t,i,a,o,s,u){if(i&&a){var c,l=g[i],h=!0;if(l){if(r._uniformList.push(a),"sampler2D"!==i&&"samplerCube"!==i||(r._textureStatus[a]={enabled:!1,shaderType:n}),o&&(l+="v"),u)if(x.indexOf(u)>=0)r.attribSemantics[u]={symbol:a,type:l},h=!1;else if(b.indexOf(u)>=0){var f=!1,d=u;u.match(/TRANSPOSE$/)&&(f=!0,d=u.slice(0,-9)),r.matrixSemantics[u]={symbol:a,type:l,isTranspose:f,semanticNoTranspose:d},h=!1}else if(T.indexOf(u)>=0)r.uniformSemantics[u]={symbol:a,type:l},h=!1;else if("unconfigurable"===u)h=!1;else{if(c=r._parseDefaultValue(i,u),!c)throw new Error('Unkown semantic "'+u+'"');u=""}h&&(e[a]={type:l,value:o?y.array:c||y[i],semantic:u||null})}return["uniform",i,a,o].join(" ")+";\n"}}var e={},r=this,n="vertex";this._uniformList=[],this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(_,t),n="fragment",this._fragmentProcessedWithoutDefine=this._fragmentProcessedWithoutDefine.replace(_,t),r.matrixSemanticKeys=Object.keys(this.matrixSemantics),this.uniformTemplates=e},_parseDefaultValue:function(t,e){var r=/\[\s*(.*)\s*\]/;{if("vec2"!==t&&"vec3"!==t&&"vec4"!==t)return"bool"===t?function(){return"true"===e.toLowerCase()}:"float"===t?function(){return parseFloat(e)}:"int"===t?function(){return parseInt(e)}:void 0;var n=r.exec(e)[1];if(n){var i=n.split(/\s*,\s*/);return function(){return new c.Float32Array(i)}}}},createUniforms:function(){var t={};for(var e in this.uniformTemplates){var r=this.uniformTemplates[e];t[e]={type:r.type,value:r.value()}}return t},attached:function(){this._attacheMaterialNumber++},detached:function(){this._attacheMaterialNumber--},isAttachedToAny:function(){return 0!==this._attacheMaterialNumber},_parseAttributes:function(){function t(t,n,i,a,o){if(n&&i){var s=1;switch(n){case"vec4":s=4;break;case"vec3":s=3;break;case"vec2":s=2;break;case"float":s=1}if(e[i]={type:"float",size:s,semantic:o||null},o){if(x.indexOf(o)<0)throw new Error('Unkown semantic "'+o+'"');r.attribSemantics[o]={symbol:i,type:n}}}return["attribute",n,i].join(" ")+";\n"}var e={},r=this;this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(p,t),this.attributeTemplates=e},_parseDefines:function(){function t(t,n,i){var a="vertex"===r?e.vertexDefines:e.fragmentDefines;return a[n]||("false"==i?a[n]=!1:"true"==i?a[n]=!0:a[n]=i?parseFloat(i):null),""}var e=this,r="vertex";this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(m,t),r="fragment",this._fragmentProcessedWithoutDefine=this._fragmentProcessedWithoutDefine.replace(m,t)},_buildProgram:function(t,e,r){var n=this._cache;n.get("program")&&t.deleteProgram(n.get("program"));var a=t.createProgram(),o=t.createShader(t.VERTEX_SHADER);t.shaderSource(o,e),t.compileShader(o);var s=t.createShader(t.FRAGMENT_SHADER);t.shaderSource(s,r),t.compileShader(s);var u=i(t,o,e);if(u)return u;if(u=i(t,s,r))return u;if(t.attachShader(a,o),t.attachShader(a,s),this.attribSemantics.POSITION)t.bindAttribLocation(a,0,this.attribSemantics.POSITION.symbol);else{var c=Object.keys(this.attributeTemplates);t.bindAttribLocation(a,0,c[0])}if(t.linkProgram(a),!t.getProgramParameter(a,t.LINK_STATUS))return"Could not link program\nVALIDATE_STATUS: "+t.getProgramParameter(a,t.VALIDATE_STATUS)+", gl error ["+t.getError()+"]";for(var l=0;l<this._uniformList.length;l++){var h=this._uniformList[l],f=n.get("locations");f[h]=t.getUniformLocation(a,h)}t.deleteShader(o),t.deleteShader(s),n.put("program",a)},clone:function(){var t=new M({vertex:this.vertex,fragment:this.fragment,vertexDefines:s.clone(this.vertexDefines),fragmentDefines:s.clone(this.fragmentDefines)});for(var e in this._textureStatus)t._textureStatus[e]=s.clone(this._textureStatus[e]);return t},dispose:function(t){var e=this._cache;e.use(t.__GLID__);var r=e.get("program");r&&t.deleteProgram(r),e.deleteContext(t.__GLID__),this._locations={}}}),C=/(@import)\s*([0-9a-zA-Z_\-\.]*)/g;M.parseImport=function(t){return t=t.replace(C,function(t,e,r){var t=M.source(r);return t?M.parseImport(t):(console.error('Shader chunk "'+r+'" not existed in library'),"")})};var L=/(@export)\s*([0-9a-zA-Z_\-\.]*)\s*\n([\s\S]*?)@end/g;M.import=function(t){t.replace(L,function(t,e,r,n){var n=n.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+\x24)/g,"");if(n){for(var i,a=r.split("."),o=M.codes,s=0;s<a.length-1;)i=a[s++],o[i]||(o[i]={}),o=o[i];i=a[s],o[i]=n}return n})},M.codes={},M.source=function(t){for(var e=t.split("."),r=M.codes,n=0;r&&n<e.length;){var i=e[n++];r=r[i]}return"string"!=typeof r?(console.error('Shader "'+t+'" not existed in library'),""):r},t.exports=M},function(t,e,r){"use strict";var n=r(5),i=r(6),a=r(36),o=n.extend({width:512,height:512,type:i.UNSIGNED_BYTE,format:i.RGBA,wrapS:i.CLAMP_TO_EDGE,wrapT:i.CLAMP_TO_EDGE,minFilter:i.LINEAR_MIPMAP_LINEAR,magFilter:i.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1,dynamic:!1,NPOT:!1},function(){this._cache=new a},{getWebGLTexture:function(t){var e=this._cache;return e.use(t.__GLID__),e.miss("webgl_texture")&&e.put("webgl_texture",t.createTexture()),this.dynamic?this.update(t):e.isDirty()&&(this.update(t),e.fresh()),e.get("webgl_texture")},bind:function(){},unbind:function(){},dirty:function(){this._cache.dirtyAll()},update:function(t){},beforeUpdate:function(t){t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,this.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,this.unpackAlignment),this.fallBack()},fallBack:function(){var t=this.isPowerOfTwo();this.format===i.DEPTH_COMPONENT&&(this.useMipmap=!1),t&&this.useMipmap?(this.NPOT=!1,this._minFilterOriginal&&(this.minFilter=this._minFilterOriginal),this._magFilterOriginal&&(this.magFilter=this._magFilterOriginal),this._wrapSOriginal&&(this.wrapS=this._wrapSOriginal),this._wrapTOriginal&&(this.wrapT=this._wrapTOriginal)):(this.NPOT=!0,this._minFilterOriginal=this.minFilter,this._magFilterOriginal=this.magFilter,this._wrapSOriginal=this.wrapS,this._wrapTOriginal=this.wrapT,this.minFilter==i.NEAREST_MIPMAP_NEAREST||this.minFilter==i.NEAREST_MIPMAP_LINEAR?this.minFilter=i.NEAREST:this.minFilter!=i.LINEAR_MIPMAP_LINEAR&&this.minFilter!=i.LINEAR_MIPMAP_NEAREST||(this.minFilter=i.LINEAR),this.wrapS=i.CLAMP_TO_EDGE,this.wrapT=i.CLAMP_TO_EDGE)},nextHighestPowerOfTwo:function(t){--t;for(var e=1;e<32;e<<=1)t|=t>>e;return t+1},dispose:function(t){var e=this._cache;e.use(t.__GLID__);var r=e.get("webgl_texture");r&&t.deleteTexture(r),e.deleteContext(t.__GLID__)},isRenderable:function(){},isPowerOfTwo:function(){}});o.BYTE=i.BYTE,o.UNSIGNED_BYTE=i.UNSIGNED_BYTE,o.SHORT=i.SHORT,o.UNSIGNED_SHORT=i.UNSIGNED_SHORT,o.INT=i.INT,o.UNSIGNED_INT=i.UNSIGNED_INT,o.FLOAT=i.FLOAT,o.HALF_FLOAT=36193,o.UNSIGNED_INT_24_8_WEBGL=34042,o.DEPTH_COMPONENT=i.DEPTH_COMPONENT,o.DEPTH_STENCIL=i.DEPTH_STENCIL,o.ALPHA=i.ALPHA,o.RGB=i.RGB,o.RGBA=i.RGBA,o.LUMINANCE=i.LUMINANCE,o.LUMINANCE_ALPHA=i.LUMINANCE_ALPHA,o.COMPRESSED_RGB_S3TC_DXT1_EXT=33776,o.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777,o.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778,o.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779,o.NEAREST=i.NEAREST,o.LINEAR=i.LINEAR,o.NEAREST_MIPMAP_NEAREST=i.NEAREST_MIPMAP_NEAREST,o.LINEAR_MIPMAP_NEAREST=i.LINEAR_MIPMAP_NEAREST,o.NEAREST_MIPMAP_LINEAR=i.NEAREST_MIPMAP_LINEAR,o.LINEAR_MIPMAP_LINEAR=i.LINEAR_MIPMAP_LINEAR,o.REPEAT=i.REPEAT,o.CLAMP_TO_EDGE=i.CLAMP_TO_EDGE,o.MIRRORED_REPEAT=i.MIRRORED_REPEAT,t.exports=o},function(t,e,r){var n=r(8),i=r(16),a=r(6),o=r(72),s=o.isPowerOfTwo,u=n.extend(function(){return{image:null,pixels:null,mipmaps:[]}},{update:function(t){t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),this.beforeUpdate(t);var e=this.format,r=this.type;t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,this.wrapS),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,this.wrapT),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,this.magFilter),
t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,this.minFilter);var n=i.getExtension(t,"EXT_texture_filter_anisotropic");if(n&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_2D,n.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===r){var o=i.getExtension(t,"OES_texture_half_float");o||(r=a.FLOAT)}if(this.mipmaps.length)for(var s=this.width,u=this.height,c=0;c<this.mipmaps.length;c++){var l=this.mipmaps[c];this._updateTextureData(t,l,c,s,u,e,r),s/=2,u/=2}else this._updateTextureData(t,this,0,this.width,this.height,e,r),this.useMipmap&&!this.NPOT&&t.generateMipmap(t.TEXTURE_2D);t.bindTexture(t.TEXTURE_2D,null)},_updateTextureData:function(t,e,r,i,a,o,s){e.image?t.texImage2D(t.TEXTURE_2D,r,o,o,s,e.image):o<=n.COMPRESSED_RGBA_S3TC_DXT5_EXT&&o>=n.COMPRESSED_RGB_S3TC_DXT1_EXT?t.compressedTexImage2D(t.TEXTURE_2D,r,o,i,a,0,e.pixels):t.texImage2D(t.TEXTURE_2D,r,o,i,a,0,o,s,e.pixels)},generateMipmap:function(t){this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_2D))},isPowerOfTwo:function(){var t,e;return this.image?(t=this.image.width,e=this.image.height):(t=this.width,e=this.height),s(t)&&s(e)},isRenderable:function(){return this.image?"CANVAS"===this.image.nodeName||"VIDEO"===this.image.nodeName||this.image.complete:!(!this.width||!this.height)},bind:function(t){t.bindTexture(t.TEXTURE_2D,this.getWebGLTexture(t))},unbind:function(t){t.bindTexture(t.TEXTURE_2D,null)},load:function(t){var e=new Image,r=this;return e.onload=function(){r.dirty(),r.trigger("success",r),e.onload=null},e.onerror=function(){r.trigger("error",r),e.onerror=null},e.src=t,this.image=e,this}});t.exports=u},function(t,e,r){"use strict";var n=r(3),i=r(2),a=i.vec3,o=a.copy,s=a.set,u=function(t,e){this.min=t||new n(1/0,1/0,1/0),this.max=e||new n(-(1/0),-(1/0),-(1/0))};u.prototype={constructor:u,updateFromVertices:function(t){if(t.length>0){var e=this.min,r=this.max,n=e._array,i=r._array;o(n,t[0]),o(i,t[0]);for(var a=1;a<t.length;a++){var s=t[a];s[0]<n[0]&&(n[0]=s[0]),s[1]<n[1]&&(n[1]=s[1]),s[2]<n[2]&&(n[2]=s[2]),s[0]>i[0]&&(i[0]=s[0]),s[1]>i[1]&&(i[1]=s[1]),s[2]>i[2]&&(i[2]=s[2])}e._dirty=!0,r._dirty=!0}},union:function(t){var e=this.min,r=this.max;return a.min(e._array,e._array,t.min._array),a.max(r._array,r._array,t.max._array),e._dirty=!0,r._dirty=!0,this},intersection:function(t){var e=this.min,r=this.max;return a.max(e._array,e._array,t.min._array),a.min(r._array,r._array,t.max._array),e._dirty=!0,r._dirty=!0,this},intersectBoundingBox:function(t){var e=this.min._array,r=this.max._array,n=t.min._array,i=t.max._array;return!(e[0]>i[0]||e[1]>i[1]||e[2]>i[2]||r[0]<n[0]||r[1]<n[1]||r[2]<n[2])},containBoundingBox:function(t){var e=this.min._array,r=this.max._array,n=t.min._array,i=t.max._array;return e[0]<=n[0]&&e[1]<=n[1]&&e[2]<=n[2]&&r[0]>=i[0]&&r[1]>=i[1]&&r[2]>=i[2]},containPoint:function(t){var e=this.min._array,r=this.max._array,n=t._array;return e[0]<=n[0]&&e[1]<=n[1]&&e[2]<=n[2]&&r[0]>=n[0]&&r[1]>=n[1]&&r[2]>=n[2]},isFinite:function(){var t=this.min._array,e=this.max._array;return isFinite(t[0])&&isFinite(t[1])&&isFinite(t[2])&&isFinite(e[0])&&isFinite(e[1])&&isFinite(e[2])},applyTransform:function(){var t=a.create(),e=a.create(),r=a.create(),n=a.create(),i=a.create(),o=a.create();return function(a){var s=this.min._array,u=this.max._array,c=a._array;return t[0]=c[0]*s[0],t[1]=c[1]*s[0],t[2]=c[2]*s[0],e[0]=c[0]*u[0],e[1]=c[1]*u[0],e[2]=c[2]*u[0],r[0]=c[4]*s[1],r[1]=c[5]*s[1],r[2]=c[6]*s[1],n[0]=c[4]*u[1],n[1]=c[5]*u[1],n[2]=c[6]*u[1],i[0]=c[8]*s[2],i[1]=c[9]*s[2],i[2]=c[10]*s[2],o[0]=c[8]*u[2],o[1]=c[9]*u[2],o[2]=c[10]*u[2],s[0]=Math.min(t[0],e[0])+Math.min(r[0],n[0])+Math.min(i[0],o[0])+c[12],s[1]=Math.min(t[1],e[1])+Math.min(r[1],n[1])+Math.min(i[1],o[1])+c[13],s[2]=Math.min(t[2],e[2])+Math.min(r[2],n[2])+Math.min(i[2],o[2])+c[14],u[0]=Math.max(t[0],e[0])+Math.max(r[0],n[0])+Math.max(i[0],o[0])+c[12],u[1]=Math.max(t[1],e[1])+Math.max(r[1],n[1])+Math.max(i[1],o[1])+c[13],u[2]=Math.max(t[2],e[2])+Math.max(r[2],n[2])+Math.max(i[2],o[2])+c[14],this.min._dirty=!0,this.max._dirty=!0,this}}(),applyProjection:function(t){var e=this.min._array,r=this.max._array,n=t._array,i=e[0],a=e[1],o=e[2],s=r[0],u=r[1],c=e[2],l=r[0],h=r[1],f=r[2];if(1===n[15])e[0]=n[0]*i+n[12],e[1]=n[5]*a+n[13],r[2]=n[10]*o+n[14],r[0]=n[0]*l+n[12],r[1]=n[5]*h+n[13],e[2]=n[10]*f+n[14];else{var d=-1/o;e[0]=n[0]*i*d,e[1]=n[5]*a*d,r[2]=(n[10]*o+n[14])*d,d=-1/c,r[0]=n[0]*s*d,r[1]=n[5]*u*d,d=-1/f,e[2]=(n[10]*f+n[14])*d}return this.min._dirty=!0,this.max._dirty=!0,this},updateVertices:function(){var t=this.vertices;if(!t){for(var t=[],e=0;e<8;e++)t[e]=a.fromValues(0,0,0);this.vertices=t}var r=this.min._array,n=this.max._array;return s(t[0],r[0],r[1],r[2]),s(t[1],r[0],n[1],r[2]),s(t[2],n[0],r[1],r[2]),s(t[3],n[0],n[1],r[2]),s(t[4],r[0],r[1],n[2]),s(t[5],r[0],n[1],n[2]),s(t[6],n[0],r[1],n[2]),s(t[7],n[0],n[1],n[2]),this},copy:function(t){var e=this.min,r=this.max;return o(e._array,t.min._array),o(r._array,t.max._array),e._dirty=!0,r._dirty=!0,this},clone:function(){var t=new u;return t.copy(this),t}},t.exports=u},function(t,e){var r={firstNotNull:function(){for(var t=0,e=arguments.length;t<e;t++)if(null!=arguments[t])return arguments[t]}};t.exports=r},function(t,e,r){"use strict";var n=r(5),i=r(8),a=r(20),o=r(16),s=r(6),u=r(36),c="framebuffer",l="renderbuffer",h=l+"_width",f=l+"_height",d=l+"_attached",_="depthtexture_attached",p=s.FRAMEBUFFER,m=s.RENDERBUFFER,v=s.DEPTH_ATTACHMENT,g=s.COLOR_ATTACHMENT0,y=n.extend({depthBuffer:!0,viewport:null,_width:0,_height:0,_textures:null,_boundRenderer:null},function(){this._cache=new u,this._textures={}},{getTextureWidth:function(){return this._width},getTextureHeight:function(){return this._height},bind:function(t){if(t.__currentFrameBuffer){if(t.__currentFrameBuffer===this)return;console.warn("Renderer already bound with another framebuffer. Unbind it first")}t.__currentFrameBuffer=this;var e=t.gl;e.bindFramebuffer(p,this._getFrameBufferGL(e)),this._boundRenderer=t;var r=this._cache;r.put("viewport",t.viewport);var n,i,a=!1;for(var o in this._textures){a=!0;var s=this._textures[o];s&&(n=s.texture.width,i=s.texture.height,this._doAttach(e,s.texture,o,s.target))}this._width=n,this._height=i,!a&&this.depthBuffer&&console.error("Must attach texture before bind, or renderbuffer may have incorrect width and height."),this.viewport?t.setViewport(this.viewport):t.setViewport(0,0,n,i,1);var u=r.get("attached_textures");if(u)for(var o in u)if(!this._textures[o]){var c=u[o];this._doDetach(e,o,c)}if(!r.get(_)&&this.depthBuffer){r.miss(l)&&r.put(l,e.createRenderbuffer());var g=r.get(l);n===r.get(h)&&i===r.get(f)||(e.bindRenderbuffer(m,g),e.renderbufferStorage(m,e.DEPTH_COMPONENT16,n,i),r.put(h,n),r.put(f,i),e.bindRenderbuffer(m,null)),r.get(d)||(e.framebufferRenderbuffer(p,v,m,g),r.put(d,!0))}},unbind:function(t){t.__currentFrameBuffer=null;var e=t.gl;e.bindFramebuffer(p,null),this._boundRenderer=null,this._cache.use(e.__GLID__);var r=this._cache.get("viewport");r&&t.setViewport(r),this.updateMipmap(e)},updateMipmap:function(t){for(var e in this._textures){var r=this._textures[e];if(r){var n=r.texture;if(!n.NPOT&&n.useMipmap&&n.minFilter===i.LINEAR_MIPMAP_LINEAR){var o=n instanceof a?s.TEXTURE_CUBE_MAP:s.TEXTURE_2D;t.bindTexture(o,n.getWebGLTexture(t)),t.generateMipmap(o),t.bindTexture(o,null)}}}},checkStatus:function(t){return t.checkFramebufferStatus(p)},_getFrameBufferGL:function(t){var e=this._cache;return e.use(t.__GLID__),e.miss(c)&&e.put(c,t.createFramebuffer()),e.get(c)},attach:function(t,e,r){if(!t.width)throw new Error("The texture attached to color buffer is not a valid.");e=e||g,r=r||s.TEXTURE_2D;var n,i=this._boundRenderer,a=i&&i.gl;if(a){var o=this._cache;o.use(a.__GLID__),n=o.get("attached_textures")}var u=this._textures[e];if(!u||u.target!==r||u.texture!==t||!n||null==n[e]){var c=!0;a&&(c=this._doAttach(a,t,e,r),this.viewport||i.setViewport(0,0,t.width,t.height,1)),c&&(this._textures[e]=this._textures[e]||{},this._textures[e].texture=t,this._textures[e].target=r)}},_doAttach:function(t,e,r,n){var i=e.getWebGLTexture(t),a=this._cache.get("attached_textures");if(a&&a[r]){var u=a[r];if(u.texture===e&&u.target===n)return}r=+r;var c=!0;if(r===v||r===s.DEPTH_STENCIL_ATTACHMENT){var h=o.getExtension(t,"WEBGL_depth_texture");if(h||(console.error("Depth texture is not supported by the browser"),c=!1),e.format!==s.DEPTH_COMPONENT&&e.format!==s.DEPTH_STENCIL&&(console.error("The texture attached to depth buffer is not a valid."),c=!1),c){var f=this._cache.get(l);f&&(t.framebufferRenderbuffer(p,v,m,null),t.deleteRenderbuffer(f),this._cache.put(l,!1)),this._cache.put(d,!1),this._cache.put(_,!0)}}return t.framebufferTexture2D(p,r,n,i,0),a||(a={},this._cache.put("attached_textures",a)),a[r]=a[r]||{},a[r].texture=e,a[r].target=n,c},_doDetach:function(t,e,r){t.framebufferTexture2D(p,e,r,null,0);var n=this._cache.get("attached_textures");n&&n[e]&&(n[e]=null),e!==v&&e!==s.DEPTH_STENCIL_ATTACHMENT||this._cache.put(_,!1)},detach:function(t,e){if(this._textures[t]=null,this._boundRenderer){var r=this._boundRenderer.gl,n=this._cache;n.use(r.__GLID__),this._doDetach(r,t,e)}},dispose:function(t){var e=this._cache;e.use(t.__GLID__);var r=e.get(l);r&&t.deleteRenderbuffer(r);var n=e.get(c);n&&t.deleteFramebuffer(n),e.deleteContext(t.__GLID__),this._textures={}}});y.DEPTH_ATTACHMENT=v,y.COLOR_ATTACHMENT0=g,y.STENCIL_ATTACHMENT=s.STENCIL_ATTACHMENT,y.DEPTH_STENCIL_ATTACHMENT=s.DEPTH_STENCIL_ATTACHMENT,t.exports=y},function(t,e,r){"use strict";function n(t){return"attr_"+t}var i=r(146),a=r(10),o=r(2),s=r(17),u=r(6),c=o.mat4,l=o.vec3,h=i.StaticAttribute,f=l.create,d=l.add,_=l.set,p=i.extend(function(){return{attributes:{position:new h("position","float",3,"POSITION"),texcoord0:new h("texcoord0","float",2,"TEXCOORD_0"),texcoord1:new h("texcoord1","float",2,"TEXCOORD_1"),normal:new h("normal","float",3,"NORMAL"),tangent:new h("tangent","float",4,"TANGENT"),color:new h("color","float",4,"COLOR"),weight:new h("weight","float",3,"WEIGHT"),joint:new h("joint","float",4,"JOINT"),barycentric:new h("barycentric","float",3,null)},hint:u.STATIC_DRAW,indices:null,_normalType:"vertex",_enabledAttributes:null}},{updateBoundingBox:function(){var t=this.boundingBox;t||(t=this.boundingBox=new a);var e=this.attributes.position.value;if(e&&e.length){var r=t.min,n=t.max,i=r._array,o=n._array;l.set(i,e[0],e[1],e[2]),l.set(o,e[0],e[1],e[2]);for(var s=3;s<e.length;){var u=e[s++],c=e[s++],h=e[s++];u<i[0]&&(i[0]=u),c<i[1]&&(i[1]=c),h<i[2]&&(i[2]=h),u>o[0]&&(o[0]=u),c>o[1]&&(o[1]=c),h>o[2]&&(o[2]=h)}r._dirty=!0,n._dirty=!0}},dirty:function(){for(var t=this.getEnabledAttributes(),e=0;e<t.length;e++)this.dirtyAttribute(t[e]);this.dirtyIndices(),this._enabledAttributes=null},dirtyIndices:function(){this._cache.dirtyAll("indices")},dirtyAttribute:function(t){this._cache.dirtyAll(n(t)),this._cache.dirtyAll("attributes")},getTriangleIndices:function(t,e){if(t<this.triangleCount&&t>=0){e||(e=f());var r=this.indices;return e[0]=r[3*t],e[1]=r[3*t+1],e[2]=r[3*t+2],e}},setTriangleIndices:function(t,e){var r=this.indices;r[3*t]=e[0],r[3*t+1]=e[1],r[3*t+2]=e[2]},isUseIndices:function(){return this.indices},initIndicesFromArray:function(t){var e,r=this.vertexCount>65535?s.Uint32Array:s.Uint16Array;if(t[0]&&t[0].length){var n=0,i=3;e=new r(t.length*i);for(var a=0;a<t.length;a++)for(var o=0;o<i;o++)e[n++]=t[a][o]}else e=new r(t);this.indices=e},createAttribute:function(t,e,r,n){var i=new h(t,e,r,n);return this.attributes[t]&&this.removeAttribute(t),this.attributes[t]=i,this._attributeList.push(t),i},removeAttribute:function(t){var e=this._attributeList,r=e.indexOf(t);return r>=0&&(e.splice(r,1),delete this.attributes[t],!0)},getEnabledAttributes:function(){var t=this._enabledAttributes,e=this._attributeList;if(t)return t;for(var r=[],n=this.vertexCount,i=0;i<e.length;i++){var a=e[i],o=this.attributes[a];o.value&&o.value.length===n*o.size&&r.push(a)}return this._enabledAttributes=r,r},getBufferChunks:function(t){var e=this._cache;e.use(t.__GLID__);var r=e.isDirty("attributes"),i=e.isDirty("indices");if(r||i){this._updateBuffer(t,r,i);for(var a=this.getEnabledAttributes(),o=0;o<a.length;o++)e.fresh(n(a[o]));e.fresh("attributes"),e.fresh("indices")}return e.get("chunks")},_updateBuffer:function(t,e,r){var a=this._cache,o=a.get("chunks"),s=!1;o||(o=[],o[0]={attributeBuffers:[],indicesBuffer:null},a.put("chunks",o),s=!0);var u=o[0],c=u.attributeBuffers,l=u.indicesBuffer;if(e||s){var h=this.getEnabledAttributes(),f={};if(!s)for(var d=0;d<c.length;d++)f[c[d].name]=c[d];for(var _=0;_<h.length;_++){var p,m=h[_],v=this.attributes[m];s||(p=f[m]);var g;g=p?p.buffer:t.createBuffer(),a.isDirty(n(m))&&(t.bindBuffer(t.ARRAY_BUFFER,g),t.bufferData(t.ARRAY_BUFFER,v.value,this.hint)),c[_]=new i.AttributeBuffer(m,v.type,g,v.size,v.semantic)}for(var d=_;d<c.length;d++)t.deleteBuffer(c[d].buffer);c.length=_}this.isUseIndices()&&(r||s)&&(l||(l=new i.IndicesBuffer(t.createBuffer()),u.indicesBuffer=l),l.count=this.indices.length,t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,l.buffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this.indices,this.hint))},generateVertexNormals:function(){if(this.vertexCount){var t=this.indices,e=this.attributes,r=e.position.value,n=e.normal.value;if(n&&n.length===r.length)for(var i=0;i<n.length;i++)n[i]=0;else n=e.normal.value=new s.Float32Array(r.length);for(var a=f(),o=f(),u=f(),c=f(),h=f(),d=f(),p=0;p<t.length;){var m=t[p++],v=t[p++],g=t[p++];_(a,r[3*m],r[3*m+1],r[3*m+2]),_(o,r[3*v],r[3*v+1],r[3*v+2]),_(u,r[3*g],r[3*g+1],r[3*g+2]),l.sub(c,a,o),l.sub(h,o,u),l.cross(d,c,h);for(var i=0;i<3;i++)n[3*m+i]=n[3*m+i]+d[i],n[3*v+i]=n[3*v+i]+d[i],n[3*g+i]=n[3*g+i]+d[i]}for(var i=0;i<n.length;)_(d,n[i],n[i+1],n[i+2]),l.normalize(d,d),n[i++]=d[0],n[i++]=d[1],n[i++]=d[2];this.dirty()}},generateFaceNormals:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var t=this.indices,e=this.attributes,r=e.position.value,n=e.normal.value,i=f(),a=f(),o=f(),s=f(),u=f(),c=f();n||(n=e.normal.value=new Float32Array(r.length));for(var h=0;h<t.length;){var d=t[h++],p=t[h++],m=t[h++];_(i,r[3*d],r[3*d+1],r[3*d+2]),_(a,r[3*p],r[3*p+1],r[3*p+2]),_(o,r[3*m],r[3*m+1],r[3*m+2]),l.sub(s,i,a),l.sub(u,a,o),l.cross(c,s,u),l.normalize(c,c);for(var v=0;v<3;v++)n[3*d+v]=c[v],n[3*p+v]=c[v],n[3*m+v]=c[v]}this.dirty()}},generateTangents:function(){if(this.vertexCount){var t=this.vertexCount,e=this.attributes;e.tangent.value||(e.tangent.value=new Float32Array(4*t));for(var r=e.texcoord0.value,n=e.position.value,i=e.tangent.value,a=e.normal.value,o=[],s=[],u=0;u<t;u++)o[u]=[0,0,0],s[u]=[0,0,0];for(var c=[0,0,0],h=[0,0,0],_=this.indices,u=0;u<_.length;){var p=_[u++],m=_[u++],v=_[u++],g=r[2*p],y=r[2*m],x=r[2*v],T=r[2*p+1],b=r[2*m+1],E=r[2*v+1],w=n[3*p],S=n[3*m],A=n[3*v],M=n[3*p+1],C=n[3*m+1],L=n[3*v+1],R=n[3*p+2],N=n[3*m+2],D=n[3*v+2],I=S-w,O=A-w,P=C-M,F=L-M,B=N-R,U=D-R,k=y-g,z=x-g,G=b-T,V=E-T,H=1/(k*V-G*z);c[0]=(V*I-G*O)*H,c[1]=(V*P-G*F)*H,c[2]=(V*B-G*U)*H,h[0]=(k*O-z*I)*H,h[1]=(k*F-z*P)*H,h[2]=(k*U-z*B)*H,d(o[p],o[p],c),d(o[m],o[m],c),d(o[v],o[v],c),d(s[p],s[p],h),d(s[m],s[m],h),d(s[v],s[v],h)}for(var W=f(),q=f(),X=f(),u=0;u<t;u++){X[0]=a[3*u],X[1]=a[3*u+1],X[2]=a[3*u+2];var j=o[u];l.scale(W,X,l.dot(X,j)),l.sub(W,j,W),l.normalize(W,W),l.cross(q,X,j),i[4*u]=W[0],i[4*u+1]=W[1],i[4*u+2]=W[2],i[4*u+3]=l.dot(q,s[u])<0?-1:1}this.dirty()}},isUniqueVertex:function(){return!this.isUseIndices()||this.vertexCount===this.indices.length},generateUniqueVertex:function(){if(this.vertexCount){for(var t=[],e=0,r=this.vertexCount;e<r;e++)t[e]=0;this.indices.length>65535&&(this.indices=new s.Uint32Array(this.indices));for(var n=0,i=this.attributes,a=this.indices,e=0;e<a.length;e++)n=Math.max(n,a[e]+1);for(var o=this.getEnabledAttributes(),u=0;u<o.length;u++){var c=o[u],l=i[c].value;i[c].init(this.indices.length);for(var h=i[c].value,e=0;e<l.length;e++)h[e]=l[e]}for(var e=0;e<a.length;e++){var f=a[e];if(t[f]>0){for(var u=0;u<o.length;u++)for(var c=o[u],d=i[c].value,_=i[c].size,p=0;p<_;p++)d[n*_+p]=d[f*_+p];a[e]=n,n++}t[f]++}this.dirty()}},generateBarycentric:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var t=this.attributes,e=t.barycentric.value,r=this.indices;if(!e||e.length!==3*r.length){e=t.barycentric.value=new Float32Array(3*r.length);for(var n=0;n<r.length;)for(var i=0;i<3;i++){var a=r[n++];e[3*a+i]=1}this.dirty()}}},applyTransform:function(t){var e=this.attributes,r=e.position.value,n=e.normal.value,i=e.tangent.value;t=t._array;var a=c.create();c.invert(a,t),c.transpose(a,a);var o=l.transformMat4,s=l.forEach;s(r,3,0,null,o,t),n&&s(n,3,0,null,o,a),i&&s(i,4,0,null,o,a),this.boundingBox&&this.updateBoundingBox()},dispose:function(t){var e=this._cache;e.use(t.__GLID__);var r=e.get("chunks");if(r)for(var n=0;n<r.length;n++)for(var i=r[n],a=0;a<i.attributeBuffers.length;a++){var o=i.attributeBuffers[a];t.deleteBuffer(o.buffer)}e.deleteContext(t.__GLID__)}});Object.defineProperty&&(Object.defineProperty(p.prototype,"vertexCount",{enumerable:!1,get:function(){var t=this.attributes[this.mainAttribute];return t&&t.value?t.value.length/t.size:0}}),Object.defineProperty(p.prototype,"triangleCount",{enumerable:!1,get:function(){var t=this.indices;return t?t.length/3:0}})),p.Attribute=i.StaticAttribute,t.exports=p},function(t,e,r){"use strict";var n=r(2),i=r(3),a=n.mat4,o=n.vec3,s=n.mat3,u=n.quat,c=function(){this._axisX=new i,this._axisY=new i,this._axisZ=new i,this._array=a.create(),this._dirty=!0};c.prototype={constructor:c,setArray:function(t){for(var e=0;e<this._array.length;e++)this._array[e]=t[e];return this._dirty=!0,this},adjoint:function(){return a.adjoint(this._array,this._array),this._dirty=!0,this},clone:function(){return(new c).copy(this)},copy:function(t){return a.copy(this._array,t._array),this._dirty=!0,this},determinant:function(){return a.determinant(this._array)},fromQuat:function(t){return a.fromQuat(this._array,t._array),this._dirty=!0,this},fromRotationTranslation:function(t,e){return a.fromRotationTranslation(this._array,t._array,e._array),this._dirty=!0,this},fromMat2d:function(t){return c.fromMat2d(this,t),this},frustum:function(t,e,r,n,i,o){return a.frustum(this._array,t,e,r,n,i,o),this._dirty=!0,this},identity:function(){return a.identity(this._array),this._dirty=!0,this},invert:function(){return a.invert(this._array,this._array),this._dirty=!0,this},lookAt:function(t,e,r){return a.lookAt(this._array,t._array,e._array,r._array),this._dirty=!0,this},mul:function(t){return a.mul(this._array,this._array,t._array),this._dirty=!0,this},mulLeft:function(t){return a.mul(this._array,t._array,this._array),this._dirty=!0,this},multiply:function(t){return a.multiply(this._array,this._array,t._array),this._dirty=!0,this},multiplyLeft:function(t){return a.multiply(this._array,t._array,this._array),this._dirty=!0,this},ortho:function(t,e,r,n,i,o){return a.ortho(this._array,t,e,r,n,i,o),this._dirty=!0,this},perspective:function(t,e,r,n){return a.perspective(this._array,t,e,r,n),this._dirty=!0,this},rotate:function(t,e){return a.rotate(this._array,this._array,t,e._array),this._dirty=!0,this},rotateX:function(t){return a.rotateX(this._array,this._array,t),this._dirty=!0,this},rotateY:function(t){return a.rotateY(this._array,this._array,t),this._dirty=!0,this},rotateZ:function(t){return a.rotateZ(this._array,this._array,t),this._dirty=!0,this},scale:function(t){return a.scale(this._array,this._array,t._array),this._dirty=!0,this},translate:function(t){return a.translate(this._array,this._array,t._array),this._dirty=!0,this},transpose:function(){return a.transpose(this._array,this._array),this._dirty=!0,this},decomposeMatrix:function(){var t=o.create(),e=o.create(),r=o.create(),n=s.create();return function(i,a,c){var l=this._array;o.set(t,l[0],l[1],l[2]),o.set(e,l[4],l[5],l[6]),o.set(r,l[8],l[9],l[10]);var h=o.length(t),f=o.length(e),d=o.length(r);i&&(i.x=h,i.y=f,i.z=d,i._dirty=!0),c.set(l[12],l[13],l[14]),s.fromMat4(n,l),n[0]/=h,n[1]/=h,n[2]/=h,n[3]/=f,n[4]/=f,n[5]/=f,n[6]/=d,n[7]/=d,n[8]/=d,u.fromMat3(a._array,n),u.normalize(a._array,a._array),a._dirty=!0,c._dirty=!0}}(),toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var l=Object.defineProperty;if(l){var h=c.prototype;l(h,"z",{get:function(){var t=this._array;return this._axisZ.set(t[8],t[9],t[10]),this._axisZ},set:function(t){var e=this._array;t=t._array,e[8]=t[0],e[9]=t[1],e[10]=t[2],this._dirty=!0}}),l(h,"y",{get:function(){var t=this._array;return this._axisY.set(t[4],t[5],t[6]),this._axisY},set:function(t){var e=this._array;t=t._array,e[4]=t[0],e[5]=t[1],e[6]=t[2],this._dirty=!0}}),l(h,"x",{get:function(){var t=this._array;return this._axisX.set(t[0],t[1],t[2]),this._axisX},set:function(t){var e=this._array;t=t._array,e[0]=t[0],e[1]=t[1],e[2]=t[2],this._dirty=!0}})}c.adjoint=function(t,e){return a.adjoint(t._array,e._array),t._dirty=!0,t},c.copy=function(t,e){return a.copy(t._array,e._array),t._dirty=!0,t},c.determinant=function(t){return a.determinant(t._array)},c.identity=function(t){return a.identity(t._array),t._dirty=!0,t},c.ortho=function(t,e,r,n,i,o,s){return a.ortho(t._array,e,r,n,i,o,s),t._dirty=!0,t},c.perspective=function(t,e,r,n,i){return a.perspective(t._array,e,r,n,i),t._dirty=!0,t},c.lookAt=function(t,e,r,n){return a.lookAt(t._array,e._array,r._array,n._array),t._dirty=!0,t},c.invert=function(t,e){return a.invert(t._array,e._array),t._dirty=!0,t},c.mul=function(t,e,r){return a.mul(t._array,e._array,r._array),t._dirty=!0,t},c.multiply=c.mul,c.fromQuat=function(t,e){return a.fromQuat(t._array,e._array),t._dirty=!0,t},c.fromRotationTranslation=function(t,e,r){return a.fromRotationTranslation(t._array,e._array,r._array),t._dirty=!0,t},c.fromMat2d=function(t,e){t._dirty=!0;var e=e._array,t=t._array;return t[0]=e[0],t[4]=e[2],t[12]=e[4],t[1]=e[1],t[5]=e[3],t[13]=e[5],t},c.rotate=function(t,e,r,n){return a.rotate(t._array,e._array,r,n._array),t._dirty=!0,t},c.rotateX=function(t,e,r){return a.rotateX(t._array,e._array,r),t._dirty=!0,t},c.rotateY=function(t,e,r){return a.rotateY(t._array,e._array,r),t._dirty=!0,t},c.rotateZ=function(t,e,r){return a.rotateZ(t._array,e._array,r),t._dirty=!0,t},c.scale=function(t,e,r){return a.scale(t._array,e._array,r._array),t._dirty=!0,t},c.transpose=function(t,e){return a.transpose(t._array,e._array),t._dirty=!0,t},c.translate=function(t,e,r){return a.translate(t._array,e._array,r._array),t._dirty=!0,t},t.exports=c},function(t,e,r){"use strict";var n=r(25),i=n.extend(function(){return{color:[1,1,1],intensity:1,castShadow:!0,shadowResolution:512,group:0}},{type:"",clone:function(){var t=n.prototype.clone.call(this);return t.color=Array.prototype.slice.call(this.color),t.intensity=this.intensity,t.castShadow=this.castShadow,t.shadowResolution=this.shadowResolution,t}});t.exports=i},function(t,e){"use strict";var r=["OES_texture_float","OES_texture_half_float","OES_texture_float_linear","OES_texture_half_float_linear","OES_standard_derivatives","OES_vertex_array_object","OES_element_index_uint","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","EXT_texture_filter_anisotropic","EXT_shader_texture_lod","WEBGL_draw_buffers","EXT_frag_depth"],n=["MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE"],i={},a={},o={initialize:function(t){var e=t.__GLID__;if(!i[e]){i[e]={},a[e]={};for(var o=0;o<r.length;o++){var s=r[o];this._createExtension(t,s)}for(var o=0;o<n.length;o++){var u=n[o];a[e][u]=t.getParameter(t[u])}}},getExtension:function(t,e){var r=t.__GLID__;if(i[r])return"undefined"==typeof i[r][e]&&this._createExtension(t,e),i[r][e]},getParameter:function(t,e){var r=t.__GLID__;if(a[r])return a[r][e]},dispose:function(t){delete i[t.__GLID__],delete a[t.__GLID__]},_createExtension:function(t,e){var r=t.getExtension(e);r||(r=t.getExtension("MOZ_"+e)),r||(r=t.getExtension("WEBKIT_"+e)),i[t.__GLID__][e]=r}};t.exports=o},function(t,e){"use strict";var r=!0;try{var n=document.createElement("canvas"),i=n.getContext("webgl")||n.getContext("experimental-webgl");if(!i)throw new Error}catch(t){r=!1}var a={};a.supportWebGL=function(){return r},a.Int8Array="undefined"==typeof Int8Array?Array:Int8Array,a.Uint8Array="undefined"==typeof Uint8Array?Array:Uint8Array,a.Uint16Array="undefined"==typeof Uint16Array?Array:Uint16Array,a.Uint32Array="undefined"==typeof Uint32Array?Array:Uint32Array,a.Int16Array="undefined"==typeof Int16Array?Array:Int16Array,a.Float32Array="undefined"==typeof Float32Array?Array:Float32Array,a.Float64Array="undefined"==typeof Float64Array?Array:Float64Array,t.exports=a},function(t,e){function r(t){if(null==t||"object"!=typeof t)return t;var e=t,n=P.call(t);if("[object Array]"===n){e=[];for(var i=0,a=t.length;i<a;i++)e[i]=r(t[i])}else if(O[n])e=t.constructor.from(t);else if(!I[n]&&!N(t)&&!S(t)){e={};for(var o in t)t.hasOwnProperty(o)&&(e[o]=r(t[o]))}return e}function n(t,e,i){if(!E(e)||!E(t))return i?r(e):t;for(var a in e)if(e.hasOwnProperty(a)){var o=t[a],s=e[a];!E(s)||!E(o)||x(s)||x(o)||S(s)||S(o)||w(s)||w(o)||N(s)||N(o)?!i&&a in t||(t[a]=r(e[a],!0)):n(o,s,i)}return t}function i(t,e){for(var r=t[0],i=1,a=t.length;i<a;i++)r=n(r,t[i],e);return r}function a(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);return t}function o(t,e,r){for(var n in e)e.hasOwnProperty(n)&&(r?null!=e[n]:null==t[n])&&(t[n]=e[n]);return t}function s(){return document.createElement("canvas")}function u(){return D||(D=H.createCanvas().getContext("2d")),D}function c(t,e){if(t){if(t.indexOf)return t.indexOf(e);for(var r=0,n=t.length;r<n;r++)if(t[r]===e)return r}return-1}function l(t,e){function r(){}var n=t.prototype;r.prototype=e.prototype,t.prototype=new r;for(var i in n)t.prototype[i]=n[i];t.prototype.constructor=t,t.superClass=e}function h(t,e,r){t="prototype"in t?t.prototype:t,e="prototype"in e?e.prototype:e,o(t,e,r)}function f(t){if(t)return"string"!=typeof t&&"number"==typeof t.length}function d(t,e,r){if(t&&e)if(t.forEach&&t.forEach===B)t.forEach(e,r);else if(t.length===+t.length)for(var n=0,i=t.length;n<i;n++)e.call(r,t[n],n,t);else for(var a in t)t.hasOwnProperty(a)&&e.call(r,t[a],a,t)}function _(t,e,r){if(t&&e){if(t.map&&t.map===z)return t.map(e,r);for(var n=[],i=0,a=t.length;i<a;i++)n.push(e.call(r,t[i],i,t));return n}}function p(t,e,r,n){if(t&&e){if(t.reduce&&t.reduce===G)return t.reduce(e,r,n);for(var i=0,a=t.length;i<a;i++)r=e.call(n,r,t[i],i,t);return r}}function m(t,e,r){if(t&&e){if(t.filter&&t.filter===U)return t.filter(e,r);for(var n=[],i=0,a=t.length;i<a;i++)e.call(r,t[i],i,t)&&n.push(t[i]);return n}}function v(t,e,r){if(t&&e)for(var n=0,i=t.length;n<i;n++)if(e.call(r,t[n],n,t))return t[n]}function g(t,e){var r=k.call(arguments,2);return function(){return t.apply(e,r.concat(k.call(arguments)))}}function y(t){var e=k.call(arguments,1);return function(){return t.apply(this,e.concat(k.call(arguments)))}}function x(t){return"[object Array]"===P.call(t)}function T(t){return"function"==typeof t}function b(t){return"[object String]"===P.call(t)}function E(t){var e=typeof t;return"function"===e||!!t&&"object"==e}function w(t){return!!I[P.call(t)]}function S(t){return"object"==typeof t&&"number"==typeof t.nodeType&&"object"==typeof t.ownerDocument}function A(t){return t!==t}function M(t){for(var e=0,r=arguments.length;e<r;e++)if(null!=arguments[e])return arguments[e]}function C(){return Function.call.apply(k,arguments)}function L(t,e){if(!t)throw new Error(e)}function R(t){t[V]=!0}function N(t){return t[V]}var D,I={"[object Function]":1,"[object RegExp]":1,"[object Date]":1,"[object Error]":1,"[object CanvasGradient]":1,"[object CanvasPattern]":1,"[object Image]":1,"[object Canvas]":1},O={"[object Int8Array]":1,"[object Uint8Array]":1,"[object Uint8ClampedArray]":1,"[object Int16Array]":1,"[object Uint16Array]":1,"[object Int32Array]":1,"[object Uint32Array]":1,"[object Float32Array]":1,"[object Float64Array]":1},P=Object.prototype.toString,F=Array.prototype,B=F.forEach,U=F.filter,k=F.slice,z=F.map,G=F.reduce,V="__ec_primitive__",H={inherits:l,mixin:h,clone:r,merge:n,mergeAll:i,extend:a,defaults:o,getContext:u,createCanvas:s,indexOf:c,slice:C,find:v,isArrayLike:f,each:d,map:_,reduce:p,filter:m,bind:g,curry:y,isArray:x,isString:b,isObject:E,isFunction:T,isBuiltInObject:w,isDom:S,eqNaN:A,retrieve:M,assert:L,setAsPrimitive:R,noop:function(){}};t.exports=H},function(t,e,r){"use strict";var n=r(5),i=r(8),a=n.extend({name:"",depthTest:!0,depthMask:!0,transparent:!1,blend:null,_enabledUniforms:null},function(){this.name||(this.name="MATERIAL_"+this.__GUID__),this.shader&&this.attachShader(this.shader),this.uniforms||(this.uniforms={})},{bind:function(t,e,r,n){for(var e=e||this.shader,a=n===e,o=e.currentTextureSlot(),s=0;s<this._enabledUniforms.length;s++){var u=this._enabledUniforms[s],c=this.uniforms[u],l=c.value;if(!r||!a||r.uniforms[u].value!==l)if(void 0!==l){if(null!==l){if(!(l instanceof Array)||l.length)if(l instanceof i){var h=e.currentTextureSlot(),f=e.setUniform(t,"1i",u,h);if(!f)continue;e.useCurrentTextureSlot(t,l)}else if(l instanceof Array){if(0===l.length)continue;var d=l[0];if(d instanceof i){if(!e.hasUniform(u))continue;for(var _=[],p=0;p<l.length;p++){var m=l[p],h=e.currentTextureSlot();_.push(h),e.useCurrentTextureSlot(t,m)}e.setUniform(t,"1iv",u,_)}else e.setUniform(t,c.type,u,l)}else e.setUniform(t,c.type,u,l)}else if("t"===c.type){var h=e.currentTextureSlot(),f=e.setUniform(t,"1i",u,h);f&&e.useCurrentTextureSlot(t,null)}}else console.warn('Uniform value "'+u+'" is undefined')}e.resetTextureSlot(o)},setUniform:function(t,e){void 0===e&&console.warn('Uniform value "'+t+'" is undefined');var r=this.uniforms[t];r&&(r.value=e)},setUniforms:function(t){for(var e in t){var r=t[e];this.setUniform(e,r)}},isUniformEnabled:function(t){return this._enabledUniforms.indexOf(t)>=0},set:function(t,e){if("object"==typeof t)for(var r in t){var n=t[r];this.set(r,n)}else{var i=this.uniforms[t];i&&(i.value=e)}},get:function(t){var e=this.uniforms[t];if(e)return e.value},attachShader:function(t,e){this.shader&&this.shader.detached();var r=this.uniforms;this.uniforms=t.createUniforms(),this.shader=t;var n=this.uniforms;if(this._enabledUniforms=Object.keys(n),this._enabledUniforms.sort(),e)for(var i in r)n[i]&&(n[i].value=r[i].value);t.attached()},detachShader:function(){this.shader.detached(),this.shader=null,this.uniforms={}},clone:function(){var t=new this.constructor({name:this.name,shader:this.shader});for(var e in this.uniforms)t.uniforms[e].value=this.uniforms[e].value;return t.depthTest=this.depthTest,t.depthMask=this.depthMask,t.transparent=this.transparent,t.blend=this.blend,t},dispose:function(t,e){if(e)for(var r in this.uniforms){var n=this.uniforms[r].value;if(n)if(n instanceof i)n.dispose(t);else if(n instanceof Array)for(var a=0;a<n.length;a++)n[a]instanceof i&&n[a].dispose(t)}var o=this.shader;o&&(this.detachShader(),o.isAttachedToAny()||o.dispose(t))}});t.exports=a},function(t,e,r){function n(t){return"CANVAS"===t.nodeName||"VIDEO"===t.nodeName||t.complete}var i=r(8),a=r(16),o=r(6),s=r(23),u=r(72),c=u.isPowerOfTwo,l=["px","nx","py","ny","pz","nz"],h=i.extend(function(){return{image:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},pixels:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},mipmaps:[]}},{update:function(t){t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),this.beforeUpdate(t);var e=this.format,r=this.type;t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_S,this.wrapS),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_T,this.wrapT),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MAG_FILTER,this.magFilter),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MIN_FILTER,this.minFilter);var n=a.getExtension(t,"EXT_texture_filter_anisotropic");if(n&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_CUBE_MAP,n.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===r){var i=a.getExtension(t,"OES_texture_half_float");i||(r=o.FLOAT)}if(this.mipmaps.length)for(var s=this.width,u=this.height,c=0;c<this.mipmaps.length;c++){var l=this.mipmaps[c];
this._updateTextureData(t,l,c,s,u,e,r),s/=2,u/=2}else this._updateTextureData(t,this,0,this.width,this.height,e,r),!this.NPOT&&this.useMipmap&&t.generateMipmap(t.TEXTURE_CUBE_MAP);t.bindTexture(t.TEXTURE_CUBE_MAP,null)},_updateTextureData:function(t,e,r,n,i,a,o){for(var s=0;s<6;s++){var u=l[s],c=e.image&&e.image[u];c?t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+s,r,a,a,o,c):t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+s,r,a,n,i,0,a,o,e.pixels&&e.pixels[u])}},generateMipmap:function(t){this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_CUBE_MAP))},bind:function(t){t.bindTexture(t.TEXTURE_CUBE_MAP,this.getWebGLTexture(t))},unbind:function(t){t.bindTexture(t.TEXTURE_CUBE_MAP,null)},isPowerOfTwo:function(){return this.image.px?c(this.image.px.width)&&c(this.image.px.height):c(this.width)&&c(this.height)},isRenderable:function(){return this.image.px?n(this.image.px)&&n(this.image.nx)&&n(this.image.py)&&n(this.image.ny)&&n(this.image.pz)&&n(this.image.nz):!(!this.width||!this.height)},load:function(t){var e=0,r=this;return s.each(t,function(t,n){var i=new Image;i.onload=function(){e--,0===e&&(r.dirty(),r.trigger("success",r)),i.onload=null},i.onerror=function(){e--,i.onerror=null},e++,i.src=t,r.image[n]=i}),this}});t.exports=h},function(t,e){t.exports=function(t,e,r){e.eachSeriesByType(t,function(t){var e=t.getData(),r=t.visualColorAccessPath.split(".");r[r.length-1]="opacity";var n=t.get(r);e.setVisual("opacity",null==n?1:n),e.hasItemOption&&e.each(function(t){var n=e.getItemModel(t),i=n.get(r);null!=i&&e.setItemVisual(t,i)})})}},function(t,e,r){"use strict";var n=r(5),i=r(41),a=r(43),o=r(7),s=r(19),u=r(24),c=r(16),l=r(6);o.import(r(176));var h=new a,f=new u({geometry:h,frustumCulling:!1}),d=new i,_=n.extend(function(){return{fragment:"",outputs:null,material:null,blendWithPrevious:!1,clearColor:!1,clearDepth:!0}},function(){var t=new o({vertex:o.source("qtek.compositor.vertex"),fragment:this.fragment}),e=new s({shader:t});t.enableTexturesAll(),this.material=e},{setUniform:function(t,e){var r=this.material.uniforms[t];r&&(r.value=e)},getUniform:function(t){var e=this.material.uniforms[t];if(e)return e.value},attachOutput:function(t,e){this.outputs||(this.outputs={}),e=e||l.COLOR_ATTACHMENT0,this.outputs[e]=t},detachOutput:function(t){for(var e in this.outputs)this.outputs[e]===t&&(this.outputs[e]=null)},bind:function(t,e){if(this.outputs)for(var r in this.outputs){var n=this.outputs[r];n&&e.attach(n,r)}e&&e.bind(t)},unbind:function(t,e){e.unbind(t)},render:function(t,e){var r=t.gl;if(e){this.bind(t,e);var n=c.getExtension(r,"EXT_draw_buffers");if(n&&this.outputs){var i=[];for(var a in this.outputs)a=+a,a>=r.COLOR_ATTACHMENT0&&a<=r.COLOR_ATTACHMENT0+8&&i.push(a);n.drawBuffersEXT(i)}}this.trigger("beforerender",this,t);var o=this.clearDepth?r.DEPTH_BUFFER_BIT:0;if(r.depthMask(!0),this.clearColor){o|=r.COLOR_BUFFER_BIT,r.colorMask(!0,!0,!0,!0);var s=this.clearColor;s instanceof Array&&r.clearColor(s[0],s[1],s[2],s[3])}r.clear(o),this.blendWithPrevious?(r.enable(r.BLEND),this.material.transparent=!0):(r.disable(r.BLEND),this.material.transparent=!1),this.renderQuad(t),this.trigger("afterrender",this,t),e&&this.unbind(t,e)},renderQuad:function(t){f.material=this.material,t.renderQueue([f],d)},dispose:function(t){this.material.dispose(t)}});t.exports=_},function(t,e){"use strict";var r=0,n=Array.prototype,i=n.forEach,a={genGUID:function(){return++r},relative2absolute:function(t,e){if(!e||t.match(/^\//))return t;for(var r=t.split("/"),n=e.split("/"),i=r[0];"."===i||".."===i;)".."===i&&n.pop(),r.shift(),i=r[0];return n.join("/")+"/"+r.join("/")},extend:function(t,e){if(e)for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);return t},defaults:function(t,e){if(e)for(var r in e)void 0===t[r]&&(t[r]=e[r]);return t},extendWithPropList:function(t,e,r){if(e)for(var n=0;n<r.length;n++){var i=r[n];t[i]=e[i]}return t},defaultsWithPropList:function(t,e,r){if(e)for(var n=0;n<r.length;n++){var i=r[n];null==t[i]&&(t[i]=e[i])}return t},each:function(t,e,r){if(t&&e)if(t.forEach&&t.forEach===i)t.forEach(e,r);else if(t.length===+t.length)for(var n=0,a=t.length;n<a;n++)e.call(r,t[n],n,t);else for(var o in t)t.hasOwnProperty(o)&&e.call(r,t[o],o,t)},isObject:function(t){return t===Object(t)},isArray:function(t){return t instanceof Array},isArrayLike:function(t){return!!t&&t.length===+t.length},clone:function(t){if(a.isObject(t)){if(a.isArray(t))return t.slice();if(a.isArrayLike(t)){for(var e=new t.constructor(t.length),r=0;r<t.length;r++)e[r]=t[r];return e}return a.extend({},t)}return t}};t.exports=a},function(t,e,r){"use strict";var n=r(61),i=r(6),a=n.extend({skeleton:null,joints:null},function(){this.joints||(this.joints=[])},{render:function(t,e){if(e=e||this.material.shader,this.skeleton){var r=this.skeleton.getSubSkinMatrices(this.__GUID__,this.joints);e.setUniformOfSemantic(t,"SKIN_MATRIX",r)}return n.prototype.render.call(this,t,e)}});a.POINTS=i.POINTS,a.LINES=i.LINES,a.LINE_LOOP=i.LINE_LOOP,a.LINE_STRIP=i.LINE_STRIP,a.TRIANGLES=i.TRIANGLES,a.TRIANGLE_STRIP=i.TRIANGLE_STRIP,a.TRIANGLE_FAN=i.TRIANGLE_FAN,a.BACK=i.BACK,a.FRONT=i.FRONT,a.FRONT_AND_BACK=i.FRONT_AND_BACK,a.CW=i.CW,a.CCW=i.CCW,t.exports=a},function(t,e,r){"use strict";var n=r(5),i=r(3),a=r(45),o=r(14),s=r(2),u=r(10),c=s.mat4,l=0,h=n.extend({name:"",position:null,rotation:null,scale:null,worldTransform:null,localTransform:null,autoUpdateLocalTransform:!0,_parent:null,_scene:null,_needsUpdateWorldTransform:!0,_inIterating:!1,__depth:0},function(){this.name||(this.name=(this.type||"NODE")+"_"+l++),this.position||(this.position=new i),this.rotation||(this.rotation=new a),this.scale||(this.scale=new i(1,1,1)),this.worldTransform=new o,this.localTransform=new o,this._children=[]},{invisible:!1,isRenderable:function(){return!1},setName:function(t){var e=this._scene;if(e){var r=e._nodeRepository;delete r[this.name],r[t]=this}this.name=t},add:function(t){this._inIterating&&console.warn("Add operation can cause unpredictable error when in iterating");var e=t._parent;if(e!==this){e&&e.remove(t),t._parent=this,this._children.push(t);var r=this._scene;r&&r!==t.scene&&t.traverse(this._addSelfToScene,this),t._needsUpdateWorldTransform=!0}},remove:function(t){this._inIterating&&console.warn("Remove operation can cause unpredictable error when in iterating");var e=this._children,r=e.indexOf(t);r<0||(e.splice(r,1),t._parent=null,this._scene&&t.traverse(this._removeSelfFromScene,this))},removeAll:function(){for(var t=this._children,e=0;e<t.length;e++)t[e]._parent=null,this._scene&&t[e].traverse(this._removeSelfFromScene,this);this._children=[]},getScene:function(){return this._scene},getParent:function(){return this._parent},_removeSelfFromScene:function(t){t._scene.removeFromScene(t),t._scene=null},_addSelfToScene:function(t){this._scene.addToScene(t),t._scene=this._scene},isAncestor:function(t){for(var e=t._parent;e;){if(e===this)return!0;e=e._parent}return!1},children:function(){return this._children.slice()},childAt:function(t){return this._children[t]},getChildByName:function(t){for(var e=this._children,r=0;r<e.length;r++)if(e[r].name===t)return e[r]},getDescendantByName:function(t){for(var e=this._children,r=0;r<e.length;r++){var n=e[r];if(n.name===t)return n;var i=n.getDescendantByName(t);if(i)return i}},queryNode:function(t){if(t){for(var e=t.split("/"),r=this,n=0;n<e.length;n++){var i=e[n];if(i){for(var a=!1,o=r._children,s=0;s<o.length;s++){var u=o[s];if(u.name===i){r=u,a=!0;break}}if(!a)return}}return r}},getPath:function(t){if(!this._parent)return"/";for(var e=this._parent,r=this.name;e._parent&&(r=e.name+"/"+r,e._parent!=t);)e=e._parent;return!e._parent&&t?null:r},traverse:function(t,e,r){this._inIterating=!0,null!=r&&this.constructor!==r||t.call(e,this);for(var n=this._children,i=0,a=n.length;i<a;i++)n[i].traverse(t,e,r);this._inIterating=!1},eachChild:function(t,e,r){this._inIterating=!0;for(var n=this._children,i=null==r,a=0,o=n.length;a<o;a++){var s=n[a];(i||s.constructor===r)&&t.call(e,s,a)}this._inIterating=!1},setLocalTransform:function(t){c.copy(this.localTransform._array,t._array),this.decomposeLocalTransform()},decomposeLocalTransform:function(t){var e=t?null:this.scale;this.localTransform.decomposeMatrix(e,this.rotation,this.position)},setWorldTransform:function(t){c.copy(this.worldTransform._array,t._array),this.decomposeWorldTransform()},decomposeWorldTransform:function(){var t=c.create();return function(e){var r=this.localTransform,n=this.worldTransform;this._parent?(c.invert(t,this._parent.worldTransform._array),c.multiply(r._array,t,n._array)):c.copy(r._array,n._array);var i=e?null:this.scale;r.decomposeMatrix(i,this.rotation,this.position)}}(),transformNeedsUpdate:function(){return this.position._dirty||this.rotation._dirty||this.scale._dirty},updateLocalTransform:function(){var t=this.position,e=this.rotation,r=this.scale;if(this.transformNeedsUpdate()){var n=this.localTransform._array;c.fromRotationTranslation(n,e._array,t._array),c.scale(n,n,r._array),e._dirty=!1,r._dirty=!1,t._dirty=!1,this._needsUpdateWorldTransform=!0}},updateWorldTransform:function(){var t=this.localTransform._array,e=this.worldTransform._array;this._parent?c.multiplyAffine(e,this._parent.worldTransform._array,t):c.copy(e,t)},update:function(t){this.autoUpdateLocalTransform?this.updateLocalTransform():t=!0,(t||this._needsUpdateWorldTransform)&&(this.updateWorldTransform(),t=!0,this._needsUpdateWorldTransform=!1);for(var e=this._children,r=0,n=e.length;r<n;r++)e[r].update(t)},getBoundingBox:function(){function t(t){return!t.invisible}return function(e,r){r=r||new u,e=e||t;var n=this._children;0===n.length&&(r.max.set(-(1/0),-(1/0),-(1/0)),r.min.set(1/0,1/0,1/0));for(var i=new u,a=0;a<n.length;a++){var o=n[a];e(o)&&(o.getBoundingBox(e,i),o.updateLocalTransform(),i.isFinite()&&i.applyTransform(o.localTransform),0===a?r.copy(i):r.union(i))}return r}}(),getWorldPosition:function(t){if(this.transformNeedsUpdate()){for(var e=this;e&&e.getParent()&&e.getParent().transformNeedsUpdate();)e=e.getParent();e.update()}var r=this.worldTransform._array;if(t){var n=t._array;return n[0]=r[12],n[1]=r[13],n[2]=r[14],t}return new i(r[12],r[13],r[14])},clone:function(){var t=new this.constructor,e=this._children;t.setName(this.name),t.position.copy(this.position),t.rotation.copy(this.rotation),t.scale.copy(this.scale);for(var r=0;r<e.length;r++)t.add(e[r].clone());return t},rotateAround:function(){var t=new i,e=new o;return function(r,n,i){t.copy(this.position).subtract(r);var a=this.localTransform;a.identity(),a.translate(r),a.rotate(i,n),e.fromRotationTranslation(this.rotation,t),a.multiply(e),a.scale(this.scale),this.decomposeLocalTransform(),this._needsUpdateWorldTransform=!0}}(),lookAt:function(){var t=new o;return function(e,r){t.lookAt(this.position,e,r||this.localTransform.y).invert(),this.setLocalTransform(t)}}()});t.exports=h},function(t,e,r){"use strict";function n(t,e){if(e.castShadow&&!t.castShadow)return!0}var i=r(25),a=r(15),o=r(10),s=i.extend(function(){return{material:null,autoUpdate:!0,opaqueQueue:[],transparentQueue:[],lights:[],viewBoundingBoxLastFrame:new o,_lightUniforms:{},_lightNumber:{},_opaqueObjectCount:0,_transparentObjectCount:0,_nodeRepository:{}}},function(){this._scene=this},{addToScene:function(t){t.name&&(this._nodeRepository[t.name]=t)},removeFromScene:function(t){t.name&&delete this._nodeRepository[t.name]},getNode:function(t){return this._nodeRepository[t]},cloneNode:function(t){var e=t.clone(),r={},n=function(i,a){i.skeleton&&(a.skeleton=i.skeleton.clone(t,e),a.joints=i.joints.slice()),i.material&&(r[i.material.__GUID__]={oldMat:i.material});for(var o=0;o<i._children.length;o++)n(i._children[o],a._children[o])};n(t,e);for(var i in r)r[i].newMat=r[i].oldMat.clone();return e.traverse(function(t){t.material&&(t.material=r[t.material.__GUID__].newMat)}),e},update:function(t,e){if(this.autoUpdate||t){i.prototype.update.call(this,t);var r=this.lights,n=this.material&&this.material.transparent;if(this._opaqueObjectCount=0,this._transparentObjectCount=0,r.length=0,this._updateRenderQueue(this,n),this.opaqueQueue.length=this._opaqueObjectCount,this.transparentQueue.length=this._transparentObjectCount,!e){var a=this._lightNumber;for(var o in a)for(var s in a[o])a[o][s]=0;for(var u=0;u<r.length;u++){var c=r[u],o=c.group;a[o]||(a[o]={}),a[o][c.type]=a[o][c.type]||0,a[o][c.type]++}this._updateLightUniforms()}}},_updateRenderQueue:function(t,e){if(!t.invisible)for(var r=0;r<t._children.length;r++){var n=t._children[r];n instanceof a&&this.lights.push(n),n.isRenderable()&&(n.material.transparent||e?this.transparentQueue[this._transparentObjectCount++]=n:this.opaqueQueue[this._opaqueObjectCount++]=n),n._children.length>0&&this._updateRenderQueue(n)}},_updateLightUniforms:function(){var t=this.lights;t.sort(n);var e=this._lightUniforms;for(var r in e)for(var i in e[r])e[r][i].value.length=0;for(var a=0;a<t.length;a++){var o=t[a],r=o.group;for(var i in o.uniformTemplates){var s=o.uniformTemplates[i];e[r]||(e[r]={}),e[r][i]||(e[r][i]={type:"",value:[]});var u=s.value(o),c=e[r][i];switch(c.type=s.type+"v",s.type){case"1i":case"1f":case"t":c.value.push(u);break;case"2f":case"3f":case"4f":for(var l=0;l<u.length;l++)c.value.push(u[l]);break;default:console.error("Unkown light uniform type "+s.type)}}}},isShaderLightNumberChanged:function(t){var e=t.lightGroup;for(var r in this._lightNumber[e])if(this._lightNumber[e][r]!==t.lightNumber[r])return!0;for(var r in t.lightNumber)if(this._lightNumber[e][r]!==t.lightNumber[r])return!0;return!1},setShaderLightNumber:function(t){var e=t.lightGroup;for(var r in this._lightNumber[e])t.lightNumber[r]=this._lightNumber[e][r];t.dirty()},setLightUniforms:function(t,e){var r=t.lightGroup;for(var n in this._lightUniforms[r]){var i=this._lightUniforms[r][n];if("tv"===i.type)for(var a=0;a<i.value.length;a++){var o=i.value[a],s=t.currentTextureSlot(),u=t.setUniform(e,"1i",n,s);u&&t.useCurrentTextureSlot(e,o)}else t.setUniform(e,i.type,n,i.value)}},dispose:function(){this.material=null,this.opaqueQueue=[],this.transparentQueue=[],this.lights=[],this._lightUniforms={},this._lightNumber={},this._nodeRepository={}}});t.exports=s},function(t,e,r){"use strict";var n=r(5),i=n.extend(function(){return{name:"",inputLinks:{},outputLinks:{},_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}},{updateParameter:function(t,e){var r=this.outputs[t],n=r.parameters,i=r._parametersCopy;if(i||(i=r._parametersCopy={}),n)for(var a in n)"width"!==a&&"height"!==a&&(i[a]=n[a]);var o,s;return o=n.width instanceof Function?n.width.call(this,e):n.width,s=n.height instanceof Function?n.height.call(this,e):n.height,i.width===o&&i.height===s||this._outputTextures[t]&&this._outputTextures[t].dispose(e.gl),i.width=o,i.height=s,i},setParameter:function(t,e){},getParameter:function(t){},setParameters:function(t){for(var e in t)this.setParameter(e,t[e])},render:function(){},getOutput:function(t,e){if(null==e)return e=t,this._outputTextures[e];var r=this.outputs[e];if(r)return this._rendered?r.outputLastFrame?this._prevOutputTextures[e]:this._outputTextures[e]:this._rendering?(this._prevOutputTextures[e]||(this._prevOutputTextures[e]=this._compositor.allocateTexture(r.parameters||{})),this._prevOutputTextures[e]):(this.render(t),this._outputTextures[e])},removeReference:function(t){if(this._outputReferences[t]--,0===this._outputReferences[t]){var e=this.outputs[t];e.keepLastFrame?(this._prevOutputTextures[t]&&this._compositor.releaseTexture(this._prevOutputTextures[t]),this._prevOutputTextures[t]=this._outputTextures[t]):this._compositor.releaseTexture(this._outputTextures[t])}},link:function(t,e,r){this.inputLinks[t]={node:e,pin:r},e.outputLinks[r]||(e.outputLinks[r]=[]),e.outputLinks[r].push({node:this,pin:t});var n=this.pass.material.shader;n.enableTexture(t)},clear:function(){this.inputLinks={},this.outputLinks={}},updateReference:function(t){if(!this._rendering){this._rendering=!0;for(var e in this.inputLinks){var r=this.inputLinks[e];r.node.updateReference(r.pin)}this._rendering=!1}t&&this._outputReferences[t]++},beforeFrame:function(){this._rendered=!1;for(var t in this.outputLinks)this._outputReferences[t]=0},afterFrame:function(){for(var t in this.outputLinks)if(this._outputReferences[t]>0){var e=this.outputs[t];e.keepLastFrame?(this._prevOutputTextures[t]&&this._compositor.releaseTexture(this._prevOutputTextures[t]),this._prevOutputTextures[t]=this._outputTextures[t]):this._compositor.releaseTexture(this._outputTextures[t])}}});t.exports=i},function(t,e,r){"use strict";var n=r(2),i=n.vec2,a=function(t,e){t=t||0,e=e||0,this._array=i.fromValues(t,e),this._dirty=!0};if(a.prototype={constructor:a,add:function(t){return i.add(this._array,this._array,t._array),this._dirty=!0,this},set:function(t,e){return this._array[0]=t,this._array[1]=e,this._dirty=!0,this},setArray:function(t){return this._array[0]=t[0],this._array[1]=t[1],this._dirty=!0,this},clone:function(){return new a(this.x,this.y)},copy:function(t){return i.copy(this._array,t._array),this._dirty=!0,this},cross:function(t,e){return i.cross(t._array,this._array,e._array),t._dirty=!0,this},dist:function(t){return i.dist(this._array,t._array)},distance:function(t){return i.distance(this._array,t._array)},div:function(t){return i.div(this._array,this._array,t._array),this._dirty=!0,this},divide:function(t){return i.divide(this._array,this._array,t._array),this._dirty=!0,this},dot:function(t){return i.dot(this._array,t._array)},len:function(){return i.len(this._array)},length:function(){return i.length(this._array)},lerp:function(t,e,r){return i.lerp(this._array,t._array,e._array,r),this._dirty=!0,this},min:function(t){return i.min(this._array,this._array,t._array),this._dirty=!0,this},max:function(t){return i.max(this._array,this._array,t._array),this._dirty=!0,this},mul:function(t){return i.mul(this._array,this._array,t._array),this._dirty=!0,this},multiply:function(t){return i.multiply(this._array,this._array,t._array),this._dirty=!0,this},negate:function(){return i.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return i.normalize(this._array,this._array),this._dirty=!0,this},random:function(t){return i.random(this._array,t),this._dirty=!0,this},scale:function(t){return i.scale(this._array,this._array,t),this._dirty=!0,this},scaleAndAdd:function(t,e){return i.scaleAndAdd(this._array,this._array,t._array,e),this._dirty=!0,this},sqrDist:function(t){return i.sqrDist(this._array,t._array)},squaredDistance:function(t){return i.squaredDistance(this._array,t._array)},sqrLen:function(){return i.sqrLen(this._array)},squaredLength:function(){return i.squaredLength(this._array)},sub:function(t){return i.sub(this._array,this._array,t._array),this._dirty=!0,this},subtract:function(t){return i.subtract(this._array,this._array,t._array),this._dirty=!0,this},transformMat2:function(t){return i.transformMat2(this._array,this._array,t._array),this._dirty=!0,this},transformMat2d:function(t){return i.transformMat2d(this._array,this._array,t._array),this._dirty=!0,this},transformMat3:function(t){return i.transformMat3(this._array,this._array,t._array),this._dirty=!0,this},transformMat4:function(t){return i.transformMat4(this._array,this._array,t._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}},Object.defineProperty){var o=a.prototype;Object.defineProperty(o,"x",{get:function(){return this._array[0]},set:function(t){this._array[0]=t,this._dirty=!0}}),Object.defineProperty(o,"y",{get:function(){return this._array[1]},set:function(t){this._array[1]=t,this._dirty=!0}})}a.add=function(t,e,r){return i.add(t._array,e._array,r._array),t._dirty=!0,t},a.set=function(t,e,r){return i.set(t._array,e,r),t._dirty=!0,t},a.copy=function(t,e){return i.copy(t._array,e._array),t._dirty=!0,t},a.cross=function(t,e,r){return i.cross(t._array,e._array,r._array),t._dirty=!0,t},a.dist=function(t,e){return i.distance(t._array,e._array)},a.distance=a.dist,a.div=function(t,e,r){return i.divide(t._array,e._array,r._array),t._dirty=!0,t},a.divide=a.div,a.dot=function(t,e){return i.dot(t._array,e._array)},a.len=function(t){return i.length(t._array)},a.lerp=function(t,e,r,n){return i.lerp(t._array,e._array,r._array,n),t._dirty=!0,t},a.min=function(t,e,r){return i.min(t._array,e._array,r._array),t._dirty=!0,t},a.max=function(t,e,r){return i.max(t._array,e._array,r._array),t._dirty=!0,t},a.mul=function(t,e,r){return i.multiply(t._array,e._array,r._array),t._dirty=!0,t},a.multiply=a.mul,a.negate=function(t,e){return i.negate(t._array,e._array),t._dirty=!0,t},a.normalize=function(t,e){return i.normalize(t._array,e._array),t._dirty=!0,t},a.random=function(t,e){return i.random(t._array,e),t._dirty=!0,t},a.scale=function(t,e,r){return i.scale(t._array,e._array,r),t._dirty=!0,t},a.scaleAndAdd=function(t,e,r,n){return i.scaleAndAdd(t._array,e._array,r._array,n),t._dirty=!0,t},a.sqrDist=function(t,e){return i.sqrDist(t._array,e._array)},a.squaredDistance=a.sqrDist,a.sqrLen=function(t){return i.sqrLen(t._array)},a.squaredLength=a.sqrLen,a.sub=function(t,e,r){return i.subtract(t._array,e._array,r._array),t._dirty=!0,t},a.subtract=a.sub,a.transformMat2=function(t,e,r){return i.transformMat2(t._array,e._array,r._array),t._dirty=!0,t},a.transformMat2d=function(t,e,r){return i.transformMat2d(t._array,e._array,r._array),t._dirty=!0,t},a.transformMat3=function(t,e,r){return i.transformMat3(t._array,e._array,r._array),t._dirty=!0,t},a.transformMat4=function(t,e,r){return i.transformMat4(t._array,e._array,r._array),t._dirty=!0,t},t.exports=a},function(t,e,r){function n(t){this.initLight(),this._root=t,t.add(this.mainLight),t.add(this.ambientLight)}var i=r(4);n.prototype={constructor:n,initLight:function(){this.mainLight=new i.DirectionalLight({shadowBias:.005}),this.ambientLight=new i.AmbientLight},updateLight:function(t){var e=this.mainLight,r=this.ambientLight,n=t.getModel("light"),a=n.getModel("main"),o=n.getModel("ambient");e.intensity=a.get("intensity"),r.intensity=o.get("intensity"),e.color=i.parseColor(a.get("color")).slice(0,3),r.color=i.parseColor(o.get("color")).slice(0,3);var s=a.get("alpha")||0,u=a.get("beta")||0;e.position.setArray(i.directionFromAlphaBeta(s,u)),e.lookAt(i.Vector3.ZERO),e.castShadow=a.get("shadow"),e.shadowResolution=i.getShadowResolution(a.get("shadowQuality"))},updateAmbientCubemap:function(t,e,r){var n=e.getModel("light.ambientCubemap"),a=n.get("texture");if(a){this._cubemapLightsCache=this._cubemapLightsCache||{};var o=this._cubemapLightsCache[a];o||(o=this._cubemapLightsCache[a]=i.createAmbientCubemap(n.option,t,r)),this._root.add(o.diffuse),this._root.add(o.specular),this._currentCubemapLights=o}else this._currentCubemapLights&&(this._root.remove(this._currentCubemapLights.diffuse),this._root.remove(this._currentCubemapLights.specular),this._currentCubemapLights=null)}},t.exports=n},function(t,e){t.exports={defaultOption:{light:{main:{shadow:!1,shadowQuality:"high",color:"#fff",intensity:1},ambient:{color:"#fff",intensity:.2},ambientCubemap:{texture:null,exposure:1,diffuseIntensity:.5,specularIntensity:.5}}}}},function(t,e){t.exports={defaultOption:{postEffect:{enable:!1,bloom:{enable:!0,intensity:.1},SSAO:{enable:!1,radius:1,quality:"medium",intensity:1},FXAA:{enable:!1}},temporalSuperSampling:{enable:"auto"}}}},function(t,e){t.exports={defaultOption:{viewControl:{autoRotate:!1,autoRotateAfterStill:3,distance:150,minDistance:40,maxDistance:400,alpha:0,beta:0}},setView:function(t){t=t||{},this.option.viewControl=this.option.viewControl||{},null!=t.alpha&&(this.option.viewControl.alpha=t.alpha),null!=t.beta&&(this.option.viewControl.beta=t.beta),null!=t.distance&&(this.option.viewControl.distance=t.distance)}}},function(t,e,r){function n(t){t=t||"perspective",this.layer=null,this.scene=new i,this.viewport={x:0,y:0,width:0,height:0},this.setCameraType(t),this._compositor=new l,this._temporalSS=new h,this._shadowMapPass=new a,this.scene.on("beforerender",function(t,e,r){this.needsTemporalSS()&&this._temporalSS.jitterProjection(t,r)},this)}var i=r(26),a=r(163),o=r(42),s=r(41),u=r(14),c=r(3),l=r(130),h=r(132);n.prototype.setCameraType=function(t){var e=this.camera;e&&e.update(),"perspective"===t?this.camera instanceof o||(this.camera=new o,e&&this.camera.setLocalTransform(e.localTransform)):this.camera instanceof s||(this.camera=new s,e&&this.camera.setLocalTransform(e.localTransform))},n.prototype.setViewport=function(t,e,r,n,i){this.camera instanceof o&&(this.camera.aspect=r/n),i=i||1,this.viewport.x=t,this.viewport.y=e,this.viewport.width=r,this.viewport.height=n,this.viewport.devicePixelRatio=i,this._compositor.resize(r*i,n*i),this._temporalSS.resize(r*i,n*i)},n.prototype.containPoint=function(t,e){var r=this.viewport;return t>=r.x&&e>=r.y&&t<=r.x+r.width&&e<=r.y+r.height},n.prototype.prepareRender=function(){this.scene.update(),this.camera.update(),this._needsSortProgressively=!1;for(var t=0;t<this.scene.transparentQueue.length;t++){var e=this.scene.transparentQueue[t],r=e.geometry;r.needsSortVerticesProgressively&&r.needsSortVerticesProgressively()&&(this._needsSortProgressively=!0),r.needsSortTrianglesProgressively&&r.needsSortTrianglesProgressively()&&(this._needsSortProgressively=!0)}},n.prototype.render=function(t,e){e||(this._frame=0,this._temporalSS.resetFrame()),this._doRender(t,e,this._frame),this._frame++},n.prototype.needsAccumulate=function(){return this.needsTemporalSS()||this._needsSortProgressively},n.prototype.needsTemporalSS=function(){var t=this._enableTemporalSS;return"auto"==t&&(t=this._enablePostEffect),t},n.prototype.isAccumulateFinished=function(){return this.needsTemporalSS()?this._temporalSS.isFinished():this._frame>20},n.prototype._doRender=function(t,e,r){var n=this.scene,i=this.camera,a=new c,o=new u,s=i.getWorldPosition();r=r||0;for(var l=0;l<n.transparentQueue.length;l++){var h=n.transparentQueue[l],f=h.geometry;u.invert(o,h.worldTransform),c.transformMat4(a,s,o),f.needsSortTriangles&&f.needsSortTriangles()&&f.doSortTriangles(a,r),f.needsSortVertices&&f.needsSortVertices()&&f.doSortVertices(a,r)}if(e||this._shadowMapPass.render(t,n,i,!0),t.gl.clearColor(0,0,0,0),this._enablePostEffect){var d=this._compositor.getSourceFrameBuffer();d.bind(t),t.gl.clear(t.gl.DEPTH_BUFFER_BIT|t.gl.COLOR_BUFFER_BIT),t.render(n,i,!0),d.unbind(t),this._enableSSAO&&(this._compositor.updateSSAO(t,i,this._temporalSS.getFrame()),this._compositor.blendSSAO(t,this._compositor.getSourceTexture())),this.needsTemporalSS()&&e?(this._compositor.composite(t,this._temporalSS.getSourceFrameBuffer()),t.setViewport(this.viewport),this._temporalSS.render(t)):(t.setViewport(this.viewport),this._compositor.composite(t))}else if(this.needsTemporalSS()&&e){var d=this._temporalSS.getSourceFrameBuffer();d.bind(t),t.saveClear(),t.clearBit=t.gl.DEPTH_BUFFER_BIT|t.gl.COLOR_BUFFER_BIT,t.render(n,i,!0),t.restoreClear(),d.unbind(t),t.setViewport(this.viewport),this._temporalSS.render(t)}else t.setViewport(this.viewport),t.render(n,i,!0)},n.prototype.dispose=function(t){this._compositor.dispose(t.gl),this._temporalSS.dispose(t.gl),this._shadowMapPass.dispose(t)},n.prototype.setPostEffect=function(t){var e=this._compositor;this._enablePostEffect=t.get("enable");var r=t.getModel("bloom"),n=t.getModel("depthOfField"),i=t.getModel("SSAO"),a=t.getModel("FXAA");a.get("enable")?e.enableFXAA():e.disableFXAA(),r.get("enable")?e.enableBloom():e.disableBloom(),n.get("enable")?e.enableDOF():e.disableDOF(),this._enableSSAO=i.get("enable"),this._enableSSAO?e.enableSSAO():e.disableSSAO(),e.setBloomIntensity(r.get("intensity")),e.setSSAORadius(i.get("radius")),e.setSSAOQuality(i.get("quality")),e.setSSAOIntensity(i.get("intensity"))},n.prototype.setTemporalSuperSampling=function(t){this._enableTemporalSS=t.get("enable")},n.prototype.isLinearSpace=function(){return this._enablePostEffect},n.prototype.add=function(t){this.scene.add(t)},n.prototype.remove=function(t){this.scene.remove(t)},n.prototype.removeAll=function(t){this.scene.removeAll(t)},t.exports=n},function(t,e,r){var n=r(5),i=r(28),a=r(3),o=r(45),s=n.extend(function(){return{zr:null,viewGL:null,origin:new a,minDistance:.5,maxDistance:1.5,autoRotateAfterStill:0,mode:"rotate",_camera:null,_needsUpdate:!1,_rotating:!1,_phi:0,_theta:0,_mouseX:0,_mouseY:0,_rotateVelocity:new i,_panVelocity:new i,_distance:500,_zoomSpeed:0,_stillTimeout:0,_animators:[]}},function(){this._mouseDownHandler=this._mouseDownHandler.bind(this),this._mouseWheelHandler=this._mouseWheelHandler.bind(this),this._mouseMoveHandler=this._mouseMoveHandler.bind(this),this._mouseUpHandler=this._mouseUpHandler.bind(this),this._update=this._update.bind(this)},{init:function(){var t=this.zr;t.on("mousedown",this._mouseDownHandler),t.on("mousewheel",this._mouseWheelHandler),this._decomposeTransform(),t.animation.on("frame",this._update)},dispose:function(){var t=this.zr;t.off("mousedown",this._mouseDownHandler),t.off("mousemove",this._mouseMoveHandler),t.off("mouseup",this._mouseUpHandler),t.off("mousewheel",this._mouseWheelHandler),t.animation.off("frame",this._update),this.stopAllAnimation()},getDistance:function(){return this._distance},setDistance:function(t){this._distance=t,this._needsUpdate=!0},getAlpha:function(){return this._theta/Math.PI*180},getBeta:function(){return-this._phi/Math.PI*180},setAlpha:function(t){this._theta=t/180*Math.PI,this._needsUpdate=!0},setBeta:function(t){this._phi=-t/180*Math.PI,this._needsUpdate=!0},setCamera:function(t){this._camera=t,this._decomposeTransform(),this._needsUpdate=!0},setViewGL:function(t){this.viewGL=t},getCamera:function(){return this._camera},setFromViewControlModel:function(t,e){this.autoRotate=t.get("autoRotate"),this.autoRotateAfterStill=t.get("autoRotateAfterStill"),this.minDistance=t.get("minDistance")+e,this.maxDistance=t.get("maxDistance")+e;var r=t.get("distance")+e;this._distance!==r&&this.zoomTo({distance:r}),this.setAlpha(t.get("alpha")||0),this.setBeta(t.get("beta")||0)},rotateTo:function(t){var e;if(t.rotation)e=t.rotation;else{e=new o;var r=new a;a.negate(r,t.z),e.setAxes(r,t.x,t.y)}},zoomTo:function(t){var e=this.zr,r=t.distance,n=this;return r=Math.max(Math.min(this.maxDistance,r),this.minDistance),this._addAnimator(e.animation.animate(this).when(t.time||1e3,{_distance:r}).during(function(){n._needsUpdate=!0})).start(t.easing||"linear")},stopAllAnimation:function(){for(var t=0;t<this._animators.length;t++)this._animators[t].stop();this._animators.length=0},_isAnimating:function(){return this._animators.length>0},_update:function(t){this._rotating?(this._phi-=1e-4*t,this._needsUpdate=!0):this._rotateVelocity.len()>0&&(this._needsUpdate=!0),Math.abs(this._zoomSpeed)>.1&&(this._needsUpdate=!0),this._panVelocity.len()>0&&(this._needsUpdate=!0),this._needsUpdate&&(this._updateDistance(t),this._updateRotate(t),this._updatePan(t),this._camera.update(),this._updateTransform(),this.zr.refresh(),this.trigger("update"),this._needsUpdate=!1)},_updateRotate:function(t){var e=this._rotateVelocity;this._phi=(e.y*t/20+this._phi)%(2*Math.PI),this._theta=(e.x*t/20+this._theta)%(2*Math.PI),this._theta=Math.max(Math.min(this._theta,Math.PI/2),-Math.PI/2),this._vectorDamping(e,.9)},_updateDistance:function(t){this._setDistance(this._distance+this._zoomSpeed*t/20),this._zoomSpeed*=.8},_setDistance:function(t){this._distance=Math.max(Math.min(t,this.maxDistance),this.minDistance)},_updatePan:function(t){var e=this._rotateVelocity,r=this._distance,n=this._camera,i=n.worldTransform.y,a=n.worldTransform.x;this.origin.scaleAndAdd(a,e.x*r/400).scaleAndAdd(i,e.y*r/400),this._vectorDamping(e,.8)},_updateTransform:function(){var t=this._camera,e=new a,r=this._theta+Math.PI/2,n=this._phi+Math.PI/2,i=Math.sin(r);e.x=i*Math.cos(n),e.y=-Math.cos(r),e.z=i*Math.sin(n),t.position.copy(this.origin).scaleAndAdd(e,this._distance),t.rotation.identity().rotateY(-this._phi).rotateX(-this._theta);
},_startCountingStill:function(){clearTimeout(this._stillTimeout);var t=this.autoRotateAfterStill,e=this;!isNaN(t)&&t>0&&(this._stillTimeout=setTimeout(function(){e._rotating=!0},1e3*t))},_vectorDamping:function(t,e){var r=t.len();r*=e,r<1e-4&&(r=0),t.normalize().scale(r)},_decomposeTransform:function(){},_mouseDownHandler:function(t){if(!t.target&&!this._isAnimating()){var e=t.offsetX,r=this.zr.getHeight()-t.offsetY;this.viewGL&&!this.viewGL.containPoint(e,r)||(this.zr.on("mousemove",this._mouseMoveHandler),this.zr.on("mouseup",this._mouseUpHandler),t=t.event,"rotate"===this.mode&&(this._rotateVelocity.set(0,0),this._rotating=!1,this.autoRotate&&this._startCountingStill()),this._mouseX=t.offsetX,this._mouseY=t.offsetY)}},_mouseMoveHandler:function(t){this._isAnimating()||(t=t.event,"rotate"===this.mode?(this._rotateVelocity.y=(t.offsetX-this._mouseX)/500,this._rotateVelocity.x=(t.offsetY-this._mouseY)/500):"pan"===this.mode&&(this._panVelocity.x=t.offsetX-this._mouseX,this._panVelocity.y=-t.offsetY+this._mouseY),this._mouseX=t.offsetX,this._mouseY=t.offsetY)},_mouseWheelHandler:function(t){if(!this._isAnimating()){t=t.event;var e=t.wheelDelta||-t.detail;if(0!==e){var r=Math.max(Math.min(this._distance-this.minDistance,this.maxDistance-this._distance));this._zoomSpeed=(e>0?1:-1)*Math.max(r/40,.5),this._rotating=!1,this.autoRotate&&"rotate"===this.mode&&this._startCountingStill()}}},_mouseUpHandler:function(){this.zr.off("mousemove",this._mouseMoveHandler),this.zr.off("mouseup",this._mouseUpHandler)},_addAnimator:function(t){var e=this._animators;return e.push(t),t.done(function(){var r=e.indexOf(t);r>=0&&e.splice(r,1)}),t}});Object.defineProperty(s.prototype,"autoRotate",{get:function(t){return this._autoRotate},set:function(t){this._autoRotate=t,this._rotating=t}}),t.exports=s},function(t,e){t.exports={convertToDynamicArray:function(t){t&&this.resetOffset();var e=this.attributes;for(var r in e)t||!e[r].value?e[r].value=[]:e[r].value=Array.prototype.slice.call(e[r].value);t||!this.indices?this.indices=[]:this.indices=Array.prototype.slice.call(this.indices)},convertToTypedArray:function(){var t=this.attributes;for(var e in t)t[e].value&&t[e].value.length>0?t[e].value=new Float32Array(t[e].value):t[e].value=null;this.indices&&this.indices.length>0&&(this.indices=this.vertexCount>65535?new Uint32Array(this.indices):new Uint16Array(this.indices))}}},function(t,e){"use strict";var r="__dt__",n=function(){this._contextId=0,this._caches=[],this._context={}};n.prototype={use:function(t,e){var r=this._caches;r[t]||(r[t]={},e&&(r[t]=e())),this._contextId=t,this._context=r[t]},put:function(t,e){this._context[t]=e},get:function(t){return this._context[t]},dirty:function(t){t=t||"";var e=r+t;this.put(e,!0)},dirtyAll:function(t){t=t||"";for(var e=r+t,n=this._caches,i=0;i<n.length;i++)n[i]&&(n[i][e]=!0)},fresh:function(t){t=t||"";var e=r+t;this.put(e,!1)},freshAll:function(t){t=t||"";for(var e=r+t,n=this._caches,i=0;i<n.length;i++)n[i]&&(n[i][e]=!1)},isDirty:function(t){t=t||"";var e=r+t,n=this._context;return!n.hasOwnProperty(e)||n[e]===!0},deleteContext:function(t){delete this._caches[t],this._context={}},delete:function(t){delete this._context[t]},clearAll:function(){this._caches={}},getContext:function(){return this._context},eachContext:function(t,e){var r=Object.keys(this._caches);r.forEach(function(r){t&&t.call(e,r)})},miss:function(t){return!this._context.hasOwnProperty(t)}},n.prototype.constructor=n,t.exports=n},function(t,e){t.exports="@export ecgl.lines3D.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position: POSITION;\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n\nvoid main()\n{\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n    v_Color = a_Color;\n}\n\n@end\n\n@export ecgl.lines3D.fragment\n\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\n\nvarying vec4 v_Color;\n\nvoid main()\n{\n    gl_FragColor = vec4(color, alpha) * v_Color;\n}\n@end\n\n\n@export ecgl.meshLines3D.vertex\n\n// https://mattdesl.svbtle.com/drawing-lines-is-hard\nattribute vec3 position: POSITION;\nattribute vec3 positionPrev;\nattribute vec3 positionNext;\nattribute float offset;\nattribute vec4 a_Color : COLOR;\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec4 viewport : VIEWPORT;\nuniform float near : NEAR;\n\nvarying vec4 v_Color;\nvarying float v_Miter;\n\nvec4 clipNear(vec4 p1, vec4 p2) {\n    float n = (p1.w - near) / (p1.w - p2.w);\n    // PENDING\n    return vec4(mix(p1.xy, p2.xy, n), -near, near);\n}\n\nvoid main()\n{\n    vec4 prevProj = worldViewProjection * vec4(positionPrev, 1.0);\n    vec4 currProj = worldViewProjection * vec4(position, 1.0);\n    vec4 nextProj = worldViewProjection * vec4(positionNext, 1.0);\n\n    if (currProj.w < 0.0) {\n        if (prevProj.w < 0.0) {\n            currProj = clipNear(currProj, nextProj);\n        }\n        else {\n            currProj = clipNear(currProj, prevProj);\n        }\n    }\n\n    vec2 prevScreen = (prevProj.xy / abs(prevProj.w) + 1.0) * 0.5 * viewport.zw;\n    vec2 currScreen = (currProj.xy / abs(currProj.w) + 1.0) * 0.5 * viewport.zw;\n    vec2 nextScreen = (nextProj.xy / abs(nextProj.w) + 1.0) * 0.5 * viewport.zw;\n\n    vec2 dir;\n    float len = offset;\n    // Start point\n    if (position == positionPrev) {\n        dir = normalize(nextScreen - currScreen);\n        v_Miter = 1.0;\n    }\n    // End point\n    else if (position == positionNext) {\n        dir = normalize(currScreen - prevScreen);\n        v_Miter = 1.0;\n    }\n    else {\n        vec2 dirA = normalize(currScreen - prevScreen);\n        vec2 dirB = normalize(nextScreen - currScreen);\n\n        vec2 tanget = normalize(dirA + dirB);\n\n        v_Miter = 1.0 / max(dot(tanget, dirA), 0.5);\n        len *= v_Miter;\n        dir = tanget;\n    }\n\n    dir = vec2(-dir.y, dir.x) * len;\n    currScreen += dir;\n\n    currProj.xy = (currScreen / viewport.zw - 0.5) * 2.0 * abs(currProj.w);\n    gl_Position = currProj;\n\n    v_Color = a_Color;\n}\n@end\n\n\n@export ecgl.meshLines3D.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nvarying vec4 v_Color;\nvarying float v_Miter;\n\nvoid main()\n{\n    // TODO Fadeout pixels v_Miter > 1\n    gl_FragColor = color * v_Color;\n}\n\n@end"},function(t,e,r){var n=r(13),i=r(2).vec3,a=r(1),o=r(35),s=n.extend(function(){return{segmentScale:1,useNativeLine:!0,attributes:{position:new n.Attribute("position","float",3,"POSITION"),positionPrev:new n.Attribute("normal","float",3),positionNext:new n.Attribute("normal","float",3),offset:new n.Attribute("normal","float",1),color:new n.Attribute("color","float",4,"COLOR")}}},{resetOffset:function(){this._vertexOffset=0,this._faceOffset=0},setVertexCount:function(t){var e=this.attributes;this.vertexCount!==t&&(e.position.init(t),e.color.init(t),this.useNativeLine||(e.positionPrev.init(t),e.positionNext.init(t),e.offset.init(t)),t>65535?this.indices instanceof Uint16Array&&(this.indices=new Uint32Array(this.indices)):this.indices instanceof Uint32Array&&(this.indices=new Uint16Array(this.indices)))},setTriangleCount:function(t){this.triangleCount!==t&&(0===t?this.indices=null:this.indices=this.vertexCount>65535?new Uint32Array(3*t):new Uint16Array(3*t))},_getCubicCurveApproxStep:function(t,e,r,n){var a=i.dist(t,e)+i.dist(r,e)+i.dist(n,r),o=1/(a+1)*this.segmentScale;return o},getCubicCurveVertexCount:function(t,e,r,n){var i=this._getCubicCurveApproxStep(t,e,r,n),a=Math.ceil(1/i);return this.useNativeLine?2*a:2*a+2},getCubicCurveTriangleCount:function(t,e,r,n){var i=this._getCubicCurveApproxStep(t,e,r,n),a=Math.ceil(1/i);return this.useNativeLine?0:2*a},getLineVertexCount:function(){return this.getPolylineVertexCount(2)},getLineTriangleCount:function(){return this.getPolylineTriangleCount(2)},getPolylineVertexCount:function(t){var e="number"!=typeof t[0],r=e?t.length:t.length/2;return this.useNativeLine?2*(r-1):2*(r-1)+2},getPolylineTriangleCount:function(t){var e="number"!=typeof t[0],r=e?t.length:t.length/2;return this.useNativeLine?0:2*(r-1)},addCubicCurve:function(t,e,r,n,i,a){null==a&&(a=1);for(var o=t[0],s=t[1],u=t[2],c=e[0],l=e[1],h=e[2],f=r[0],d=r[1],_=r[2],p=n[0],m=n[1],v=n[2],g=this._getCubicCurveApproxStep(t,e,r,n),y=g*g,x=y*g,T=3*g,b=3*y,E=6*y,w=6*x,S=o-2*c+f,A=s-2*l+d,M=u-2*h+_,C=3*(c-f)-o+p,L=3*(l-d)-s+m,R=3*(h-_)-u+v,N=o,D=s,I=u,O=(c-o)*T+S*b+C*x,P=(l-s)*T+A*b+L*x,F=(h-u)*T+M*b+R*x,B=S*E+C*w,U=A*E+L*w,k=M*E+R*w,z=C*w,G=L*w,V=R*w,H=0,W=0,q=Math.ceil(1/g),X=new Float32Array(3*(q+1)),X=[],j=0,W=0;W<q+1;W++)X[j++]=N,X[j++]=D,X[j++]=I,N+=O,D+=P,I+=F,O+=B,P+=U,F+=k,B+=z,U+=G,k+=V,H+=g;this.addPolyline(X,i,a)},addLine:function(t,e,r,n){this.addPolyline([t,e],r,n)},addPolyline:function(t,e,r){if(t.length){var n="number"!=typeof t[0],i=this.attributes.position,a=this.attributes.positionPrev,o=this.attributes.positionNext,s=this.attributes.color,u=this.attributes.offset,c=this.indices;null==r&&(r=1);for(var l,h=this._vertexOffset,f=n?t.length:t.length/3,d=this.useNativeLine?f-1:f,_=0;_<d;_++)if(n?l=t[_]:(l=l||[],l[0]=t[3*_],l[1]=t[3*_+1],l[2]=t[3*_+2]),this.useNativeLine?(_>0?(i.copy(h,h-1),s.copy(h,h-1)):(s.set(h,e),i.set(h,l)),h++):(_<d-1&&(a.set(h+2,l),a.set(h+3,l)),_>0&&(o.set(h-2,l),o.set(h-1,l)),i.set(h,l),i.set(h+1,l),s.set(h,e),s.set(h+1,e),u.set(h,r/2),u.set(h+1,-r/2),h+=2),this.useNativeLine)s.set(h,e),i.set(h,l),h++;else if(_>0){var p=3*this._faceOffset,c=this.indices;c[p]=h-4,c[p+1]=h-3,c[p+2]=h-2,c[p+3]=h-3,c[p+4]=h-1,c[p+5]=h-2,this._faceOffset+=2}if(!this.useNativeLine){var m=this._vertexOffset,v=this._vertexOffset+2*t.length;a.copy(m,m+2),a.copy(m+1,m+3),o.copy(v-1,v-3),o.copy(v-2,v-4)}this._vertexOffset=h}}});a.util.defaults(s.prototype,o),t.exports=s},function(t,e,r){var n=r(2).vec3,i=r(54),a=n.create(),o=n.create(),s=n.create();t.exports={needsSortTriangles:function(){return this.indices&&this.sortTriangles},needsSortTrianglesProgressively:function(){return this.needsSortTriangles()&&this.triangleCount>=2e4},doSortTriangles:function(t,e){var r=this.indices;if(0===e){var i=this.attributes.position,t=t._array;this._triangleZList&&this._triangleZList.length===this.triangleCount||(this._triangleZList=new Float32Array(this.triangleCount),this._sortedTriangleIndices=new Uint32Array(this.triangleCount),this._indicesTmp=new r.constructor(r.length),this._triangleZListTmp=new Float32Array(this.triangleCount));for(var u=0,c=0;c<r.length;){i.get(r[c++],a),i.get(r[c++],o),i.get(r[c++],s);var l=n.sqrDist(a,t),h=n.sqrDist(o,t),f=n.sqrDist(s,t),d=Math.min(l,h);d=Math.min(d,f),this._triangleZList[u++]=d}}for(var _=this._sortedTriangleIndices,c=0;c<_.length;c++)_[c]=c;if(this.triangleCount<2e4)0===e&&this._simpleSort(!0);else for(var c=0;c<3;c++)this._progressiveQuickSort(3*e+c);for(var p=this._indicesTmp,m=this._triangleZListTmp,v=this._triangleZList,c=0;c<this.triangleCount;c++){var g=3*_[c],y=3*c;p[y++]=r[g++],p[y++]=r[g++],p[y]=r[g],m[c]=v[_[c]]}var x=this._indicesTmp;this._indicesTmp=this.indices,this.indices=x;var x=this._triangleZListTmp;this._triangleZListTmp=this._triangleZList,this._triangleZList=x,this.dirtyIndices()},_simpleSort:function(t){function e(t,e){return r[e]-r[t]}var r=this._triangleZList,n=this._sortedTriangleIndices;t?n.sort(e):i.sort(n,e,0,n.length-1)},_progressiveQuickSort:function(t){var e=this._triangleZList,r=this._sortedTriangleIndices;this._quickSort=this._quickSort||new i,this._quickSort.step(r,function(t,r){return e[r]-e[t]},t)}}},function(t,e,r){"use strict";function n(t,e,r,n,i){var a=0,o=0;null==n&&(n=1/0),null==i&&(i=1/0);var s=0;e.eachChild(function(u,c){var l,h,f=u.position,d=u.getBoundingRect(),_=e.childAt(c+1),p=_&&_.getBoundingRect();if("horizontal"===t){var m=d.width+(p?-p.x+d.x:0);l=a+m,l>n||u.newline?(a=0,l=m,o+=s+r,s=d.height):s=Math.max(s,d.height)}else{var v=d.height+(p?-p.y+d.y:0);h=o+v,h>i||u.newline?(a+=s+r,o=0,h=v,s=d.width):s=Math.max(s,d.width)}u.newline||(f[0]=a,f[1]=o,"horizontal"===t?a=l+r:o=h+r)})}var i=r(18),a=r(76),o=r(58),s=r(145),u=o.parsePercent,c=i.each,l={},h=l.LOCATION_PARAMS=["left","right","top","bottom","width","height"],f=l.HV_NAMES=[["width","left","right"],["height","top","bottom"]];l.box=n,l.vbox=i.curry(n,"vertical"),l.hbox=i.curry(n,"horizontal"),l.getAvailableSize=function(t,e,r){var n=e.width,i=e.height,a=u(t.x,n),o=u(t.y,i),c=u(t.x2,n),l=u(t.y2,i);return(isNaN(a)||isNaN(parseFloat(t.x)))&&(a=0),(isNaN(c)||isNaN(parseFloat(t.x2)))&&(c=n),(isNaN(o)||isNaN(parseFloat(t.y)))&&(o=0),(isNaN(l)||isNaN(parseFloat(t.y2)))&&(l=i),r=s.normalizeCssArray(r||0),{width:Math.max(c-a-r[1]-r[3],0),height:Math.max(l-o-r[0]-r[2],0)}},l.getLayoutRect=function(t,e,r){r=s.normalizeCssArray(r||0);var n=e.width,i=e.height,o=u(t.left,n),c=u(t.top,i),l=u(t.right,n),h=u(t.bottom,i),f=u(t.width,n),d=u(t.height,i),_=r[2]+r[0],p=r[1]+r[3],m=t.aspect;switch(isNaN(f)&&(f=n-l-p-o),isNaN(d)&&(d=i-h-_-c),isNaN(f)&&isNaN(d)&&(m>n/i?f=.8*n:d=.8*i),null!=m&&(isNaN(f)&&(f=m*d),isNaN(d)&&(d=f/m)),isNaN(o)&&(o=n-l-f-p),isNaN(c)&&(c=i-h-d-_),t.left||t.right){case"center":o=n/2-f/2-r[3];break;case"right":o=n-f-p}switch(t.top||t.bottom){case"middle":case"center":c=i/2-d/2-r[0];break;case"bottom":c=i-d-_}o=o||0,c=c||0,isNaN(f)&&(f=n-o-(l||0)),isNaN(d)&&(d=i-c-(h||0));var v=new a(o+r[3],c+r[0],f,d);return v.margin=r,v},l.positionElement=function(t,e,r,n,o){var s=!o||!o.hv||o.hv[0],u=!o||!o.hv||o.hv[1],c=o&&o.boundingMode||"all";if(s||u){var h;if("raw"===c)h="group"===t.type?new a(0,0,+e.width||0,+e.height||0):t.getBoundingRect();else if(h=t.getBoundingRect(),t.needLocalTransform()){var f=t.getLocalTransform();h=h.clone(),h.applyTransform(f)}e=l.getLayoutRect(i.defaults({width:h.width,height:h.height},e),r,n);var d=t.position,_=s?e.x-h.x:0,p=u?e.y-h.y:0;t.attr("position","raw"===c?[_,p]:[d[0]+_,d[1]+p])}},l.sizeCalculable=function(t,e){return null!=t[f[e][0]]||null!=t[f[e][1]]&&null!=t[f[e][2]]},l.mergeLayoutParam=function(t,e,r){function n(r,n){var i={},s=0,l={},h=0,f=2;if(c(r,function(e){l[e]=t[e]}),c(r,function(t){a(e,t)&&(i[t]=l[t]=e[t]),o(i,t)&&s++,o(l,t)&&h++}),u[n])return o(e,r[2])&&(l[r[1]]=null),o(e,r[1])&&(l[r[2]]=null),l;if(h!==f&&s){if(s>=f)return i;for(var d=0;d<r.length;d++){var _=r[d];if(!a(i,_)&&a(t,_)){i[_]=t[_];break}}return i}return l}function a(t,e){return t.hasOwnProperty(e)}function o(t,e){return null!=t[e]&&"auto"!==t[e]}function s(t,e,r){c(t,function(t){e[t]=r[t]})}!i.isObject(r)&&(r={});var u=r.ignoreSize;!i.isArray(u)&&(u=[u,u]);var l=n(f[0],0),h=n(f[1],1);s(f[0],t,l),s(f[1],t,h)},l.getLayoutParams=function(t){return l.copyLayoutParams({},t)},l.copyLayoutParams=function(t,e){return e&&t&&c(h,function(r){e.hasOwnProperty(r)&&(t[r]=e[r])}),t},t.exports=l},function(t,e,r){"use strict";var n=r(60),i=n.extend({left:-1,right:1,near:-1,far:1,top:1,bottom:-1},{updateProjectionMatrix:function(){this.projectionMatrix.ortho(this.left,this.right,this.bottom,this.top,this.near,this.far)},decomposeProjectionMatrix:function(){var t=this.projectionMatrix._array;this.left=(-1-t[12])/t[0],this.right=(1-t[12])/t[0],this.top=(1-t[13])/t[5],this.bottom=(-1-t[13])/t[5],this.near=-(-1-t[14])/t[10],this.far=-(1-t[14])/t[10]},clone:function(){var t=n.prototype.clone.call(this);return t.left=this.left,t.right=this.right,t.near=this.near,t.far=this.far,t.top=this.top,t.bottom=this.bottom,t}});t.exports=i},function(t,e,r){"use strict";var n=r(60),i=n.extend({fov:50,aspect:1,near:.1,far:2e3},{updateProjectionMatrix:function(){var t=this.fov/180*Math.PI;this.projectionMatrix.perspective(t,this.aspect,this.near,this.far)},decomposeProjectionMatrix:function(){var t=this.projectionMatrix._array,e=2*Math.atan(1/t[5]);this.fov=e/Math.PI*180,this.aspect=t[5]/t[0],this.near=t[14]/(t[10]-1),this.far=t[14]/(t[10]+1)},clone:function(){var t=n.prototype.clone.call(this);return t.fov=this.fov,t.aspect=this.aspect,t.near=this.near,t.far=this.far,t}});t.exports=i},function(t,e,r){"use strict";var n=r(13),i=r(10),a=n.extend({widthSegments:1,heightSegments:1},function(){this.build()},{build:function(){for(var t=this.heightSegments,e=this.widthSegments,r=this.attributes,n=[],a=[],o=[],s=[],u=0;u<=t;u++)for(var c=u/t,l=0;l<=e;l++){var h=l/e;if(n.push([2*h-1,2*c-1,0]),a&&a.push([h,c]),o&&o.push([0,0,1]),l<e&&u<t){var f=l+u*(e+1);s.push([f,f+1,f+e+1]),s.push([f+e+1,f+1,f+e+2])}}r.position.fromArray(n),r.texcoord0.fromArray(a),r.normal.fromArray(o),this.initIndicesFromArray(s),this.boundingBox=new i,this.boundingBox.min.set(-1,-1,0),this.boundingBox.max.set(1,1,0)}});t.exports=a},function(t,e,r){"use strict";var n=(r(3),r(10)),i=r(71),a=r(2),o=a.vec3,s=o.set,u=o.copy,c=o.transformMat4,l=Math.min,h=Math.max,f=function(){this.planes=[];for(var t=0;t<6;t++)this.planes.push(new i);this.boundingBox=new n,this.vertices=[];for(var t=0;t<8;t++)this.vertices[t]=o.fromValues(0,0,0)};f.prototype={setFromProjection:function(t){var e=this.planes,r=t._array,n=r[0],i=r[1],a=r[2],o=r[3],u=r[4],c=r[5],l=r[6],h=r[7],f=r[8],d=r[9],_=r[10],p=r[11],m=r[12],v=r[13],g=r[14],y=r[15];s(e[0].normal._array,o-n,h-u,p-f),e[0].distance=-(y-m),e[0].normalize(),s(e[1].normal._array,o+n,h+u,p+f),e[1].distance=-(y+m),e[1].normalize(),s(e[2].normal._array,o+i,h+c,p+d),e[2].distance=-(y+v),e[2].normalize(),s(e[3].normal._array,o-i,h-c,p-d),e[3].distance=-(y-v),e[3].normalize(),s(e[4].normal._array,o-a,h-l,p-_),e[4].distance=-(y-g),e[4].normalize(),s(e[5].normal._array,o+a,h+l,p+_),e[5].distance=-(y+g),e[5].normalize();var x=this.boundingBox;if(0===y){var T=c/n,b=-g/(_-1),E=-g/(_+1),w=-E/c,S=-b/c;x.min.set(-w*T,-w,E),x.max.set(w*T,w,b);var A=this.vertices;s(A[0],-w*T,-w,E),s(A[1],-w*T,w,E),s(A[2],w*T,-w,E),s(A[3],w*T,w,E),s(A[4],-S*T,-S,b),s(A[5],-S*T,S,b),s(A[6],S*T,-S,b),s(A[7],S*T,S,b)}else{var M=(-1-m)/n,C=(1-m)/n,L=(1-v)/c,R=(-1-v)/c,N=(-1-g)/_,D=(1-g)/_;x.min.set(M,R,D),x.max.set(C,L,N);var I=x.min._array,O=x.max._array,A=this.vertices;s(A[0],I[0],I[1],I[2]),s(A[1],I[0],O[1],I[2]),s(A[2],O[0],I[1],I[2]),s(A[3],O[0],O[1],I[2]),s(A[4],I[0],I[1],O[2]),s(A[5],I[0],O[1],O[2]),s(A[6],O[0],I[1],O[2]),s(A[7],O[0],O[1],O[2])}},getTransformedBoundingBox:function(){var t=o.create();return function(e,r){var n=this.vertices,i=r._array,a=e.min,o=e.max,s=a._array,f=o._array,d=n[0];c(t,d,i),u(s,t),u(f,t);for(var _=1;_<8;_++)d=n[_],c(t,d,i),s[0]=l(t[0],s[0]),s[1]=l(t[1],s[1]),s[2]=l(t[2],s[2]),f[0]=h(t[0],f[0]),f[1]=h(t[1],f[1]),f[2]=h(t[2],f[2]);return a._dirty=!0,o._dirty=!0,e}}()},t.exports=f},function(t,e,r){"use strict";var n=r(2),i=n.quat,a=function(t,e,r,n){t=t||0,e=e||0,r=r||0,n=void 0===n?1:n,this._array=i.fromValues(t,e,r,n),this._dirty=!0};a.prototype={constructor:a,add:function(t){return i.add(this._array,this._array,t._array),this._dirty=!0,this},calculateW:function(){return i.calculateW(this._array,this._array),this._dirty=!0,this},set:function(t,e,r,n){return this._array[0]=t,this._array[1]=e,this._array[2]=r,this._array[3]=n,this._dirty=!0,this},setArray:function(t){return this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3],this._dirty=!0,this},clone:function(){return new a(this.x,this.y,this.z,this.w)},conjugate:function(){return i.conjugate(this._array,this._array),this._dirty=!0,this},copy:function(t){return i.copy(this._array,t._array),this._dirty=!0,this},dot:function(t){return i.dot(this._array,t._array)},fromMat3:function(t){return i.fromMat3(this._array,t._array),this._dirty=!0,this},fromMat4:function(){var t=n.mat3,e=t.create();return function(r){return t.fromMat4(e,r._array),t.transpose(e,e),i.fromMat3(this._array,e),this._dirty=!0,this}}(),identity:function(){return i.identity(this._array),this._dirty=!0,this},invert:function(){return i.invert(this._array,this._array),this._dirty=!0,this},len:function(){return i.len(this._array)},length:function(){return i.length(this._array)},lerp:function(t,e,r){return i.lerp(this._array,t._array,e._array,r),this._dirty=!0,this},mul:function(t){return i.mul(this._array,this._array,t._array),this._dirty=!0,this},mulLeft:function(t){return i.multiply(this._array,t._array,this._array),this._dirty=!0,this},multiply:function(t){return i.multiply(this._array,this._array,t._array),this._dirty=!0,this},multiplyLeft:function(t){return i.multiply(this._array,t._array,this._array),this._dirty=!0,this},normalize:function(){return i.normalize(this._array,this._array),this._dirty=!0,this},rotateX:function(t){return i.rotateX(this._array,this._array,t),this._dirty=!0,this},rotateY:function(t){return i.rotateY(this._array,this._array,t),this._dirty=!0,this},rotateZ:function(t){return i.rotateZ(this._array,this._array,t),this._dirty=!0,this},rotationTo:function(t,e){return i.rotationTo(this._array,t._array,e._array),this._dirty=!0,this},setAxes:function(t,e,r){return i.setAxes(this._array,t._array,e._array,r._array),this._dirty=!0,this},setAxisAngle:function(t,e){return i.setAxisAngle(this._array,t._array,e),this._dirty=!0,this},slerp:function(t,e,r){return i.slerp(this._array,t._array,e._array,r),this._dirty=!0,this},sqrLen:function(){return i.sqrLen(this._array)},squaredLength:function(){return i.squaredLength(this._array)},fromEuler:function(t,e){return a.fromEuler(this,t,e)},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var o=Object.defineProperty;if(o){var s=a.prototype;o(s,"x",{get:function(){return this._array[0]},set:function(t){this._array[0]=t,this._dirty=!0}}),o(s,"y",{get:function(){return this._array[1]},set:function(t){this._array[1]=t,this._dirty=!0}}),o(s,"z",{get:function(){return this._array[2]},set:function(t){this._array[2]=t,this._dirty=!0}}),o(s,"w",{get:function(){return this._array[3]},set:function(t){this._array[3]=t,this._dirty=!0}})}a.add=function(t,e,r){return i.add(t._array,e._array,r._array),t._dirty=!0,t},a.set=function(t,e,r,n,a){i.set(t._array,e,r,n,a),t._dirty=!0},a.copy=function(t,e){return i.copy(t._array,e._array),t._dirty=!0,t},a.calculateW=function(t,e){return i.calculateW(t._array,e._array),t._dirty=!0,t},a.conjugate=function(t,e){return i.conjugate(t._array,e._array),t._dirty=!0,t},a.identity=function(t){return i.identity(t._array),t._dirty=!0,t},a.invert=function(t,e){return i.invert(t._array,e._array),t._dirty=!0,t},a.dot=function(t,e){return i.dot(t._array,e._array)},a.len=function(t){return i.length(t._array)},a.lerp=function(t,e,r,n){return i.lerp(t._array,e._array,r._array,n),t._dirty=!0,t},a.slerp=function(t,e,r,n){return i.slerp(t._array,e._array,r._array,n),t._dirty=!0,t},a.mul=function(t,e,r){return i.multiply(t._array,e._array,r._array),t._dirty=!0,t},a.multiply=a.mul,a.rotateX=function(t,e,r){return i.rotateX(t._array,e._array,r),t._dirty=!0,t},a.rotateY=function(t,e,r){return i.rotateY(t._array,e._array,r),t._dirty=!0,t},a.rotateZ=function(t,e,r){return i.rotateZ(t._array,e._array,r),t._dirty=!0,t},a.setAxisAngle=function(t,e,r){return i.setAxisAngle(t._array,e._array,r),t._dirty=!0,t},a.normalize=function(t,e){return i.normalize(t._array,e._array),t._dirty=!0,t},a.sqrLen=function(t){return i.sqrLen(t._array)},a.squaredLength=a.sqrLen,a.fromMat3=function(t,e){return i.fromMat3(t._array,e._array),t._dirty=!0,t},a.setAxes=function(t,e,r,n){return i.setAxes(t._array,e._array,r._array,n._array),t._dirty=!0,t},a.rotationTo=function(t,e,r){return i.rotationTo(t._array,e._array,r._array),t._dirty=!0,t},a.fromEuler=function(t,e,r){t._dirty=!0,e=e._array;var n=t._array,i=Math.cos(e[0]/2),a=Math.cos(e[1]/2),o=Math.cos(e[2]/2),s=Math.sin(e[0]/2),u=Math.sin(e[1]/2),c=Math.sin(e[2]/2),r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":n[0]=s*a*o+i*u*c,n[1]=i*u*o-s*a*c,n[2]=i*a*c+s*u*o,n[3]=i*a*o-s*u*c;break;case"YXZ":n[0]=s*a*o+i*u*c,n[1]=i*u*o-s*a*c,n[2]=i*a*c-s*u*o,n[3]=i*a*o+s*u*c;break;case"ZXY":n[0]=s*a*o-i*u*c,n[1]=i*u*o+s*a*c,n[2]=i*a*c+s*u*o,n[3]=i*a*o-s*u*c;break;case"ZYX":n[0]=s*a*o-i*u*c,n[1]=i*u*o+s*a*c,n[2]=i*a*c-s*u*o,n[3]=i*a*o+s*u*c;break;case"YZX":n[0]=s*a*o+i*u*c,n[1]=i*u*o+s*a*c,n[2]=i*a*c-s*u*o,n[3]=i*a*o-s*u*c;break;case"XZY":n[0]=s*a*o-i*u*c,n[1]=i*u*o-s*a*c,n[2]=i*a*c+s*u*o,n[3]=i*a*o+s*u*c}},t.exports=a},function(t,e,r){"use strict";var n=r(3),i=r(2),a=i.vec3,o=1e-5,s=function(t,e){this.origin=t||new n,this.direction=e||new n};s.prototype={constructor:s,intersectPlane:function(t,e){var r=t.normal._array,i=t.distance,o=this.origin._array,s=this.direction._array,u=a.dot(r,s);if(0===u)return null;e||(e=new n);var c=(a.dot(r,o)-i)/u;return a.scaleAndAdd(e._array,o,s,-c),e._dirty=!0,e},mirrorAgainstPlane:function(t){var e=a.dot(t.normal._array,this.direction._array);a.scaleAndAdd(this.direction._array,this.direction._array,t.normal._array,2*-e),this.direction._dirty=!0},distanceToPoint:function(){var t=a.create();return function(e){a.sub(t,e,this.origin._array);var r=a.dot(t,this.direction._array);if(r<0)return a.distance(this.origin._array,e);var n=a.lenSquared(t);return Math.sqrt(n-r*r)}}(),intersectSphere:function(){var t=a.create();return function(e,r,i){var o=this.origin._array,s=this.direction._array;e=e._array,a.sub(t,e,o);var u=a.dot(t,s),c=a.squaredLength(t),l=c-u*u,h=r*r;if(!(l>h)){var f=Math.sqrt(h-l),d=u-f,_=u+f;return i||(i=new n),d<0?_<0?null:(a.scaleAndAdd(i._array,o,s,_),i):(a.scaleAndAdd(i._array,o,s,d),i)}}}(),intersectBoundingBox:function(t,e){var r,i,o,s,u,c,l=this.direction._array,h=this.origin._array,f=t.min._array,d=t.max._array,_=1/l[0],p=1/l[1],m=1/l[2];if(_>=0?(r=(f[0]-h[0])*_,i=(d[0]-h[0])*_):(i=(f[0]-h[0])*_,r=(d[0]-h[0])*_),p>=0?(o=(f[1]-h[1])*p,s=(d[1]-h[1])*p):(s=(f[1]-h[1])*p,o=(d[1]-h[1])*p),r>s||o>i)return null;if((o>r||r!==r)&&(r=o),(s<i||i!==i)&&(i=s),m>=0?(u=(f[2]-h[2])*m,c=(d[2]-h[2])*m):(c=(f[2]-h[2])*m,u=(d[2]-h[2])*m),r>c||u>i)return null;if((u>r||r!==r)&&(r=u),(c<i||i!==i)&&(i=c),i<0)return null;var v=r>=0?r:i;return e||(e=new n),a.scaleAndAdd(e._array,h,l,v),e},intersectTriangle:function(){var t=a.create(),e=a.create(),r=a.create(),i=a.create();return function(s,u,c,l,h,f){var d=this.direction._array,_=this.origin._array;s=s._array,u=u._array,c=c._array,a.sub(t,u,s),a.sub(e,c,s),a.cross(i,e,d);var p=a.dot(t,i);if(l){if(p>-o)return null}else if(p>-o&&p<o)return null;a.sub(r,_,s);var m=a.dot(i,r)/p;if(m<0||m>1)return null;a.cross(i,t,r);var v=a.dot(d,i)/p;if(v<0||v>1||m+v>1)return null;a.cross(i,t,e);var g=-a.dot(r,i)/p;return g<0?null:(h||(h=new n),f&&n.set(f,1-m-v,m,v),a.scaleAndAdd(h._array,_,d,g),h)}}(),applyTransform:function(t){n.add(this.direction,this.direction,this.origin),n.transformMat4(this.origin,this.origin,t),n.transformMat4(this.direction,this.direction,t),n.sub(this.direction,this.direction,this.origin),n.normalize(this.direction,this.direction)},copy:function(t){n.copy(this.origin,t.origin),n.copy(this.direction,t.direction)},clone:function(){var t=new s;return t.copy(this),t}},t.exports=s},function(t,e,r){var n=r(5),i=r(3),a=r(42),o=r(12),s=["px","nx","py","ny","pz","nz"],u=n.extend(function(){var t={position:new i,far:1e3,near:.1,texture:null,shadowMapPass:null},e=t._cameras={px:new a({fov:90}),nx:new a({fov:90}),py:new a({fov:90}),ny:new a({fov:90}),pz:new a({fov:90}),nz:new a({fov:90})};return e.px.lookAt(i.POSITIVE_X,i.NEGATIVE_Y),e.nx.lookAt(i.NEGATIVE_X,i.NEGATIVE_Y),e.py.lookAt(i.POSITIVE_Y,i.POSITIVE_Z),e.ny.lookAt(i.NEGATIVE_Y,i.NEGATIVE_Z),e.pz.lookAt(i.POSITIVE_Z,i.NEGATIVE_Y),e.nz.lookAt(i.NEGATIVE_Z,i.NEGATIVE_Y),t._frameBuffer=new o,t},{getCamera:function(t){return this._cameras[t]},render:function(t,e,r){var n=t.gl;r||e.update();for(var a=this.texture.width,o=2*Math.atan(a/(a-.5))/Math.PI*180,u=0;u<6;u++){var c=s[u],l=this._cameras[c];if(i.copy(l.position,this.position),l.far=this.far,l.near=this.near,l.fov=o,this.shadowMapPass){l.update();var h=e.getBoundingBox(function(t){return!t.invisible});h.applyTransform(l.viewMatrix),e.viewBoundingBoxLastFrame.copy(h),this.shadowMapPass.render(t,e,l,!0)}this._frameBuffer.attach(this.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+u),this._frameBuffer.bind(t),t.render(e,l,!0),this._frameBuffer.unbind(t)}},dispose:function(t){this._frameBuffer.dispose(t)}});t.exports=u},function(t,e,r){"use strict";var n=r(9),i=r(20),a=r(65),o=r(47),s=r(74),u=r(26),c=r(183),l=r(184),h={loadTexture:function(t,e,r,a){var o;if("function"==typeof e?(r=e,a=r,e={}):e=e||{},"string"==typeof t){if(t.match(/.hdr$/))return o=new n({width:0,height:0}),h._fetchTexture(t,function(t){l.parseRGBE(t,o,e.exposure),o.dirty(),r&&r(o)},a),o;t.match(/.dds$/)?(o=new n({width:0,height:0}),h._fetchTexture(t,function(t){c.parse(t,o),o.dirty(),r&&r(o)},a)):(o=new n,o.load(t),o.success(r),o.error(a))}else if("object"==typeof t&&"undefined"!=typeof t.px){var o=new i;o.load(t),o.success(r),o.error(a)}return o},loadPanorama:function(t,e,r,n,i,a){var o=this;"function"==typeof n?(i=n,a=i,n={}):n=n||{},h.loadTexture(e,n,function(e){e.flipY=n.flipY||!1,o.panoramaToCubeMap(t,e,r,n),e.dispose(t.gl),i&&i(r)},a)},panoramaToCubeMap:function(t,e,r,n){var i=new o,a=new s({scene:new u});return a.material.set("diffuseMap",e),n=n||{},n.encodeRGBM&&a.material.shader.define("fragment","RGBM_ENCODE"),i.texture=r,i.render(t,a.scene),i.texture=null,i.dispose(t),r},_fetchTexture:function(t,e,r){a.get({url:t,responseType:"arraybuffer",onload:e,onerror:r})},createChessboard:function(t,e,r,i){t=t||512,e=e||64,r=r||"black",i=i||"white";var a=Math.ceil(t/e),o=document.createElement("canvas");o.width=t,o.height=t;var s=o.getContext("2d");s.fillStyle=i,s.fillRect(0,0,t,t),s.fillStyle=r;for(var u=0;u<a;u++)for(var c=0;c<a;c++){var l=c%2?u%2:u%2-1;l&&s.fillRect(u*e,c*e,e,e)}var h=new n({image:o,anisotropic:8});return h},createBlank:function(t){var e=document.createElement("canvas");e.width=1,e.height=1;var r=e.getContext("2d");r.fillStyle=t,r.fillRect(0,0,1,1);var i=new n({image:e});return i}};t.exports=h},function(t,e,r){function n(t){var e=new a.Geometry({dynamic:!0,sortVertices:!t});i.util.extend(e,s),e.createAttribute("color","float",4,"COLOR"),e.createAttribute("strokeColor","float",4),e.createAttribute("size","float",1);var r=new a.Material({shader:a.createShader("ecgl.sdfSprite"),transparent:!0,depthMask:!1});r.shader.enableTexture("sprite"),this._sdfTexture=new a.Texture2D({image:document.createElement("canvas"),flipY:!1}),r.set("sprite",this._sdfTexture),this._mesh=new a.Mesh({geometry:e,material:r,mode:a.Mesh.POINTS,renderOrder:10}),this.rootNode=new a.Node,this.rootNode.add(this._mesh),this.is2D=t}var i=r(1),a=r(4),o=r(57),s=r(140);a.Shader.import(r(78)),n.prototype={constructor:n,update:function(t,e,r){for(var n=t.getData(),i=!1,s=!1,u=0;u<n.count();u++)i||null==n.getItemVisual(u,"color",!0)||(i=!0),i||null==n.getItemVisual(u,"opacity",!0)||(s=!0);var c=i||s;this._mesh.material.shader[c?"define":"unDefine"]("both","VERTEX_COLOR");var l=this._getSymbolInfo(n),h=r.getDevicePixelRatio(),f=[];l.aspect>1?(f[0]=l.maxSize,f[1]=l.maxSize/l.aspect):(f[1]=l.maxSize,f[0]=l.maxSize*l.aspect);var d=t.getModel("itemStyle").getItemStyle();d.fill=n.getVisual("color");var _=o.createSymbolSDF(l.type,f,20,d,this._sdfTexture.image),p=this._mesh.geometry,m=n.getLayout("points"),v=p.attributes;v.position.init(n.count()),v.size.init(n.count()),c&&v.color.init(n.count());for(var g=v.position.value,y=v.color.value,x=[],T=this.is2D,b=_.width/l.maxSize,E=!1,u=0;u<n.count();u++){var w=4*u,S=3*u,A=2*u;if(T?(g[S]=m[A],g[S+1]=m[A+1],g[S+2]=-10):(g[S]=m[S],g[S+1]=m[S+1],g[S+2]=m[S+2]),c)if(!i&&s)y[w++]=y[w++]=y[w++]=1,y[w]=n.getItemVisual(u,"opacity"),y[w]<.99&&(E=!0);else{var M=n.getItemVisual(u,"color"),C=n.getItemVisual(u,"opacity");a.parseColor(M,x),x[3]*=C,v.color.set(u,x),x[3]<.99&&(E=!0)}var f=n.getItemVisual(u,"symbolSize");f=f instanceof Array?Math.max(f[0],f[1]):f,v.size.value[u]=f*h*b}p.dirty();var L="lighter"===t.get("blendMode")?a.additiveBlend:null,R=this._mesh.material;R.blend=L,R.set("lineWidth",d.lineWidth/_.width*_.width*h);var N=c?[1,1,1,1]:a.parseColor(d.fill),D=a.parseColor(d.stroke);R.set("color",N),R.set("strokeColor",D),E||d.lineWidth&&D[3]<.99||N[3]<.99?(R.transparent=!0,R.depthMask=!1,p.sortVertices=!T):(R.transparent=!1,R.depthMask=!0,p.sortVertices=!1);
},updateLayout:function(t,e,r){var n=t.getData(),i=this._mesh.geometry.attributes.position.value,a=n.getLayout("points");if(this.is2D)for(var o=0;o<a.length/2;o++){var s=3*o,u=2*o;i[s]=a[u],i[s+1]=a[u+1]}else for(var o=0;o<a.length;o++)i[o]=a[o];this._mesh.geometry.dirty()},_getSymbolInfo:function(t){var e=1,r=t.getItemVisual(0,"symbol")||"circle",n=0;return t.each(function(i){var a,o=t.getItemVisual(i,"symbolSize"),s=t.getItemVisual(i,"symbol");o instanceof Array?(a=o[0]/o[1],n=Math.max(Math.max(o[0],o[1]),n)):(a=1,n=Math.max(o,n)),r=s,e=a}),{maxSize:n,type:r,aspect:e}}},t.exports=n},function(t,e,r){function n(t){this.rootNode=new a.Node,this._currentMap="",this._triangulationResults={},this._triangulator=new o,this._boxWidth,this._boxHeight,this._boxDepth,this._shadersMap=a.COMMON_SHADERS.reduce(function(t,e){return t[e]=a.createShader("ecgl."+e),t[e].define("fragment","DOUBLE_SIDE"),t},{}),this._linesShader=a.createShader("ecgl.meshLines3D");var e={};a.COMMON_SHADERS.forEach(function(t){e[t]=new a.Material({shader:a.createShader("ecgl."+t)})}),this._groundMaterials=e,this._groundMesh=new a.Mesh({geometry:new a.PlaneGeometry,castShadow:!1,ignorePicking:!0}),this._groundMesh.rotation.rotateX(-Math.PI/2),this._groundMesh.scale.set(1e3,1e3,1),this._labelsBuilder=new h(1024,1024,t),this._api=t}var i=r(1),a=r(4),o=r(135),s=r(38),u=r(11),c=r(2),l=r(39),h=r(51),f=c.vec3;a.Shader.import(r(37)),n.prototype={constructor:n,update:function(t,e,r){var n=t.coordinateSystem;n.map!==this._currentMap&&(this._triangulation(n),this._currentMap=n.map,this._initMeshes(t),this.rootNode.add(this._labelsBuilder.getMesh()));var i=t.getModel("realisticMaterial"),o=u.firstNotNull(i.get("roughness"),.5),s=i.get("metalness")||0,c=this._getShader(t.get("shading")),l=n.viewGL.isLinearSpace()?"define":"unDefine";c[l]("fragment","SRGB_DECODE");var h=t.getData();n.regions.forEach(function(e){var i=h.indexOfName(e.name),l=this._polygonMeshes[e.name],f=this._linesMeshes[e.name];l.material.shader!==c&&l.material.attachShader(c,!0);var d=t.getRegionModel(e.name),_=d.getModel("itemStyle"),p=_.get("areaColor"),m=u.firstNotNull(_.get("opacity"),1),v=h.getItemVisual(i,"color",!0);null!=v&&(p=v),h.setItemVisual(i,"color",p),h.setItemVisual(i,"opacity",m),p=a.parseColor(p);var g=a.parseColor(_.get("borderColor"));p[3]*=m,g[3]*=m,l.material.set({roughness:o,metalness:s,color:p});var y=p[3]<.99;l.material.transparent=y,l.material.depthMask=!y;var x=_.get("borderWidth"),T=x>0,b=u.firstNotNull(d.get("height",!0),n.size[1]);this._updatePolygonGeometry(l.geometry,e,b),T&&(x*=r.getDevicePixelRatio(),this._updateLinesGeometry(f.geometry,e,b,x,n.transform)),f.invisible=!T,f.material.set({color:g}),this._moveRegionToCenter(l,f,T),l.dataIndex=i,l.on("mouseover",this._onmouseover,this),l.on("mouseout",this._onmouseout,this)},this),this._updateGroundPlane(t),this._groundMesh.material.shader[l]("fragment","SRGB_DECODE"),this._labelsBuilder.updateData(h),this._labelsBuilder.getLabelPosition=function(t,e,r){var i=h.getItemModel(t),a=h.getName(t),o=n.getRegion(a),s=o.center,u=i.get("height")+r;return n.dataToPoint([s[0],s[1],u])},this._data=h,this._labelsBuilder.updateLabels()},_onmouseover:function(t){t.target&&null!=t.target.dataIndex&&(this.highlight(t.target.dataIndex),this._labelsBuilder.updateLabels([t.target.dataIndex]))},_onmouseout:function(t){t.target&&null!=t.target.dataIndex&&(this.downplay(t.target.dataIndex),t.relatedTarget||this._labelsBuilder.updateLabels())},highlight:function(t){var e=this._data;if(e){var r=e.getItemModel(t),n=r.getModel("emphasis.itemStyle"),o=n.get("areaColor"),s=n.get("opacity");if(null==o){var u=e.getItemVisual(t,"color");o=i.color.lift(u,-.4)}null==s&&(s=e.getItemVisual(t,"opacity"));var c=a.parseColor(o);c[3]*=s;var l=this._polygonMeshes[e.getName(t)];if(l){var h=l.material;h.set("color",c)}this._api.getZr().refresh()}},downplay:function(t){var e=this._data;if(e){var r=e.getItemVisual(t,"color"),n=e.getItemVisual(t,"opacity"),i=a.parseColor(r);i[3]*=n;var o=this._polygonMeshes[e.getName(t)];if(o){var s=o.material;s.set("color",i)}this._api.getZr().refresh()}},_updateGroundPlane:function(t){var e=t.getModel("groundPlane"),r=t.get("shading"),n=this._groundMaterials[r];n||(n=this._groundMaterials.lambert),this._groundMesh.material=n,this._groundMesh.material.set("color",a.parseColor(e.get("color"))),this._groundMesh.invisible=!e.get("show")},_initMeshes:function(t){this.rootNode.removeAll();var e=t.coordinateSystem,r={},n={},o=this._getShader(t.get("shading"));e.regions.forEach(function(t){r[t.name]=new a.Mesh({material:new a.Material({shader:o}),culling:!1,geometry:new a.Geometry({sortTriangles:!0})}),i.util.extend(r[t.name].geometry,l),n[t.name]=new a.Mesh({material:new a.Material({shader:this._linesShader}),castShadow:!1,ignorePicking:!0,geometry:new s({useNativeLine:!1})}),this.rootNode.add(r[t.name]),this.rootNode.add(n[t.name])},this),this._polygonMeshes=r,this._linesMeshes=n,this.rootNode.add(this._groundMesh)},_getShader:function(t){var e=this._shadersMap[t];return e||(e=this._shadersMap.lambert),e},_triangulation:function(t){this._triangulationResults={};var e=this._triangulator;t.regions.forEach(function(r){for(var n=[],i=0;i<r.geometries.length;i++){var a=r.geometries[i].exterior,o=r.geometries[i].interiors,s=[],u=[];if(!(a.length<3)){for(var c=0,l=0;l<a.length;l++){var h=a[l];s[c++]=h[0],s[c++]=h[1]}for(var l=0;l<o.length;l++)if(!(o[l].length.length<3)){for(var d=[],_=0;_<o[l].length;_++){var h=o[l][_];d.push(h[0]),d.push(h[1])}u.push(d)}e.triangulate(s,u),s=e.points;for(var p=new Float32Array(s.length/2*3),m=[],v=[1/0,1/0,1/0],g=[-(1/0),-(1/0),-(1/0)],y=0,l=0;l<s.length;)m[0]=s[l++],m[1]=0,m[2]=s[l++],f.transformMat4(m,m,t.transform),f.min(v,v,m),f.max(g,g,m),p[y++]=m[0],p[y++]=m[1],p[y++]=m[2];n.push({points:p,min:v,max:g,indices:e.triangles})}}this._triangulationResults[r.name]=n},this)},_updatePolygonGeometry:function(t,e,r){function n(t,e,r){for(var n=[],i=[],a=[],s=[],u=[],c=t.points,l=c.length,h=[c[l-3],e,c[l-1]],d=[c[0],e,c[2]],_=3;_<=l;_+=3)n[0]=c[_%l],n[1]=e,n[2]=c[(_+2)%l],f.sub(s,h,d),f.sub(u,n,d),f.add(a,s,u),f.normalize(a,a),f.scaleAndAdd(i,d,a,r),o.set(p++,i),f.copy(h,d),f.copy(d,n)}function i(t,e,r){var i=p;n(t,e,r);for(var o=0;o<t.indices.length;o++)a[3*m+o]=t.indices[o]+i;m+=t.indices.length/3}for(var a=this.indices,o=t.attributes.position,s=t.attributes.normal,u=this._triangulationResults[e.name],c=0,l=0,h=0;h<u.length;h++)c+=u[h].points.length/3,l+=u[h].indices.length/3;var d=2*c+4*c,_=2*l+2*c;o.init(d),s.init(d),a=t.indices=d>65535?new Uint32Array(3*_):new Uint16Array(3*_);for(var p=0,m=0,v=[0,1,0],g=[0,-1,0],y=0;y<u.length;y++){var x=p,T=u[y];i(T,0,0),i(T,r,0);for(var b=T.points.length/3,E=0;E<b;E++)s.set(x+E,g),s.set(x+E+b,v);for(var w=[0,3,1,1,3,2],S=[[],[],[],[]],A=[],M=[],C=[],E=0;E<b;E++){for(var L=(E+1)%b,R=0;R<4;R++){var N=3*(0===R||3===R?E:L);S[R][0]=T.points[N],S[R][1]=R>1?r:0,S[R][2]=T.points[N+2],o.set(p+R,S[R])}f.sub(A,S[1],S[0]),f.sub(M,S[3],S[0]),f.cross(C,A,M),f.normalize(C,C);for(var R=0;R<4;R++)s.set(p+R,C);for(var R=0;R<6;R++)a[3*m+R]=w[R]+p;p+=4,m+=2}}t.updateBoundingBox()},_updateLinesGeometry:function(t,e,r,n,i){function a(t){for(var e=new Float32Array(3*t.length),n=0,a=[],o=0;o<t.length;o++)a[0]=t[o][0],a[1]=r+.1,a[2]=t[o][1],f.transformMat4(a,a,i),e[n++]=a[0],e[n++]=a[1],e[n++]=a[2];return e}var o=0,s=0;e.geometries.forEach(function(e){var r=e.exterior,n=e.interiors;o+=t.getPolylineVertexCount(r),s+=t.getPolylineTriangleCount(r);for(var i=0;i<n.length;i++)o+=t.getPolylineVertexCount(n[i]),s+=t.getPolylineTriangleCount(n[i])},this),t.resetOffset(),t.setVertexCount(o),t.setTriangleCount(o);var u=[1,1,1,1];e.geometries.forEach(function(e){var r=e.exterior,i=e.interiors;t.addPolyline(a(r),u,n);for(var o=0;o<i.length;o++)t.addPolyline(a(i[o]),u,n)}),t.updateBoundingBox()},_moveRegionToCenter:function(t,e,r){var n=t.geometry,i=e.geometry,a=t.geometry.boundingBox,o=a.min.clone().add(a.max).scale(.5),s=o._array;a.min.sub(o),a.max.sub(o);for(var u=n.attributes.position.value,c=0;c<u.length;)u[c++]-=s[0],u[c++]-=s[1],u[c++]-=s[2];if(t.position.copy(o),r){i.boundingBox.min.sub(o),i.boundingBox.max.sub(o);for(var l=i.attributes.position.value,c=0;c<l.length;)l[c++]-=s[0],l[c++]-=s[1],l[c++]-=s[2];e.position.copy(o)}}},t.exports=n},function(t,e,r){function n(t,e,r){this._labelsMesh=new o,this._labelTextureSurface=new a(1024,1024,r.getDevicePixelRatio(),function(){r.getZr().refresh()}),this._api=r,this._labelsMesh.material.set("textureAtlas",this._labelTextureSurface.getTexture())}var i=r(1),a=r(55),o=r(56),s=1,u=2;n.prototype.getLabelPosition=function(t,e,r){return[0,0,0]},n.prototype.getMesh=function(){return this._labelsMesh},n.prototype.updateData=function(t){this._labelsVisibilitiesBits&&this._labelsVisibilitiesBits.length===t.count()||(this._labelsVisibilitiesBits=new Uint8Array(t.count()));var e=["label","show"],r=["emphasis","label","show"];t.each(function(n){var i=t.getItemModel(n),a=i.get(e),o=i.get(r);null==o&&(o=a);var c=(a?s:0)|(o?u:0);this._labelsVisibilitiesBits[n]=c},!1,this),this._data=t},n.prototype.updateLabels=function(t){if(this._data){t=t||[];for(var e=t.length>0,r={},n=0;n<t.length;n++)r[t[n]]=!0;this._labelsMesh.geometry.convertToDynamicArray(!0),this._labelTextureSurface.clear();var a=["label"],o=["emphasis","label"],c=this._data.hostModel,l=this._data,h=c.getModel(a),f=c.getModel(o,h);l.each(function(t){var n=!1;e&&r[t]&&(n=!0);var d=this._labelsVisibilitiesBits[t]&(n?u:s);if(d){var _=l.getItemModel(t),p=_.getModel(n?o:a,n?f:h),m=p.get("distance"),v=p.get("position"),g=p.getModel("textStyle"),y=this._api.getDevicePixelRatio(),x=c.getFormattedLabel(t,n?"emphasis":"normal"),T=new i.graphic.Text({style:{text:x,font:g.getFont(),fill:g.get("color")||l.getItemVisual(t,"color")||"#000",stroke:g.get("borderColor"),lineWidth:g.get("borderWidth")/y,textAlign:"left",textVerticalAlign:"top"}}),b=T.getBoundingRect(),E=this._labelTextureSurface.add(T);this._labelsMesh.geometry.addSprite(this.getLabelPosition(t,v,m),[b.width*y,b.height*y],E,"center","bottom")}},!1,this),this._labelsMesh.geometry.convertToTypedArray(),this._labelsMesh.geometry.dirty()}},t.exports=n},function(t,e,r){var n=r(1);t.exports={getFilledRegions:function(t,e){var r=(t||[]).slice(),e=n.getMap(e),i=e&&e.geoJson;if(!i)return[];for(var a={},o=i.features,s=0;s<r.length;s++)a[r[s].name]=r[s];for(var s=0;s<o.length;s++){var u=o[s].properties.name;a[u]||r.push({name:u})}return r},defaultOption:{show:!0,zlevel:-10,map:"",left:0,top:0,width:"100%",height:"100%",boxWidth:100,boxHeight:3,boxDepth:"auto",groundPlane:{show:!1,color:"#aaa"},shading:"lambert",realisticMaterial:{roughness:.5,metalness:0},light:{main:{alpha:40,beta:30}},viewControl:{alpha:40,beta:0,distance:100},label:{show:!1,distance:2,textStyle:{fontSize:20,color:"#000",borderWidth:4,borderColor:"#fff"}},itemStyle:{areaColor:"#fff",borderWidth:0,borderColor:"#333"},emphasis:{itemStyle:{areaColor:"#639fc0"},label:{show:!0}}}}},function(t,e,r){function n(t,e){var r=t.getBoxLayoutParams(),n=o.getLayoutRect(r,{width:e.getWidth(),height:e.getHeight()});n.y=e.getHeight()-n.y-n.height,this.viewGL.setViewport(n.x,n.y,n.width,n.height,e.getDevicePixelRatio());var i=this.getGeoBoundingRect(),a=i.width/i.height*.75,s=t.get("boxWidth"),u=t.get("boxDepth"),c=t.get("boxHeight");null==c&&(c=5),isNaN(s)&&isNaN(u)&&(s=100),isNaN(u)?u=s/a:isNaN(s)&&(s=u/a),this.setSize(s,c,u)}var i=r(122),a=r(1),o=r(40),s=r(33),u=r(11),c={dimensions:i.prototype.dimensions,create:function(t,e){function r(t,r){var u=t.get("map"),c=a.getMap(u);t.__viewGL=t.__viewGL||new s;var l=new i(u+r,u,c&&c.geoJson,c&&c.specialAreas,t.get("nameMap"));l.viewGL=t.__viewGL,t.coordinateSystem=l,o.push(l),l.resize=n,l.resize(t,e)}var o=[];if(!a.getMap)throw new Error("geo3D component depends on geo component");t.eachComponent("geo3D",function(t,e){r(t,e)}),t.eachSeriesByType("map3D",function(t,e){r(t,e)}),t.eachSeries(function(e){if("geo3D"===e.get("coordinateSystem")){var r=e.getReferringComponents("geo3D")[0];if(r||(r=t.getComponent("geo3D")),!r)throw new Error('geo "'+u.firstNotNull(e.get("geo3DIndex"),e.get("geo3DId"),0)+'" not found');e.coordinateSystem=r.coordinateSystem}})}};a.registerCoordinateSystem("geo3D",c),t.exports=c},function(t,e){function r(t,e,r){var n=t[e];t[e]=t[r],t[r]=n}function n(t,e,n,i,a){var o=n,s=t[e];r(t,e,i);for(var u=n;u<i;u++)a(t[u],s)<0&&(r(t,u,o),o++);return r(t,i,o),o}function i(t,e,r,a){if(r<a){var o=Math.floor((r+a)/2),s=n(t,o,r,a,e);i(t,e,r,s-1),i(t,e,s+1,a)}}function a(){this._parts=[]}a.prototype.step=function(t,e,r){var a=t.length;if(0===r){this._parts=[],this._sorted=!1;var o=Math.floor(a/2);this._parts.push({pivot:o,left:0,right:a-1}),this._currentSortPartIdx=0}if(!this._sorted){var s=this._parts;if(0===s.length)return this._sorted=!0,!0;if(s.length<512){for(var u=0;u<s.length;u++)s[u].pivot=n(t,s[u].pivot,s[u].left,s[u].right,e);for(var c=[],u=0;u<s.length;u++){var l=s[u].left,h=s[u].pivot-1;h>l&&c.push({pivot:Math.floor((h+l)/2),left:l,right:h});var l=s[u].pivot+1,h=s[u].right;h>l&&c.push({pivot:Math.floor((h+l)/2),left:l,right:h})}s=this._parts=c}else for(var u=0;u<Math.floor(s.length/10);u++){var f=s.length-1-this._currentSortPartIdx;if(i(t,e,s[f].left,s[f].right),this._currentSortPartIdx++,this._currentSortPartIdx===s.length)return this._sorted=!0,!0}return!1}},a.sort=i,t.exports=a},function(t,e,r){var n=r(1),i=r(4),a=function(t,e,r,a){var o=document.createElement("canvas");o.width=t*r,o.height=e*r,this._dpr=r,this._zr=n.zrender.init(o),this._x=0,this._y=0,this._width=t,this._height=e,this._rowHeight=0,this._coords={},this.onupdate=a,this._texture=new i.Texture2D({image:o,flipY:!1});var s=this,u=this._zr.refreshImmediately;this._zr.refreshImmediately=function(){u.call(this),s._texture.dirty(),s.onupdate&&s.onupdate()}};a.prototype={clear:function(){this._x=0,this._y=0,this._rowHeight=0,this._zr.clear(),this._coords={}},getWidth:function(){return this._width},getHeight:function(){return this._height},getTexture:function(){return this._texture},getDevicePixelRatio:function(){return this._dpr},resize:function(t,e){this._zr.resize({width:t,height:e})},add:function(t,e,r){var n=t.getBoundingRect();null==e&&(e=n.width),null==r&&(r=n.height),e*=this._dpr,r*=this._dpr,this._fitElement(t,e,r);var i=this._x,a=this._y,o=this._width*this._dpr,s=this._height*this._dpr;if(i+e>o&&a+this._rowHeight>s)return null;i+e>o&&(i=this._x=0,a+=this._rowHeight,this._y=a,this._rowHeight=0),this._x+=e,this._rowHeight=Math.max(this._rowHeight,r),t.position[0]+=i,t.position[1]+=a,this._zr.add(t);var u=[[i/o,a/s],[(i+e)/o,(a+r)/s]];return this._coords[t.id]=u,u},refresh:function(){this._zr.refresh()},_fitElement:function(t,e,r){var n=t.getBoundingRect(),i=e/n.width,a=r/n.height;t.position=[-n.x*i,-n.y*a],t.scale=[i,a],t.update()},getImageCoords:function(t){return this._coords[t]}},t.exports=a},function(t,e,r){var n=r(4),i=r(139);n.Shader.import(r(84)),t.exports=n.Mesh.extend(function(){var t=new i({dynamic:!0}),e=new n.Material({shader:n.createShader("ecgl.labels3D"),transparent:!0,depthMask:!1});return{geometry:t,material:e,culling:!1,ignorePicking:!0}})},function(t,e,r){function n(t,e,r){var e=e||document.createElement("canvas");e.width=t,e.height=t;var n=e.getContext("2d");return r&&r(n),e}function i(t,e,r,n){o.util.isArray(e)||(e=[e,e]);var i=s.getMarginByStyle(r,n),a=e[0]+i.left+i.right,u=e[1]+i.top+i.bottom,c=o.helper.createSymbol(t,0,0,e[0],e[1]),l=Math.max(a,u);c.position=[i.left,i.top],a>u?c.position[1]+=(l-u)/2:c.position[0]+=(l-a)/2;var h=c.getBoundingRect();return c.position[0]-=h.x,c.position[1]-=h.y,c.setStyle(r),c.update(),c.__size=l,c}function a(t,e,r){function n(t){return t<128?1:-1}function i(t,i,s){for(var u=n(s),c=1/0,l=Math.max(i-r,0);l<Math.min(i+r,o);l++)for(var h=Math.max(t-r,0);h<Math.min(t+r,a);h++){var f=l*a+h,d=e.data[4*f],_=n(d),p=h-t,m=l-i;if(u!==_){var v=p*p+m*m;v<c&&(c=v)}}return u*c}for(var a=e.width,o=e.height,s=t.createImageData(a,o),u=0;u<o;u++)for(var c=0;c<a;c++){var l=4*(u*a+c),h=e.data[l],f=i(c,u,h),d=f/r/1.41*.5+.5;s.data[l++]=255*(1-d),s.data[l++]=255*(1-d),s.data[l++]=255*(1-d),s.data[l++]=255}return s}var o=r(1),s={getMarginByStyle:function(t,e){e=e||0;var r=0;t.stroke&&"none"!==t.stroke&&(r=null==t.lineWidth?1:t.lineWidth);var n=t.shadowBlur||0,i=t.shadowOffsetX||0,a=t.shadowOffsetY||0,o={};return o.left=Math.max(r/2,-i+n)+e,o.right=Math.max(r/2,i+n)+e,o.top=Math.max(r/2,-a+n)+e,o.bottom=Math.max(r/2,a+n)+e,o},createSymbolSprite:function(t,e,r,a){var o=i(t,e,r),u=s.getMarginByStyle(r);return{image:n(o.__size,a,function(t){o.brush(t)}),margin:u}},createSymbolSDF:function(t,e,r,o,s){var u=i(t,e,o,10);return u.setStyle({fill:"#fff",stroke:"transparent",shadowColor:"transparent"}),n(u.__size,s,function(t){u.brush(t);var e=t.getImageData(0,0,s.width,s.height);t.putImageData(a(t,e,r),0,0)})},createSimpleSprite:function(t,e){return n(t,e,function(e){var r=t/2;e.beginPath(),e.arc(r,r,60,0,2*Math.PI,!1),e.closePath();var n=e.createRadialGradient(r,r,0,r,r,r);n.addColorStop(0,"rgba(255, 255, 255, 1)"),n.addColorStop(.5,"rgba(255, 255, 255, 0.5)"),n.addColorStop(1,"rgba(255, 255, 255, 0)"),e.fillStyle=n,e.fill()})}};t.exports=s},function(t,e){function r(t){return t.replace(/^\s+/,"").replace(/\s+$/,"")}var n={},i=1e-4;n.linearMap=function(t,e,r,n){var i=e[1]-e[0],a=r[1]-r[0];if(0===i)return 0===a?r[0]:(r[0]+r[1])/2;if(n)if(i>0){if(t<=e[0])return r[0];if(t>=e[1])return r[1]}else{if(t>=e[0])return r[0];if(t<=e[1])return r[1]}else{if(t===e[0])return r[0];if(t===e[1])return r[1]}return(t-e[0])/i*a+r[0]},n.parsePercent=function(t,e){switch(t){case"center":case"middle":t="50%";break;case"left":case"top":t="0%";break;case"right":case"bottom":t="100%"}return"string"==typeof t?r(t).match(/%$/)?parseFloat(t)/100*e:parseFloat(t):null==t?NaN:+t},n.round=function(t,e){return null==e&&(e=10),e=Math.min(Math.max(0,e),20),+(+t).toFixed(e)},n.asc=function(t){return t.sort(function(t,e){return t-e}),t},n.getPrecision=function(t){if(t=+t,isNaN(t))return 0;for(var e=1,r=0;Math.round(t*e)/e!==t;)e*=10,r++;return r},n.getPrecisionSafe=function(t){var e=t.toString(),r=e.indexOf(".");return r<0?0:e.length-1-r},n.getPixelPrecision=function(t,e){var r=Math.log,n=Math.LN10,i=Math.floor(r(t[1]-t[0])/n),a=Math.round(r(Math.abs(e[1]-e[0]))/n),o=Math.min(Math.max(-i+a,0),20);return isFinite(o)?o:20},n.MAX_SAFE_INTEGER=9007199254740991,n.remRadian=function(t){var e=2*Math.PI;return(t%e+e)%e},n.isRadianAroundZero=function(t){return t>-i&&t<i};var a=/^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d\d)(?::(\d\d)(?:[.,](\d+))?)?)?(?:Z|([\+\-]\d\d):?\d\d)?)?)?)?)?$/,o=(new Date).getTimezoneOffset();n.parseDate=function(t){if(t instanceof Date)return t;if("string"==typeof t){var e=a.exec(t);return e?new Date(+e[1],+(e[2]||1)-1,+e[3]||1,+e[4]||0,+(e[5]||0)-60*(e[8]||0)-o,+e[6]||0,+e[7]||0):new Date(NaN)}return null==t?new Date(NaN):new Date(Math.round(t))},n.quantity=function(t){return Math.pow(10,Math.floor(Math.log(t)/Math.LN10))},n.nice=function(t,e){var r,i=n.quantity(t),a=t/i;return r=e?a<1.5?1:a<2.5?2:a<4?3:a<7?5:10:a<1?1:a<2?2:a<3?3:a<5?5:10,r*i},n.reformIntervals=function(t){function e(t,r,n){return t.interval[n]<r.interval[n]||t.interval[n]===r.interval[n]&&(t.close[n]-r.close[n]===(n?-1:1)||!n&&e(t,r,1))}t.sort(function(t,r){return e(t,r,0)?-1:1});for(var r=-(1/0),n=1,i=0;i<t.length;){for(var a=t[i].interval,o=t[i].close,s=0;s<2;s++)a[s]<=r&&(a[s]=r,o[s]=s?1:1-n),r=a[s],n=o[s];a[0]===a[1]&&o[0]*o[1]!==1?t.splice(i,1):i++}return t},n.isNumeric=function(t){return t-parseFloat(t)>=0},t.exports=n},function(t,e){t.exports=function(t,e,r,n,i){n.eachRawSeriesByType(t,function(t){var i=t.getData(),a=t.get("symbol")||e,o=t.get("symbolSize");i.setVisual({legendSymbol:r||a,symbol:a,symbolSize:o}),n.isSeriesFiltered(t)||("function"==typeof o&&i.each(function(e){var r=t.getRawValue(e),n=t.getDataParams(e);i.setItemVisual(e,"symbolSize",o(r,n))}),i.each(function(t){var e=i.getItemModel(t),r=e.getShallow("symbol",!0),n=e.getShallow("symbolSize",!0);null!=r&&i.setItemVisual(t,"symbol",r),null!=n&&i.setItemVisual(t,"symbolSize",n)}))})}},function(t,e,r){"use strict";var n=r(25),i=r(14),a=r(44),o=r(46),s=r(2),u=s.vec3,c=s.vec4,l=n.extend(function(){return{projectionMatrix:new i,invProjectionMatrix:new i,viewMatrix:new i,frustum:new a}},function(){this.update(!0)},{update:function(t){n.prototype.update.call(this,t),i.invert(this.viewMatrix,this.worldTransform),this.updateProjectionMatrix(),i.invert(this.invProjectionMatrix,this.projectionMatrix),this.frustum.setFromProjection(this.projectionMatrix)},setViewMatrix:function(t){i.invert(this.worldTransform,t),this.decomposeWorldTransform()},decomposeProjectionMatrix:function(){},setProjectionMatrix:function(t){i.copy(this.projectionMatrix,t),i.invert(this.invProjectionMatrix,t),this.decomposeProjectionMatrix()},updateProjectionMatrix:function(){},castRay:function(){var t=c.create();return function(e,r){var n=void 0!==r?r:new o,i=e._array[0],a=e._array[1];return c.set(t,i,a,-1,1),c.transformMat4(t,t,this.invProjectionMatrix._array),c.transformMat4(t,t,this.worldTransform._array),u.scale(n.origin._array,t,1/t[3]),c.set(t,i,a,1,1),c.transformMat4(t,t,this.invProjectionMatrix._array),c.transformMat4(t,t,this.worldTransform._array),u.scale(t,t,1/t[3]),u.sub(n.direction._array,t,n.origin._array),u.normalize(n.direction._array,n.direction._array),n.direction._dirty=!0,n.origin._dirty=!0,n}}()});t.exports=l},function(t,e,r){"use strict";function n(t,e,r){this.availableAttributes=t,this.availableAttributeSymbols=e,this.indicesBuffer=r,this.vao=null}var i,a=r(25),o=r(6),s=r(16),u=0,c=null,l=!0,h=function(){this.triangleCount=0,this.vertexCount=0,this.drawCallCount=0},f=a.extend({material:null,geometry:null,mode:o.TRIANGLES,_drawCache:null,_renderInfo:null},function(){this._drawCache={},this._renderInfo=new h},{renderOrder:0,lineWidth:1,culling:!0,cullFace:o.BACK,frontFace:o.CCW,frustumCulling:!0,receiveShadow:!0,castShadow:!0,ignorePicking:!1,isRenderable:function(){return this.geometry&&this.material&&!this.invisible&&this.geometry.vertexCount>0},beforeRender:function(t){},afterRender:function(t,e){},getBoundingBox:function(t,e){return e=a.prototype.getBoundingBox.call(this,t,e),this.geometry&&this.geometry.boundingBox&&e.union(this.geometry.boundingBox),e},render:function(t,e){var e=e||this.material.shader,r=this.geometry,a=this.mode,h=r.vertexCount,f=r.isUseIndices(),d=s.getExtension(t,"OES_element_index_uint"),_=d&&h>65535,p=_?t.UNSIGNED_INT:t.UNSIGNED_SHORT,m=s.getExtension(t,"OES_vertex_array_object"),v=!r.dynamic,g=this._renderInfo;g.vertexCount=h,g.triangleCount=0,g.drawCallCount=0;var y=!1;if(i=t.__GLID__+"-"+r.__GUID__+"-"+e.__GUID__,i!==u?y=!0:(h>65535&&!d&&f||m&&v||r._cache.isDirty())&&(y=!0),u=i,y){var x=this._drawCache[i];if(!x){var T=r.getBufferChunks(t);if(!T)return;x=[];for(var b=0;b<T.length;b++){for(var E=T[b],w=E.attributeBuffers,S=E.indicesBuffer,A=[],M=[],C=0;C<w.length;C++){var L,R=w[C],N=R.name,D=R.semantic;if(D){var I=e.attribSemantics[D];L=I&&I.symbol}else L=N;L&&e.attributeTemplates[L]&&(A.push(R),M.push(L))}var O=new n(A,M,S);x.push(O)}v&&(this._drawCache[i]=x)}for(var P=0;P<x.length;P++){var O=x[P],F=!0;m&&v&&(null==O.vao?O.vao=m.createVertexArrayOES():F=!1,m.bindVertexArrayOES(O.vao));var A=O.availableAttributes,S=O.indicesBuffer;if(F)for(var B=e.enableAttributes(t,O.availableAttributeSymbols,m&&v&&O.vao),C=0;C<A.length;C++){var U=B[C];if(U!==-1){var k,R=A[C],z=R.buffer,G=R.size;switch(R.type){case"float":k=t.FLOAT;break;case"byte":k=t.BYTE;break;case"ubyte":k=t.UNSIGNED_BYTE;break;case"short":k=t.SHORT;break;case"ushort":k=t.UNSIGNED_SHORT;break;default:k=t.FLOAT}t.bindBuffer(t.ARRAY_BUFFER,z),t.vertexAttribPointer(U,G,k,!1,0,0)}}a!=o.LINES&&a!=o.LINE_STRIP&&a!=o.LINE_LOOP||t.lineWidth(this.lineWidth),c=S,l=r.isUseIndices(),l?(F&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,S.buffer),t.drawElements(a,S.count,p,0),g.triangleCount+=S.count/3):t.drawArrays(a,0,h),m&&v&&m.bindVertexArrayOES(null),g.drawCallCount++}}else l?(t.drawElements(a,c.count,p,0),g.triangleCount=c.count/3):t.drawArrays(a,0,h),g.drawCallCount=1;return g},clone:function(){var t=["castShadow","receiveShadow","mode","culling","cullFace","frontFace","frustumCulling"];return function(){var e=a.prototype.clone.call(this);e.geometry=this.geometry,e.material=this.material;for(var r=0;r<t.length;r++){var n=t[r];e[n]!==this[n]&&(e[n]=this[n])}return e}}()});f.beforeFrame=function(){u=0},f.POINTS=o.POINTS,f.LINES=o.LINES,f.LINE_LOOP=o.LINE_LOOP,f.LINE_STRIP=o.LINE_STRIP,f.TRIANGLES=o.TRIANGLES,f.TRIANGLE_STRIP=o.TRIANGLE_STRIP,f.TRIANGLE_FAN=o.TRIANGLE_FAN,f.BACK=o.BACK,f.FRONT=o.FRONT,f.FRONT_AND_BACK=o.FRONT_AND_BACK,f.CW=o.CW,f.CCW=o.CCW,f.RenderInfo=h,t.exports=f},function(t,e,r){"use strict";var n=r(5),i=r(16),a=r(6),o=(r(17),r(10)),s=r(14),u=r(75),c=r(19),l=r(28),h=r(7);h.import(r(178));var f=r(2),d=f.mat4,_=f.vec3,p=d.create,m=0,v={},g=n.extend(function(){return{canvas:null,_width:100,_height:100,devicePixelRatio:window.devicePixelRatio||1,clearColor:[0,0,0,0],clearBit:17664,alpha:!0,depth:!0,stencil:!1,antialias:!0,premultipliedAlpha:!0,preserveDrawingBuffer:!1,throwError:!0,gl:null,viewport:{},__currentFrameBuffer:null,_viewportStack:[],_clearStack:[],_sceneRendering:null}},function(){this.canvas||(this.canvas=document.createElement("canvas"));var t=this.canvas;try{var e={alpha:this.alpha,depth:this.depth,stencil:this.stencil,antialias:this.antialias,premultipliedAlpha:this.premultipliedAlpha,preserveDrawingBuffer:this.preserveDrawingBuffer};if(this.gl=t.getContext("webgl",e)||t.getContext("experimental-webgl",e),!this.gl)throw new Error;null==this.gl.__GLID__&&(this.gl.__GLID__=m++,i.initialize(this.gl)),this.resize()}catch(t){throw"Error creating WebGL Context "+t}},{resize:function(t,e){var r=this.canvas,n=this.devicePixelRatio;null!=t?(r.style.width=t+"px",r.style.height=e+"px",r.width=t*n,r.height=e*n,this._width=t,this._height=e):(this._width=r.width/n,this._height=r.height/n),this.setViewport(0,0,this._width,this._height)},getWidth:function(){return this._width},getHeight:function(){return this._height},getViewportAspect:function(){var t=this.viewport;return t.width/t.height},setDevicePixelRatio:function(t){this.devicePixelRatio=t,this.resize(this._width,this._height)},getDevicePixelRatio:function(){return this.devicePixelRatio},getExtension:function(t){return i.getExtension(this.gl,t)},setViewport:function(t,e,r,n,i){if("object"==typeof t){var a=t;t=a.x,e=a.y,r=a.width,n=a.height,i=a.devicePixelRatio}i=i||this.devicePixelRatio,this.gl.viewport(t*i,e*i,r*i,n*i),this.viewport={x:t,y:e,width:r,height:n,devicePixelRatio:i}},saveViewport:function(){this._viewportStack.push(this.viewport)},restoreViewport:function(){this._viewportStack.length>0&&this.setViewport(this._viewportStack.pop())},saveClear:function(){this._clearStack.push({clearBit:this.clearBit,clearColor:this.clearColor})},restoreClear:function(){if(this._clearStack.length>0){var t=this._clearStack.pop();this.clearColor=t.clearColor,this.clearBit=t.clearBit}},bindSceneRendering:function(t){this._sceneRendering=t},beforeRenderObject:function(){},afterRenderObject:function(){},render:function(t,e,r,n){var i=this.gl;this._sceneRendering=t;var a=this.clearColor;if(this.clearBit){i.colorMask(!0,!0,!0,!0),i.depthMask(!0);var o=this.viewport,s=!1,u=o.devicePixelRatio;(o.width!==this._width||o.height!==this._height||u&&u!==this.devicePixelRatio||o.x||o.y)&&(s=!0,i.enable(i.SCISSOR_TEST),i.scissor(o.x*u,o.y*u,o.width*u,o.height*u)),i.clearColor(a[0],a[1],a[2],a[3]),i.clear(this.clearBit),s&&i.disable(i.SCISSOR_TEST)}r||t.update(!1),e.getScene()||e.update(!0);var c=t.opaqueQueue,l=t.transparentQueue,h=t.material;if(t.trigger("beforerender",this,t,e),l.length>0)for(var f=p(),m=_.create(),v=0;v<l.length;v++){var g=l[v];d.multiplyAffine(f,e.viewMatrix._array,g.worldTransform._array),_.transformMat4(m,g.position._array,f),g.__depth=m[2]}c.sort(this.opaqueSortFunc),l.sort(this.transparentSortFunc),t.trigger("beforerender:opaque",this,c),t.viewBoundingBoxLastFrame.min.set(1/0,1/0,1/0),t.viewBoundingBoxLastFrame.max.set(-(1/0),-(1/0),-(1/0)),i.disable(i.BLEND),i.enable(i.DEPTH_TEST);var y=this.renderQueue(c,e,h,n);t.trigger("afterrender:opaque",this,c,y),t.trigger("beforerender:transparent",this,l),i.enable(i.BLEND);var x=this.renderQueue(l,e,h);t.trigger("afterrender:transparent",this,l,x);var T={};for(var b in y)T[b]=y[b]+x[b];return t.trigger("afterrender",this,t,e,T),this._sceneRendering=null,T},resetRenderStatus:function(){this._currentShader=null},renderQueue:function(t,e,r,n){var i={triangleCount:0,vertexCount:0,drawCallCount:0,meshCount:t.length,renderedMeshCount:0},a=this.viewport,o=a.devicePixelRatio,s=[a.x*o,a.y*o,a.width*o,a.height*o],l=this.devicePixelRatio,h=this.__currentFrameBuffer?[this.__currentFrameBuffer.getTextureWidth(),this.__currentFrameBuffer.getTextureHeight()]:[this._width*l,this._height*l],f=[s[2],s[3]];d.copy(y.VIEW,e.viewMatrix._array),d.copy(y.PROJECTION,e.projectionMatrix._array),d.multiply(y.VIEWPROJECTION,e.projectionMatrix._array,y.VIEW),d.copy(y.VIEWINVERSE,e.worldTransform._array),d.invert(y.PROJECTIONINVERSE,y.PROJECTION),d.invert(y.VIEWPROJECTIONINVERSE,y.VIEWPROJECTION);var _,p,m,g,x,T,b,E=this.gl,w=this._sceneRendering;if(n){var S=new c({shader:u.get("qtek.prez")}),A=S.shader;b=[],A.bind(E),E.colorMask(!1,!1,!1,!1),E.depthMask(!0),E.enable(E.DEPTH_TEST);for(var M=0;M<t.length;M++){var C=t[M],L=C.worldTransform._array,R=C.geometry;if(d.multiplyAffine(y.WORLDVIEW,y.VIEW,L),!(R.boundingBox&&this.isFrustumCulled(C,w,e,y.WORLDVIEW,y.PROJECTION)||C.skeleton)){d.multiply(y.WORLDVIEWPROJECTION,y.VIEWPROJECTION,L),C.cullFace!==x&&(x=C.cullFace,E.cullFace(x)),C.frontFace!==T&&(T=C.frontFace,E.frontFace(T)),C.culling!==g&&(g=C.culling,g?E.enable(E.CULL_FACE):E.disable(E.CULL_FACE));var N=A.matrixSemantics.WORLDVIEWPROJECTION;A.setUniform(E,N.type,N.symbol,y.WORLDVIEWPROJECTION),C.render(E,S.shader),b.push(C)}}E.depthFunc(E.LEQUAL),E.colorMask(!0,!0,!0,!0),E.depthMask(!1),this._currentShader=null}else b=t;g=null,x=null,T=null;for(var M=0;M<b.length;M++){var C=b[M],R=C.geometry,L=C.worldTransform._array;if(d.multiplyAffine(y.WORLDVIEW,y.VIEW,L),!R.boundingBox||n||!this.isFrustumCulled(C,w,e,y.WORLDVIEW,y.PROJECTION)){var D=r||C.material;D!==_&&D.updateShader&&D.updateShader(E);var I=D.shader;d.copy(y.WORLD,L),d.multiply(y.WORLDVIEWPROJECTION,y.VIEWPROJECTION,L),(I.matrixSemantics.WORLDINVERSE||I.matrixSemantics.WORLDINVERSETRANSPOSE)&&d.invert(y.WORLDINVERSE,L),(I.matrixSemantics.WORLDVIEWINVERSE||I.matrixSemantics.WORLDVIEWINVERSETRANSPOSE)&&d.invert(y.WORLDVIEWINVERSE,y.WORLDVIEW),(I.matrixSemantics.WORLDVIEWPROJECTIONINVERSE||I.matrixSemantics.WORLDVIEWPROJECTIONINVERSETRANSPOSE)&&d.invert(y.WORLDVIEWPROJECTIONINVERSE,y.WORLDVIEWPROJECTION);var O=this._currentShader;if(C.beforeRender(E),this.beforeRenderObject(C,_,O),I.isEqual(O))I=O;else{w&&w.isShaderLightNumberChanged(I)&&w.setShaderLightNumber(I);var P=I.bind(E);if(P){if(v[I.__GUID__])continue;if(v[I.__GUID__]=!0,this.throwError)throw new Error(P);this.trigger("error",P)}I.setUniformOfSemantic(E,"VIEWPORT",s),I.setUniformOfSemantic(E,"WINDOW_SIZE",h),I.setUniformOfSemantic(E,"VIEWPORT_SIZE",f),I.setUniformOfSemantic(E,"NEAR",e.near),I.setUniformOfSemantic(E,"FAR",e.far),w&&w.setLightUniforms(I,E),this._currentShader=I}_!==D&&(n||(D.depthTest!==p&&(D.depthTest?E.enable(E.DEPTH_TEST):E.disable(E.DEPTH_TEST),p=D.depthTest),D.depthMask!==m&&(E.depthMask(D.depthMask),m=D.depthMask)),D.bind(E,I,_,O),_=D,D.transparent&&(D.blend?D.blend(E):(E.blendEquationSeparate(E.FUNC_ADD,E.FUNC_ADD),E.blendFuncSeparate(E.SRC_ALPHA,E.ONE_MINUS_SRC_ALPHA,E.ONE,E.ONE_MINUS_SRC_ALPHA))));for(var F=I.matrixSemanticKeys,B=0;B<F.length;B++){var U=F[B],N=I.matrixSemantics[U],k=y[U];if(N.isTranspose){var z=y[N.semanticNoTranspose];d.transpose(k,z)}I.setUniform(E,N.type,N.symbol,k)}C.cullFace!==x&&(x=C.cullFace,E.cullFace(x)),C.frontFace!==T&&(T=C.frontFace,
E.frontFace(T)),C.culling!==g&&(g=C.culling,g?E.enable(E.CULL_FACE):E.disable(E.CULL_FACE));var G=C.render(E,I);G&&(i.triangleCount+=G.triangleCount,i.vertexCount+=G.vertexCount,i.drawCallCount+=G.drawCallCount,i.renderedMeshCount++),this.afterRenderObject(C,G),C.afterRender(E,G)}}return n&&E.depthFunc(E.LESS),i},isFrustumCulled:function(){var t=new o,e=new s;return function(r,n,i,a,o){var s=r.boundingBox||r.geometry.boundingBox;if(e._array=a,t.copy(s),t.applyTransform(e),n&&r.isRenderable()&&r.castShadow&&n.viewBoundingBoxLastFrame.union(t),r.frustumCulling){if(!t.intersectBoundingBox(i.frustum.boundingBox))return!0;e._array=o,t.max._array[2]>0&&t.min._array[2]<0&&(t.max._array[2]=-1e-20),t.applyProjection(e);var u=t.min._array,c=t.max._array;if(c[0]<-1||u[0]>1||c[1]<-1||u[1]>1||c[2]<-1||u[2]>1)return!0}return!1}}(),disposeScene:function(t){this.disposeNode(t,!0,!0),t.dispose()},disposeNode:function(t,e,r){var n={},i=this.gl;t.getParent()&&t.getParent().remove(t),t.traverse(function(t){t.geometry&&e&&t.geometry.dispose(i),t.material&&(n[t.material.__GUID__]=t.material),t.dispose&&t.dispose(i)});for(var a in n){var o=n[a];o.dispose(i,r)}},disposeShader:function(t){t.dispose(this.gl)},disposeGeometry:function(t){t.dispose(this.gl)},disposeTexture:function(t){t.dispose(this.gl)},disposeFrameBuffer:function(t){t.dispose(this.gl)},dispose:function(){i.dispose(this.gl)},screenToNdc:function(t,e,r){r||(r=new l),e=this._height-e;var n=this.viewport,i=r._array;return i[0]=(t-n.x)/n.width,i[0]=2*i[0]-1,i[1]=(e-n.y)/n.height,i[1]=2*i[1]-1,r}});g.opaqueSortFunc=g.prototype.opaqueSortFunc=function(t,e){return t.renderOrder===e.renderOrder?t.material.shader===e.material.shader?t.material===e.material?t.geometry.__GUID__-e.geometry.__GUID__:t.material.__GUID__-e.material.__GUID__:t.material.shader.__GUID__-e.material.shader.__GUID__:t.renderOrder-e.renderOrder},g.transparentSortFunc=g.prototype.transparentSortFunc=function(t,e){return t.renderOrder===e.renderOrder?t.__depth===e.__depth?t.material.shader===e.material.shader?t.material===e.material?t.geometry.__GUID__-e.geometry.__GUID__:t.material.__GUID__-e.material.__GUID__:t.material.shader.__GUID__-e.material.shader.__GUID__:t.__depth-e.__depth:t.renderOrder-e.renderOrder};var y={WORLD:p(),VIEW:p(),PROJECTION:p(),WORLDVIEW:p(),VIEWPROJECTION:p(),WORLDVIEWPROJECTION:p(),WORLDINVERSE:p(),VIEWINVERSE:p(),PROJECTIONINVERSE:p(),WORLDVIEWINVERSE:p(),VIEWPROJECTIONINVERSE:p(),WORLDVIEWPROJECTIONINVERSE:p(),WORLDTRANSPOSE:p(),VIEWTRANSPOSE:p(),PROJECTIONTRANSPOSE:p(),WORLDVIEWTRANSPOSE:p(),VIEWPROJECTIONTRANSPOSE:p(),WORLDVIEWPROJECTIONTRANSPOSE:p(),WORLDINVERSETRANSPOSE:p(),VIEWINVERSETRANSPOSE:p(),PROJECTIONINVERSETRANSPOSE:p(),WORLDVIEWINVERSETRANSPOSE:p(),VIEWPROJECTIONINVERSETRANSPOSE:p(),WORLDVIEWPROJECTIONINVERSETRANSPOSE:p()};g.COLOR_BUFFER_BIT=a.COLOR_BUFFER_BIT,g.DEPTH_BUFFER_BIT=a.DEPTH_BUFFER_BIT,g.STENCIL_BUFFER_BIT=a.STENCIL_BUFFER_BIT,t.exports=g},function(t,e,r){"use strict";var n=r(148),i=r(64),a=r(12),o=n.extend(function(){return{_outputs:[],_texturePool:new i,_frameBuffer:new a({depthBuffer:!1})}},{addNode:function(t){n.prototype.addNode.call(this,t),t._compositor=this},render:function(t,e){if(this._dirty){this.update(),this._dirty=!1,this._outputs.length=0;for(var r=0;r<this.nodes.length;r++)this.nodes[r].outputs||this._outputs.push(this.nodes[r])}for(var r=0;r<this.nodes.length;r++)this.nodes[r].beforeFrame();for(var r=0;r<this._outputs.length;r++)this._outputs[r].updateReference();for(var r=0;r<this._outputs.length;r++)this._outputs[r].render(t,e);for(var r=0;r<this.nodes.length;r++)this.nodes[r].afterFrame()},allocateTexture:function(t){return this._texturePool.get(t)},releaseTexture:function(t){this._texturePool.put(t)},getFrameBuffer:function(){return this._frameBuffer},dispose:function(t){this._texturePool.clear(t.gl||t)}});t.exports=o},function(t,e,r){"use strict";function n(t){u.defaultsWithPropList(t,l,h),i(t);for(var e="",r=0;r<h.length;r++){var n=h[r],a=t[n].toString();e+=a}return e}function i(t){var e=a(t.width,t.height);t.format===s.DEPTH_COMPONENT&&(t.useMipmap=!1),e&&t.useMipmap||(t.minFilter==s.NEAREST_MIPMAP_NEAREST||t.minFilter==s.NEAREST_MIPMAP_LINEAR?t.minFilter=s.NEAREST:t.minFilter!=s.LINEAR_MIPMAP_LINEAR&&t.minFilter!=s.LINEAR_MIPMAP_NEAREST||(t.minFilter=s.LINEAR),t.wrapS=s.CLAMP_TO_EDGE,t.wrapT=s.CLAMP_TO_EDGE)}function a(t,e){return 0===(t&t-1)&&0===(e&e-1)}var o=r(9),s=r(6),u=r(23),c=function(){this._pool={},this._allocatedTextures=[]};c.prototype={constructor:c,get:function(t){var e=n(t);this._pool.hasOwnProperty(e)||(this._pool[e]=[]);var r=this._pool[e];if(!r.length){var i=new o(t);return this._allocatedTextures.push(i),i}return r.pop()},put:function(t){var e=n(t);this._pool.hasOwnProperty(e)||(this._pool[e]=[]);var r=this._pool[e];r.push(t)},clear:function(t){for(var e=0;e<this._allocatedTextures.length;e++)this._allocatedTextures[e].dispose(t);this._pool={},this._allocatedTextures=[]}};var l={width:512,height:512,type:s.UNSIGNED_BYTE,format:s.RGBA,wrapS:s.CLAMP_TO_EDGE,wrapT:s.CLAMP_TO_EDGE,minFilter:s.LINEAR_MIPMAP_LINEAR,magFilter:s.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1},h=Object.keys(l);t.exports=c},function(t,e){"use strict";function r(t){var e=new XMLHttpRequest;e.open("get",t.url),e.responseType=t.responseType||"text",t.onprogress&&(e.onprogress=function(e){if(e.lengthComputable){var r=e.loaded/e.total;t.onprogress(r,e.loaded,e.total)}else t.onprogress(null)}),e.onload=function(r){t.onload&&t.onload(e.response)},t.onerror&&(e.onerror=t.onerror),e.send(null)}t.exports={get:r}},function(t,e,r){"use strict";function n(t,e,r){l.identity();var n=new a({widthSegments:e,heightSegments:r});switch(t){case"px":o.translate(l,l,s.POSITIVE_X),o.rotateY(l,l,Math.PI/2);break;case"nx":o.translate(l,l,s.NEGATIVE_X),o.rotateY(l,l,-Math.PI/2);break;case"py":o.translate(l,l,s.POSITIVE_Y),o.rotateX(l,l,-Math.PI/2);break;case"ny":o.translate(l,l,s.NEGATIVE_Y),o.rotateX(l,l,Math.PI/2);break;case"pz":o.translate(l,l,s.POSITIVE_Z);break;case"nz":o.translate(l,l,s.NEGATIVE_Z),o.rotateY(l,l,Math.PI)}return n.applyTransform(l),n}var i=r(13),a=r(43),o=r(14),s=r(3),u=r(10),c=r(17),l=new o,h=i.extend({widthSegments:1,heightSegments:1,depthSegments:1,inside:!1},function(){this.build()},{build:function(){var t={px:n("px",this.depthSegments,this.heightSegments),nx:n("nx",this.depthSegments,this.heightSegments),py:n("py",this.widthSegments,this.depthSegments),ny:n("ny",this.widthSegments,this.depthSegments),pz:n("pz",this.widthSegments,this.heightSegments),nz:n("nz",this.widthSegments,this.heightSegments)},e=["position","texcoord0","normal"],r=0,i=0;for(var a in t)r+=t[a].vertexCount,i+=t[a].indices.length;for(var o=0;o<e.length;o++)this.attributes[e[o]].init(r);this.indices=new c.Uint16Array(i);var s=0,l=0;for(var a in t){for(var h=t[a],o=0;o<e.length;o++)for(var f=e[o],d=h.attributes[f].value,_=h.attributes[f].size,p="normal"===f,m=0;m<d.length;m++){var v=d[m];this.inside&&p&&(v=-v),this.attributes[f].value[m+_*l]=v}for(var m=0;m<h.indices.length;m++)this.indices[m+s]=l+h.indices[m];s+=h.indices.length,l+=h.vertexCount}this.boundingBox=new u,this.boundingBox.max.set(1,1,1),this.boundingBox.min.set(-1,-1,-1)}});t.exports=h},function(t,e,r){"use strict";var n=r(13),i=r(2),a=(i.vec3,i.vec2,r(10)),o=n.extend({widthSegments:20,heightSegments:20,phiStart:0,phiLength:2*Math.PI,thetaStart:0,thetaLength:Math.PI,radius:1},function(){this.build()},{build:function(){var t=this.heightSegments,e=this.widthSegments,r=this.attributes.position,n=this.attributes.texcoord0,i=this.attributes.normal,o=(e+1)*(t+1);r.init(o),n.init(o),i.init(o);var s,u,c,l,h,f,d,_=o>65535?Uint32Array:Uint16Array,p=this.indices=new _(e*t*6),m=this.radius,v=this.phiStart,g=this.phiLength,y=this.thetaStart,x=this.thetaLength,m=this.radius,T=[],b=[],E=0,w=1/m;for(d=0;d<=t;d++)for(f=0;f<=e;f++)l=f/e,h=d/t,s=-m*Math.cos(v+l*g)*Math.sin(y+h*x),u=m*Math.cos(y+h*x),c=m*Math.sin(v+l*g)*Math.sin(y+h*x),T[0]=s,T[1]=u,T[2]=c,b[0]=l,b[1]=h,r.set(E,T),n.set(E,b),T[0]*=w,T[1]*=w,T[2]*=w,i.set(E,T),E++;var S,A,M,C,L=e+1,R=0;for(d=0;d<t;d++)for(f=0;f<e;f++)A=d*L+f,S=d*L+f+1,C=(d+1)*L+f+1,M=(d+1)*L+f,p[R++]=S,p[R++]=A,p[R++]=C,p[R++]=A,p[R++]=M,p[R++]=C;this.boundingBox=new a,this.boundingBox.max.set(m,m,m),this.boundingBox.min.set(-m,-m,-m)}});t.exports=o},function(t,e,r){"use strict";var n=r(15),i=r(3),a=n.extend({shadowBias:.001,shadowSlopeScale:2,shadowCascade:1,cascadeSplitLogFactor:.2},{type:"DIRECTIONAL_LIGHT",uniformTemplates:{directionalLightDirection:{type:"3f",value:function(t){return t.__dir=t.__dir||new i,t.__dir.copy(t.worldTransform.z).negate()._array}},directionalLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}}},clone:function(){var t=n.prototype.clone.call(this);return t.shadowBias=this.shadowBias,t.shadowSlopeScale=this.shadowSlopeScale,t}});t.exports=a},function(t,e,r){"use strict";var n=r(15),i=n.extend({range:100,castShadow:!1},{type:"POINT_LIGHT",uniformTemplates:{pointLightPosition:{type:"3f",value:function(t){return t.getWorldPosition()._array}},pointLightRange:{type:"1f",value:function(t){return t.range}},pointLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}}},clone:function(){var t=n.prototype.clone.call(this);return t.range=this.range,t}});t.exports=i},function(t,e,r){"use strict";var n=r(15),i=r(3),a=n.extend({range:20,umbraAngle:30,penumbraAngle:45,falloffFactor:2,shadowBias:2e-4,shadowSlopeScale:2},{type:"SPOT_LIGHT",uniformTemplates:{spotLightPosition:{type:"3f",value:function(t){return t.getWorldPosition()._array}},spotLightRange:{type:"1f",value:function(t){return t.range}},spotLightUmbraAngleCosine:{type:"1f",value:function(t){return Math.cos(t.umbraAngle*Math.PI/180)}},spotLightPenumbraAngleCosine:{type:"1f",value:function(t){return Math.cos(t.penumbraAngle*Math.PI/180)}},spotLightFalloffFactor:{type:"1f",value:function(t){return t.falloffFactor}},spotLightDirection:{type:"3f",value:function(t){return t.__dir=t.__dir||new i,t.__dir.copy(t.worldTransform.z).negate()._array}},spotLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}}},clone:function(){var t=n.prototype.clone.call(this);return t.range=this.range,t.umbraAngle=this.umbraAngle,t.penumbraAngle=this.penumbraAngle,t.falloffFactor=this.falloffFactor,t.shadowBias=this.shadowBias,t.shadowSlopeScale=this.shadowSlopeScale,t}});t.exports=a},function(t,e,r){"use strict";var n=r(3),i=r(2),a=i.vec3,o=i.mat4,s=i.vec4,u=function(t,e){this.normal=t||new n(0,1,0),this.distance=e||0};u.prototype={constructor:u,distanceToPoint:function(t){return a.dot(t._array,this.normal._array)-this.distance},projectPoint:function(t,e){e||(e=new n);var r=this.distanceToPoint(t);return a.scaleAndAdd(e._array,t._array,this.normal._array,-r),e._dirty=!0,e},normalize:function(){var t=1/a.len(this.normal._array);a.scale(this.normal._array,t),this.distance*=t},intersectFrustum:function(t){for(var e=t.vertices,r=this.normal._array,n=a.dot(e[0]._array,r)>this.distance,i=1;i<8;i++)if(a.dot(e[i]._array,r)>this.distance!=n)return!0},intersectLine:function(){var t=a.create();return function(e,r,i){var o=this.distanceToPoint(e),s=this.distanceToPoint(r);if(o>0&&s>0||o<0&&s<0)return null;var u=this.normal._array,c=this.distance,l=e._array;a.sub(t,r._array,e._array),a.normalize(t,t);var h=a.dot(u,t);if(0===h)return null;i||(i=new n);var f=(a.dot(u,l)-c)/h;return a.scaleAndAdd(i._array,l,t,-f),i._dirty=!0,i}}(),applyTransform:function(){var t=o.create(),e=s.create(),r=s.create();return r[3]=1,function(n){n=n._array,a.scale(r,this.normal._array,this.distance),s.transformMat4(r,r,n),this.distance=a.dot(r,this.normal._array),o.invert(t,n),o.transpose(t,t),e[3]=0,a.copy(e,this.normal._array),s.transformMat4(e,e,t),a.copy(this.normal._array,e)}}(),copy:function(t){a.copy(this.normal._array,t.normal._array),this.normal._dirty=!0,this.distance=t.distance},clone:function(){var t=new u;return t.copy(this),t}},t.exports=u},function(t,e){var r={};r.isPowerOfTwo=function(t){return 0===(t&t-1)},r.nextPowerOfTwo=function(t){return t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,t++,t},r.nearestPowerOfTwo=function(t){return Math.pow(2,Math.round(Math.log(t)/Math.LN2))},t.exports=r},function(t,e,r){var n=r(24),i=r(66),a=r(7),o=r(19);a.import(r(180));var s=n.extend(function(){var t=new a({vertex:a.source("qtek.skybox.vertex"),fragment:a.source("qtek.skybox.fragment")}),e=new o({shader:t,depthMask:!1});return{scene:null,geometry:new i,material:e,environmentMap:null,culling:!1}},function(){var t=this.scene;t&&this.attachScene(t),this.environmentMap&&this.setEnvironmentMap(this.environmentMap)},{attachScene:function(t){this.scene&&this.detachScene(),this.scene=t,t.on("beforerender",this._beforeRenderScene,this)},detachScene:function(){this.scene&&this.scene.off("beforerender",this._beforeRenderScene,this),this.scene=null},dispose:function(t){this.detachScene(),this.geometry.dispose(t),this.material.dispose(t)},setEnvironmentMap:function(t){this.material.set("environmentMap",t)},_beforeRenderScene:function(t,e,r){this.renderSkybox(t,r)},renderSkybox:function(t,e){this.position.copy(e.getWorldPosition()),this.update(),t.gl.disable(t.gl.BLEND),t.renderQueue([this],e)}});t.exports=s},function(t,e,r){var n=r(24),i=r(67),a=r(7),o=r(19);a.import(r(164));var s=n.extend(function(){var t=new a({vertex:a.source("qtek.basic.vertex"),fragment:a.source("qtek.basic.fragment")});t.enableTexture("diffuseMap");var e=new o({shader:t,depthMask:!1});return{scene:null,geometry:new i({widthSegments:30,heightSegments:30}),material:e,environmentMap:null,culling:!1}},function(){var t=this.scene;t&&this.attachScene(t),this.environmentMap&&this.setEnvironmentMap(this.environmentMap)},{attachScene:function(t){this.scene&&this.detachScene(),this.scene=t,t.on("beforerender",this._beforeRenderScene,this)},detachScene:function(){this.scene&&this.scene.off("beforerender",this._beforeRenderScene,this),this.scene=null},_beforeRenderScene:function(t,e,r){this.position.copy(r.getWorldPosition()),this.update(),t.renderQueue([this],r)},setEnvironmentMap:function(t){this.material.set("diffuseMap",t)},dispose:function(t){this.detachScene(),this.geometry.dispose(t),this.material.dispose(t)}});t.exports=s},function(t,e,r){function n(){this._pool={}}function i(t,e,r){o[t]={vertex:e,fragment:r}}var a=r(7),o=(r(23),{});n.prototype.get=function(t,e){var r=[],n={},i={};"string"==typeof e?r=Array.prototype.slice.call(arguments,1):"[object Object]"==Object.prototype.toString.call(e)?(r=e.textures||[],n=e.vertexDefines||{},i=e.fragmentDefines||{}):e instanceof Array&&(r=e);var s=Object.keys(n),u=Object.keys(i);r.sort(),s.sort(),u.sort();var c=[t];c=c.concat(r);for(var l=0;l<s.length;l++)c.push(s[l],n[s[l]]);for(var l=0;l<u.length;l++)c.push(u[l],i[u[l]]);var h=c.join("_");if(this._pool[h])return this._pool[h];var f=o[t];if(!f)return void console.error('Shader "'+t+'" is not in the library');for(var d=new a({vertex:f.vertex,fragment:f.fragment}),l=0;l<r.length;l++)d.enableTexture(r[l]);for(var t in n)d.define("vertex",t,n[t]);for(var t in i)d.define("fragment",t,i[t]);return this._pool[h]=d,d},n.prototype.clear=function(){this._pool={}};var s=new n;t.exports={createLibrary:function(){return new n},get:function(){return s.get.apply(s,arguments)},template:i,clear:function(){return s.clear()}}},function(t,e,r){"use strict";function n(t,e,r,n){r<0&&(t+=r,r=-r),n<0&&(e+=n,n=-n),this.x=t,this.y=e,this.width=r,this.height=n}var i=r(196),a=r(195),o=i.applyTransform,s=Math.min,u=Math.max;n.prototype={constructor:n,union:function(t){var e=s(t.x,this.x),r=s(t.y,this.y);this.width=u(t.x+t.width,this.x+this.width)-e,this.height=u(t.y+t.height,this.y+this.height)-r,this.x=e,this.y=r},applyTransform:function(){var t=[],e=[],r=[],n=[];return function(i){if(i){t[0]=r[0]=this.x,t[1]=n[1]=this.y,e[0]=n[0]=this.x+this.width,e[1]=r[1]=this.y+this.height,o(t,t,i),o(e,e,i),o(r,r,i),o(n,n,i),this.x=s(t[0],e[0],r[0],n[0]),this.y=s(t[1],e[1],r[1],n[1]);var a=u(t[0],e[0],r[0],n[0]),c=u(t[1],e[1],r[1],n[1]);this.width=a-this.x,this.height=c-this.y}}}(),calculateTransform:function(t){var e=this,r=t.width/e.width,n=t.height/e.height,i=a.create();return a.translate(i,i,[-e.x,-e.y]),a.scale(i,i,[r,n]),a.translate(i,i,[t.x,t.y]),i},intersect:function(t){if(!t)return!1;t instanceof n||(t=n.create(t));var e=this,r=e.x,i=e.x+e.width,a=e.y,o=e.y+e.height,s=t.x,u=t.x+t.width,c=t.y,l=t.y+t.height;return!(i<s||u<r||o<c||l<a)},contain:function(t,e){var r=this;return t>=r.x&&t<=r.x+r.width&&e>=r.y&&e<=r.y+r.height},clone:function(){return new n(this.x,this.y,this.width,this.height)},copy:function(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height},plain:function(){return{x:this.x,y:this.y,width:this.width,height:this.height}}},n.create=function(t){return new n(t.x,t.y,t.width,t.height)},t.exports=n},function(t,e){var r=function(){this.head=null,this.tail=null,this._len=0},n=r.prototype;n.insert=function(t){var e=new i(t);return this.insertEntry(e),e},n.insertEntry=function(t){this.head?(this.tail.next=t,t.prev=this.tail,t.next=null,this.tail=t):this.head=this.tail=t,this._len++},n.remove=function(t){var e=t.prev,r=t.next;e?e.next=r:this.head=r,r?r.prev=e:this.tail=e,t.next=t.prev=null,this._len--},n.len=function(){return this._len};var i=function(t){this.value=t,this.next,this.prev},a=function(t){this._list=new r,this._map={},this._maxSize=t||10,this._lastRemovedEntry=null},o=a.prototype;o.put=function(t,e){var r=this._list,n=this._map,a=null;if(null==n[t]){var o=r.len(),s=this._lastRemovedEntry;if(o>=this._maxSize&&o>0){var u=r.head;r.remove(u),delete n[u.key],a=u.value,this._lastRemovedEntry=u}s?s.value=e:s=new i(e),s.key=t,r.insertEntry(s),n[t]=s}return a},o.get=function(t){var e=this._map[t],r=this._list;if(null!=e)return e!==r.tail&&(r.remove(e),r.insertEntry(e)),e.value},o.clear=function(){this._list.clear(),this._map={}},t.exports=a},function(t,e){t.exports="@export ecgl.sdfSprite.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform float elapsedTime : 0;\n\nattribute vec3 position : POSITION;\n#ifdef VERTEX_COLOR\nattribute vec4 a_FillColor: COLOR;\n// attribute vec4 a_StrokeColor;\n\nvarying vec4 v_Color;\n// varying vec4 v_StrokeColor;\n#endif\nattribute float size;\n\n#ifdef ANIMATING\nattribute float delay;\n#endif\n\nvarying float v_Size;\n\nvoid main()\n{\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n\n#ifdef ANIMATING\n    gl_PointSize = size * (sin((elapsedTime + delay) * 3.14) * 0.5 + 1.0);\n#else\n    gl_PointSize = size;\n#endif\n\n#ifdef VERTEX_COLOR\n    v_Color = a_FillColor;\n    // v_StrokeColor = a_StrokeColor;\n#endif\n\n    v_Size = size;\n}\n\n@end\n\n@export ecgl.sdfSprite.fragment\n\nuniform vec4 color: [1, 1, 1, 1];\nuniform vec4 strokeColor: [1, 1, 1, 1];\nuniform float softEdgeMin: 0.48;\nuniform float softEdgeMax: 0.52;\n\nuniform float lineWidth: 0.0;\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n// varying vec4 v_StrokeColor;\n#endif\n\nvarying float v_Size;\n\nuniform sampler2D sprite;\nuniform sampler2D strokeSprite;\n\nvoid main()\n{\n    gl_FragColor = color;\n\n    vec4 _strokeColor = strokeColor;\n\n#ifdef VERTEX_COLOR\n    gl_FragColor *= v_Color;\n    // TODO\n    // _strokeColor *= v_StrokeColor;\n#endif\n\n#ifdef SPRITE_ENABLED\n    float d = texture2D(sprite, gl_PointCoord).r;\n    // Antialias\n    gl_FragColor.a *= smoothstep(softEdgeMin, softEdgeMax, d);\n    // Map to [-1, 1]\n    d = d - 0.5;\n    // Scale by symbolSize to make lineWidth screen space.\n    // TODO, Will exceed sprite.\n\n    if (lineWidth > 0.0) {\n        float sLineWidth = lineWidth / 2.0 / v_Size;\n        float fadeSize = sLineWidth * 0.3;\n        float outlineMaxValue0 = sLineWidth - fadeSize;\n        float outlineMaxValue1 = sLineWidth + fadeSize;\n        float outlineMinValue0 = -sLineWidth - fadeSize;\n        float outlineMinValue1 = -sLineWidth + fadeSize;\n\n        if (d <= outlineMaxValue1 && d >= outlineMinValue0) {\n            float a = _strokeColor.a;\n            if (d <= outlineMinValue1) {\n                a = a * smoothstep(outlineMinValue0, outlineMinValue1, d);\n            }\n            else {\n                a = a * smoothstep(outlineMaxValue1, outlineMaxValue0, d);\n            }\n            gl_FragColor.rgb = mix(gl_FragColor.rgb, _strokeColor.rgb, a);\n            gl_FragColor.a = gl_FragColor.a * (1.0 - a) + a;\n        }\n    }\n#endif\n\n\n    if (gl_FragColor.a == 0.0) {\n        discard;\n    }\n}\n@end"},function(t,e){t.exports="@export ecgl.curveAnimatingPoints.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform float percent : 0.0;\n\nattribute vec3 p0;\nattribute vec3 p1;\nattribute vec3 p2;\nattribute vec3 p3;\nattribute vec4 color : COLOR;\n\nattribute float offset;\nattribute float size;\n\nvarying vec4 v_Color;\n\nvoid main()\n{\n    float t = mod(offset + percent, 1.0);\n    float onet = 1.0 - t;\n    vec3 position = onet * onet * (onet * p0 + 3.0 * t * p1)\n        + t * t * (t * p3 + 3.0 * onet * p2);\n\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n\n    gl_PointSize = size;\n\n    v_Color = color;\n}\n\n@end\n\n@export ecgl.curveAnimatingPoints.fragment\n\nvarying vec4 v_Color;\n\nuniform sampler2D sprite;\n\nvoid main()\n{\n    gl_FragColor = v_Color;\n\n#ifdef SPRITE_ENABLED\n    gl_FragColor *= texture2D(sprite, gl_PointCoord);\n#endif\n\n}\n@end"},function(t,e){t.exports="@export ecgl.ssao.estimate\n\nuniform sampler2D depthTex;\n\nuniform sampler2D noiseTex;\n\nuniform vec2 depthTexSize;\n\nuniform vec2 noiseTexSize;\n\nuniform mat4 projection;\n\nuniform mat4 projectionInv;\n\nuniform mat4 viewInverseTranspose;\n\nuniform vec3 kernel[KERNEL_SIZE];\n\nuniform float radius : 1;\n\nuniform float power : 2;\n\nuniform float bias: 1e-3;\n\nvarying vec2 v_Texcoord;\n\n#ifdef DEPTH_ENCODED\n@import qtek.util.decode_float\n#endif\n\nvec3 ssaoEstimator(in vec3 originPos) {\n    float occlusion = 0.0;\n\n    for (int i = 0; i < KERNEL_SIZE; i++) {\n        vec3 samplePos = kernel[i] * radius + originPos;\n\n        vec4 texCoord = projection * vec4(samplePos, 1.0);\n        texCoord.xy /= texCoord.w;\n\n        vec4 depthTexel = texture2D(depthTex, texCoord.xy * 0.5 + 0.5);\n#ifdef DEPTH_ENCODED\n        depthTexel.rgb /= depthTexel.a;\n        float sampleDepth = decodeFloat(depthTexel) * 2.0 - 1.0;\n#else\n        float sampleDepth = depthTexel.r * 2.0 - 1.0;\n#endif\n\n        sampleDepth = projection[3][2] / (sampleDepth * projection[2][3] - projection[2][2]);\n\n        float rangeCheck = smoothstep(0.0, 1.0, radius / abs(originPos.z - sampleDepth));\n        occlusion += rangeCheck * step(samplePos.z, sampleDepth - bias);\n    }\n    occlusion = 1.0 - clamp((occlusion / float(KERNEL_SIZE) - 0.6) * 2.5, 0.0, 1.0);\n    return vec3(pow(occlusion, power));\n}\n\nvoid main()\n{\n\n    vec4 depthTexel = texture2D(depthTex, v_Texcoord);\n#ifdef DEPTH_ENCODED\n    depthTexel.rgb /= depthTexel.a;\n    float z = decodeFloat(depthTexel) * 2.0 - 1.0;\n#else\n    float z = depthTexel.r * 2.0 - 1.0;\n#endif\n\n    vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\n    vec4 p4 = projectionInv * projectedPos;\n\n    vec3 position = p4.xyz / p4.w;\n\n    vec2 noiseTexCoord = depthTexSize / vec2(noiseTexSize) * v_Texcoord;\n    vec3 rvec = texture2D(noiseTex, noiseTexCoord).rgb * 2.0 - 1.0;\n\n    gl_FragColor = vec4(vec3(ssaoEstimator(position)), 1.0);\n}\n\n@end\n\n\n@export ecgl.ssao.blur\n\nuniform sampler2D ssaoTexture;\nuniform sampler2D sourceTexture;\n\nuniform float ssaoIntensity: 1.0;\n\nuniform vec2 textureSize;\n\nvarying vec2 v_Texcoord;\n\nvoid main ()\n{\n\n    vec2 texelSize = 1.0 / textureSize;\n\n    float ao = float(0.0);\n    vec2 hlim = vec2(float(-BLUR_SIZE) * 0.5 + 0.5);\n    float centerAo = texture2D(ssaoTexture, v_Texcoord).r;\n    float weightAll = 0.0;\n    float boxWeight = 1.0 / float(BLUR_SIZE) * float(BLUR_SIZE);\n    for (int x = 0; x < BLUR_SIZE; x++) {\n        for (int y = 0; y < BLUR_SIZE; y++) {\n            vec2 coord = (vec2(float(x), float(y)) + hlim) * texelSize + v_Texcoord;\n            float sampleAo = texture2D(ssaoTexture, coord).r;\n            // http://stackoverflow.com/questions/6538310/anyone-know-where-i-can-find-a-glsl-implementation-of-a-bilateral-filter-blur\n            // PENDING\n            float closeness = 1.0 - distance(sampleAo, centerAo) / sqrt(3.0);\n            float weight = boxWeight * closeness;\n            ao += weight * sampleAo;\n            weightAll += weight;\n        }\n    }\n\n    vec4 color = texture2D(sourceTexture, v_Texcoord);\n    color.rgb *= clamp(1.0 - (1.0 - ao / weightAll) * ssaoIntensity, 0.0, 1.0);\n    gl_FragColor = color;\n}\n@end"},function(t,e){t.exports='{\n    "type" : "compositor",\n    "nodes" : [\n\n        {\n            "name": "source",\n            "type": "texture",\n            "outputs": {\n                "color": {}\n            }\n        },\n        {\n            "name": "source_half",\n            "shader": "#source(qtek.compositor.downsample)",\n            "inputs": {\n                "texture": "source"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "width": "expr(width * 1.0 / 2)",\n                        "height": "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "textureSize": "expr( [width * 1.0, height * 1.0] )"\n            }\n        },\n\n\n        {\n            "name" : "bright",\n            "shader" : "#source(qtek.compositor.bright)",\n            "inputs" : {\n                "texture" : "source_half"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 2)",\n                        "height" : "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "threshold" : 2,\n                "scale": 4,\n                "textureSize": "expr([width * 1.0 / 2, height / 2])"\n            }\n        },\n        {\n            "name" : "bright2",\n            "shader" : "#source(qtek.compositor.bright)",\n            "inputs" : {\n                "texture": "source_half"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 2)",\n                        "height" : "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "threshold": 20,\n                "scale": 0.01\n            }\n        },\n\n        {\n            "name": "bright_downsample_4",\n            "shader" : "#source(qtek.compositor.downsample)",\n            "inputs" : {\n                "texture" : "bright"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 4)",\n                        "height" : "expr(height * 1.0 / 4)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "textureSize": "expr( [width * 1.0 / 2, height / 2] )"\n            }\n        },\n        {\n            "name": "bright_downsample_8",\n            "shader" : "#source(qtek.compositor.downsample)",\n            "inputs" : {\n                "texture" : "bright_downsample_4"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 8)",\n                        "height" : "expr(height * 1.0 / 8)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "textureSize": "expr( [width * 1.0 / 4, height / 4] )"\n            }\n        },\n        {\n            "name": "bright_downsample_16",\n            "shader" : "#source(qtek.compositor.downsample)",\n            "inputs" : {\n                "texture" : "bright_downsample_8"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 16)",\n                        "height" : "expr(height * 1.0 / 16)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "textureSize": "expr( [width * 1.0 / 8, height / 8] )"\n            }\n        },\n        {\n            "name": "bright_downsample_32",\n            "shader" : "#source(qtek.compositor.downsample)",\n            "inputs" : {\n                "texture" : "bright_downsample_16"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 32)",\n                        "height" : "expr(height * 1.0 / 32)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "textureSize": "expr( [width * 1.0 / 16, height / 16] )"\n            }\n        },\n\n\n        {\n            "name" : "bright_upsample_16_blur_h",\n            "shader" : "#source(qtek.compositor.gaussian_blur)",\n            "inputs" : {\n                "texture" : "bright_downsample_32"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 16)",\n                        "height" : "expr(height * 1.0 / 16)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "blurSize" : 1,\n                "blurDir": 0.0,\n                "textureSize": "expr( [width * 1.0 / 32, height / 32] )"\n            }\n        },\n        {\n            "name" : "bright_upsample_16_blur_v",\n            "shader" : "#source(qtek.compositor.gaussian_blur)",\n            "inputs" : {\n                "texture" : "bright_upsample_16_blur_h"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 16)",\n                        "height" : "expr(height * 1.0 / 16)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "blurSize" : 1,\n                "blurDir": 1.0,\n                "textureSize": "expr( [width * 1.0 / 32, height * 1.0 / 32] )"\n            }\n        },\n\n\n\n        {\n            "name" : "bright_upsample_8_blur_h",\n            "shader" : "#source(qtek.compositor.gaussian_blur)",\n            "inputs" : {\n                "texture" : "bright_downsample_16"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 8)",\n                        "height" : "expr(height * 1.0 / 8)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "blurSize" : 1,\n                "blurDir": 0.0,\n                "textureSize": "expr( [width * 1.0 / 16, height * 1.0 / 16] )"\n            }\n        },\n        {\n            "name" : "bright_upsample_8_blur_v",\n            "shader" : "#source(qtek.compositor.gaussian_blur)",\n            "inputs" : {\n                "texture" : "bright_upsample_8_blur_h"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 8)",\n                        "height" : "expr(height * 1.0 / 8)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "blurSize" : 1,\n                "blurDir": 1.0,\n                "textureSize": "expr( [width * 1.0 / 16, height * 1.0 / 16] )"\n            }\n        },\n        {\n            "name" : "bright_upsample_8_blend",\n            "shader" : "#source(qtek.compositor.blend)",\n            "inputs" : {\n                "texture1" : "bright_upsample_8_blur_v",\n                "texture2" : "bright_upsample_16_blur_v"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 8)",\n                        "height" : "expr(height * 1.0 / 8)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "weight1" : 0.3,\n                "weight2" : 0.7\n            }\n        },\n\n\n        {\n            "name" : "bright_upsample_4_blur_h",\n            "shader" : "#source(qtek.compositor.gaussian_blur)",\n            "inputs" : {\n                "texture" : "bright_downsample_8"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 4)",\n                        "height" : "expr(height * 1.0 / 4)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "blurSize" : 1,\n                "blurDir": 0.0,\n                "textureSize": "expr( [width * 1.0 / 8, height * 1.0 / 8] )"\n            }\n        },\n        {\n            "name" : "bright_upsample_4_blur_v",\n            "shader" : "#source(qtek.compositor.gaussian_blur)",\n            "inputs" : {\n                "texture" : "bright_upsample_4_blur_h"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 4)",\n                        "height" : "expr(height * 1.0 / 4)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "blurSize" : 1,\n                "blurDir": 1.0,\n                "textureSize": "expr( [width * 1.0 / 8, height * 1.0 / 8] )"\n            }\n        },\n        {\n            "name" : "bright_upsample_4_blend",\n            "shader" : "#source(qtek.compositor.blend)",\n            "inputs" : {\n                "texture1" : "bright_upsample_4_blur_v",\n                "texture2" : "bright_upsample_8_blend"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 4)",\n                        "height" : "expr(height * 1.0 / 4)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "weight1" : 0.3,\n                "weight2" : 0.7\n            }\n        },\n\n\n\n\n\n        {\n            "name" : "bright_upsample_2_blur_h",\n            "shader" : "#source(qtek.compositor.gaussian_blur)",\n            "inputs" : {\n                "texture" : "bright_downsample_4"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 2)",\n                        "height" : "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "blurSize" : 1,\n                "blurDir": 0.0,\n                "textureSize": "expr( [width * 1.0 / 4, height * 1.0 / 4] )"\n            }\n        },\n        {\n            "name" : "bright_upsample_2_blur_v",\n            "shader" : "#source(qtek.compositor.gaussian_blur)",\n            "inputs" : {\n                "texture" : "bright_upsample_2_blur_h"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 2)",\n                        "height" : "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "blurSize" : 1,\n                "blurDir": 1.0,\n                "textureSize": "expr( [width * 1.0 / 4, height * 1.0 / 4] )"\n            }\n        },\n        {\n            "name" : "bright_upsample_2_blend",\n            "shader" : "#source(qtek.compositor.blend)",\n            "inputs" : {\n                "texture1" : "bright_upsample_2_blur_v",\n                "texture2" : "bright_upsample_4_blend"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 2)",\n                        "height" : "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "weight1" : 0.3,\n                "weight2" : 0.7\n            }\n        },\n\n\n\n        {\n            "name" : "bright_upsample_full_blur_h",\n            "shader" : "#source(qtek.compositor.gaussian_blur)",\n            "inputs" : {\n                "texture" : "bright"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0)",\n                        "height" : "expr(height * 1.0)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "blurSize" : 1,\n                "blurDir": 0.0,\n                "textureSize": "expr( [width * 1.0 / 2, height * 1.0 / 2] )"\n            }\n        },\n        {\n            "name" : "bright_upsample_full_blur_v",\n            "shader" : "#source(qtek.compositor.gaussian_blur)",\n            "inputs" : {\n                "texture" : "bright_upsample_full_blur_h"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0)",\n                        "height" : "expr(height * 1.0)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "blurSize" : 1,\n                "blurDir": 1.0,\n                "textureSize": "expr( [width * 1.0 / 2, height * 1.0 / 2] )"\n            }\n        },\n        {\n            "name" : "bloom_composite",\n            "shader" : "#source(qtek.compositor.blend)",\n            "inputs" : {\n                "texture1" : "bright_upsample_full_blur_v",\n                "texture2" : "bright_upsample_2_blend"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0)",\n                        "height" : "expr(height * 1.0)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "weight1" : 0.3,\n                "weight2" : 0.7\n            }\n        },\n\n\n        {\n            "name": "coc",\n            "shader": "#source(qtek.compositor.dof.coc)",\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "minFilter": "NEAREST",\n                        "magFilter": "NEAREST",\n                        "width": "expr(width * 1.0)",\n                        "height": "expr(height * 1.0)"\n                    }\n                }\n            },\n            "parameters": {\n                "focalDist": 50,\n                "focalRange": 30\n            }\n        },\n\n        {\n            "name": "coc_half",\n            "shader": "#source(qtek.compositor.dof.min_coc)",\n            "inputs": {\n                "coc": "coc"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "minFilter": "NEAREST",\n                        "magFilter": "NEAREST",\n                        "width": "expr(width * 1.0 / 2)",\n                        "height": "expr(height * 1.0 / 2)"\n                    }\n                }\n            },\n            "parameters": {\n                "textureSize": "expr( [width * 1.0, height * 1.0] )"\n            }\n        },\n\n        {\n            "name": "dof_source_half",\n            "shader": "#source(qtek.compositor.dof.downsample)",\n            "inputs": {\n                "texture": "source",\n                "coc": "coc"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "width": "expr(width * 1.0 / 2)",\n                        "height": "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters": {\n                "textureSize": "expr( [width * 1.0, height * 1.0] )"\n            }\n        },\n\n        {\n            "name": "dof_far_blur_hexangonal_1",\n            "shader": "#source(qtek.compositor.dof.hexagonal_blur_1)",\n            "inputs": {\n                "texture": "dof_source_half",\n                "coc": "coc"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "width": "expr(width * 1.0 / 2)",\n                        "height": "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters": {\n                "textureSize": "expr( [width * 1.0 / 2, height * 1.0 / 2] )"\n            }\n        },\n        {\n            "name": "dof_far_blur_hexangonal_2",\n            "shader": "#source(qtek.compositor.dof.hexagonal_blur_2)",\n            "inputs": {\n                "texture": "dof_source_half",\n                "coc": "coc"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "width": "expr(width * 1.0 / 2)",\n                        "height": "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters": {\n                "textureSize": "expr( [width * 1.0 / 2, height * 1.0 / 2] )"\n            }\n        },\n        {\n            "name": "dof_far_blur_hexangonal_3",\n            "shader": "#source(qtek.compositor.dof.hexagonal_blur_3)",\n            "inputs": {\n                "texture1": "dof_far_blur_hexangonal_1",\n                "texture2": "dof_far_blur_hexangonal_2",\n                "coc": "coc"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "width": "expr(width * 1.0 / 2)",\n                        "height": "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters": {\n                "textureSize": "expr( [width * 1.0 / 2, height * 1.0 / 2] )"\n            }\n        },\n\n        {\n            "name": "dof_near_blur_hexangonal_1",\n            "shader": "#source(qtek.compositor.dof.hexagonal_blur_1)",\n            "inputs": {\n                "texture": "dof_source_half",\n                "coc": "coc"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "width": "expr(width * 1.0 / 2)",\n                        "height": "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters": {\n                "textureSize": "expr( [width * 1.0 / 2, height * 1.0 / 2] )"\n            },\n            "defines": {\n                "BLUR_NEARFIELD": null\n            }\n        },\n        {\n            "name": "dof_near_blur_hexangonal_2",\n            "shader": "#source(qtek.compositor.dof.hexagonal_blur_2)",\n            "inputs": {\n                "texture": "dof_source_half",\n                "coc": "coc"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "width": "expr(width * 1.0 / 2)",\n                        "height": "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters": {\n                "textureSize": "expr( [width * 1.0 / 2, height * 1.0 / 2] )"\n            },\n            "defines": {\n                "BLUR_NEARFIELD": null\n            }\n        },\n        {\n            "name": "dof_near_blur_hexangonal_3",\n            "shader": "#source(qtek.compositor.dof.hexagonal_blur_3)",\n            "inputs": {\n                "texture1": "dof_near_blur_hexangonal_1",\n                "texture2": "dof_near_blur_hexangonal_2",\n                "coc": "coc"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "width": "expr(width * 1.0 / 2)",\n                        "height": "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters": {\n                "textureSize": "expr( [width * 1.0 / 2, height * 1.0 / 2] )"\n            },\n            "defines": {\n                "BLUR_NEARFIELD": null\n            }\n        },\n\n\n        {\n            "name": "dof_coc_blur_hexangonal_1",\n            "shader": "#source(qtek.compositor.dof.hexagonal_blur_1)",\n            "inputs": {\n                "texture": "coc_half"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "minFilter": "NEAREST",\n                        "magFilter": "NEAREST",\n                        "width": "expr(width * 1.0 / 2)",\n                        "height": "expr(height * 1.0 / 2)"\n                    }\n                }\n            },\n            "parameters": {\n                "textureSize": "expr( [width * 1.0 / 2, height * 1.0 / 2] )"\n            },\n            "defines": {\n                "BLUR_COC": null\n            }\n        },\n        {\n            "name": "dof_coc_blur_hexangonal_2",\n            "shader": "#source(qtek.compositor.dof.hexagonal_blur_2)",\n            "inputs": {\n                "texture": "coc_half"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "minFilter": "NEAREST",\n                        "magFilter": "NEAREST",\n                        "width": "expr(width * 1.0 / 2)",\n                        "height": "expr(height * 1.0 / 2)"\n                    }\n                }\n            },\n            "parameters": {\n                "textureSize": "expr( [width * 1.0 / 2, height * 1.0 / 2] )"\n            },\n            "defines": {\n                "BLUR_COC": null\n            }\n        },\n        {\n            "name": "dof_coc_blur_hexangonal_3",\n            "shader": "#source(qtek.compositor.dof.hexagonal_blur_3)",\n            "inputs": {\n                "texture1": "dof_coc_blur_hexangonal_1",\n                "texture2": "dof_coc_blur_hexangonal_2"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "minFilter": "NEAREST",\n                        "magFilter": "NEAREST",\n                        "width": "expr(width * 1.0 / 2)",\n                        "height": "expr(height * 1.0 / 2)"\n                    }\n                }\n            },\n            "parameters": {\n                "textureSize": "expr( [width * 1.0 / 2, height * 1.0 / 2] )"\n            },\n            "defines": {\n                "BLUR_COC": null\n            }\n        },\n\n        {\n            "name": "dof_far_blur_upsample",\n            "shader": "#source(qtek.compositor.dof.upsample)",\n            "inputs": {\n                "texture": "dof_far_blur_hexangonal_3",\n                "coc": "coc"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "width": "expr(width * 1.0)",\n                        "height": "expr(height * 1.0)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters": {\n                "textureSize": "expr( [width * 1.0 / 2, height * 1.0 / 2] )"\n            }\n        },\n\n        {\n            "name": "dof_near_blur_upsample",\n            "shader": "#source(qtek.compositor.dof.upsample)",\n            "inputs": {\n                "texture": "dof_near_blur_hexangonal_3",\n                "coc": "coc"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "width": "expr(width * 1.0)",\n                        "height": "expr(height * 1.0)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters": {\n                "textureSize": "expr( [width * 1.0 / 2, height * 1.0 / 2] )"\n            }\n        },\n\n        {\n            "name": "dof_coc_blur_upsample",\n            "shader": "#source(qtek.compositor.dof.coc_upsample)",\n            "inputs": {\n                "coc": "dof_coc_blur_hexangonal_3"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "minFilter": "NEAREST",\n                        "magFilter": "NEAREST",\n                        "width": "expr(width * 1.0)",\n                        "height": "expr(height * 1.0)"\n                    }\n                }\n            },\n            "parameters": {\n                "textureSize": "expr( [width * 1.0 / 2, height * 1.0 / 2] )"\n            }\n        },\n\n        {\n            "name": "dof_composite",\n            "shader": "#source(qtek.compositor.dof.composite)",\n            "inputs": {\n                "original": "source",\n                "blurred": "dof_far_blur_upsample",\n                "nearfield": "dof_near_blur_upsample",\n                "coc": "coc",\n                "nearcoc": "dof_coc_blur_upsample"\n            },\n            "outputs": {\n                "color": {\n                    "parameters": {\n                        "width": "expr(width * 1.0)",\n                        "height": "expr(height * 1.0)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            }\n        },\n\n        {\n            "name" : "lensflare",\n            "shader" : "#source(qtek.compositor.lensflare)",\n            "inputs" : {\n                "texture" : "bright2"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 2)",\n                        "height" : "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "textureSize" : "expr([width * 1.0 / 2, height * 1.0 / 2])",\n                "lensColor" : "#lenscolor"\n            }\n        },\n        {\n            "name" : "lensflare_blur_h",\n            "shader" : "#source(qtek.compositor.gaussian_blur)",\n            "inputs" : {\n                "texture" : "lensflare"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 2)",\n                        "height" : "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "blurSize" : 1,\n                "blurDir": 0.0,\n                "textureSize" : "expr([width * 1.0 / 2, height * 1.0 / 2])"\n            }\n        },\n        {\n            "name" : "lensflare_blur_v",\n            "shader" : "#source(qtek.compositor.gaussian_blur)",\n            "inputs" : {\n                "texture" : "lensflare_blur_h"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0 / 2)",\n                        "height" : "expr(height * 1.0 / 2)",\n                        "type": "HALF_FLOAT"\n                    }\n                }\n            },\n            "parameters" : {\n                "blurSize" : 1,\n                "blurDir": 1.0,\n                "textureSize" : "expr([width * 1.0 / 2, height * 1.0 / 2])"\n            }\n        },\n        {\n            "name" : "composite",\n            "shader" : "#source(qtek.compositor.hdr.composite)",\n            "inputs" : {\n                "texture": "source",\n                "bloom" : "bloom_composite"\n            },\n            "outputs" : {\n                "color" : {\n                    "parameters" : {\n                        "width" : "expr(width * 1.0)",\n                        "height" : "expr(height * 1.0)"\n                    }\n                }\n            },\n            "parameters": {\n                "bloomIntensity": 0.03\n            }\n        },\n        {\n            "name" : "FXAA",\n            "shader" : "#source(qtek.compositor.fxaa)",\n            "inputs" : {\n                "texture" : "composite"\n            }\n        }\n    ]\n}';
},function(t,e){t.exports="@export ecgl.color.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec2 uvRepeat: [1, 1];\n\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 position: POSITION;\n\n@import ecgl.wireframe.common.vertexHeader\n\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\n\nvarying vec2 v_Texcoord;\n\nvoid main()\n{\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n    v_Texcoord = texcoord * uvRepeat;\n\n#ifdef VERTEX_COLOR\n    v_Color = a_Color;\n#endif\n\n    @import ecgl.wireframe.common.vertexMain\n\n}\n\n@end\n\n@export ecgl.color.fragment\n\n#define LAYER_DIFFUSEMAP_COUNT 0\n#define LAYER_EMISSIVEMAP_COUNT 0\n\nuniform sampler2D diffuseMap;\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nuniform float emissionIntensity: 1.0;\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\n#if (LAYER_DIFFUSEMAP_COUNT > 0)\nuniform sampler2D layerDiffuseMap[LAYER_DIFFUSEMAP_COUNT];\n#endif\n\n#if (LAYER_EMISSIVEMAP_COUNT > 0)\nuniform sampler2D layerEmissiveMap[LAYER_EMISSIVEMAP_COUNT];\n#endif\n\nvarying vec2 v_Texcoord;\n\n@import ecgl.wireframe.common.fragmentHeader\n\n@import qtek.util.srgb\n\nvoid main()\n{\n#ifdef SRGB_DECODE\n    gl_FragColor = sRGBToLinear(color);\n#else\n    gl_FragColor = color;\n#endif\n\n#ifdef VERTEX_COLOR\n    gl_FragColor *= v_Color;\n#endif\n\n    vec4 albedoTexel = vec4(1.0);\n#ifdef DIFFUSEMAP_ENABLED\n    albedoTexel = texture2D(diffuseMap, v_Texcoord);\n    #ifdef SRGB_DECODE\n    albedoTexel = sRGBToLinear(albedoTexel);\n    #endif\n#endif\n\n#if (LAYER_DIFFUSEMAP_COUNT > 0)\n    for (int _idx_ = 0; _idx_ < LAYER_DIFFUSEMAP_COUNT; _idx_++) {{\n        vec4 texel2 = texture2D(layerDiffuseMap[_idx_], v_Texcoord);\n        #ifdef SRGB_DECODE\n        texel2 = sRGBToLinear(texel2);\n        #endif\n        // source-over blend\n        albedoTexel.rgb = mix(albedoTexel.rgb, texel2.rgb, texel2.a);\n        albedoTexel.a = texel2.a + (1.0 - texel2.a) * albedoTexel.a;\n    }}\n#endif\n    gl_FragColor *= albedoTexel;\n\n#if (LAYER_EMISSIVEMAP_COUNT > 0)\n    for (int _idx_ = 0; _idx_ < LAYER_EMISSIVEMAP_COUNT; _idx_++) {{\n        // PENDING BLEND?\n        vec4 texel2 = texture2D(layerEmissiveMap[_idx_], v_Texcoord);\n        gl_FragColor.rgb += texel2.rgb * texel2.a * emissionIntensity;\n    }}\n#endif\n\n\n    @import ecgl.wireframe.common.fragmentMain\n\n}\n@end"},function(t,e){t.exports="// COMMON SHADERS\n// -----------------WIREFRAME -----------\n@export ecgl.wireframe.common.vertexHeader\n\n#ifdef WIREFRAME_QUAD\nattribute vec4 barycentric;\nvarying vec4 v_Barycentric;\n#elif defined(WIREFRAME_TRIANGLE)\nattribute vec3 barycentric;\nvarying vec3 v_Barycentric;\n#endif\n\n@end\n\n@export ecgl.wireframe.common.vertexMain\n\n#if defined(WIREFRAME_QUAD) || defined(WIREFRAME_TRIANGLE)\n    v_Barycentric = barycentric;\n#endif\n\n@end\n\n\n@export ecgl.wireframe.common.fragmentHeader\n\nuniform float wireframeLineWidth : 1;\nuniform vec3 wireframeLineColor: [0.5, 0.5, 0.5];\n\n#ifdef WIREFRAME_QUAD\nvarying vec4 v_Barycentric;\nfloat edgeFactor () {\n    vec4 d = fwidth(v_Barycentric);\n    vec4 a4 = smoothstep(vec4(0.0), d * wireframeLineWidth, v_Barycentric);\n    return min(min(min(a4.x, a4.y), a4.z), a4.w);\n}\n#elif defined(WIREFRAME_TRIANGLE)\nvarying vec3 v_Barycentric;\nfloat edgeFactor () {\n    vec3 d = fwidth(v_Barycentric);\n    vec3 a3 = smoothstep(vec3(0.0), d * wireframeLineWidth, v_Barycentric);\n    return min(min(a3.x, a3.y), a3.z);\n}\n#endif\n\n@end\n\n\n@export ecgl.wireframe.common.fragmentMain\n\n#if defined(WIREFRAME_QUAD) || defined(WIREFRAME_TRIANGLE)\n    if (wireframeLineWidth > 0.) {\n        vec3 lineColor = wireframeLineColor;\n#ifdef SRGB_DECODE\n        lineColor = sRGBToLinear(vec4(lineColor, 1.0)).rgb;\n#endif\n\n        gl_FragColor.rgb = mix(lineColor, gl_FragColor.rgb, edgeFactor());\n    }\n#endif\n@end\n\n"},function(t,e){t.exports="@export ecgl.labels3D.vertex\n\n// https://mattdesl.svbtle.com/drawing-lines-is-hard\nattribute vec3 position: POSITION;\nattribute vec2 texcoord: TEXCOORD_0;\nattribute vec2 offset;\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec4 viewport : VIEWPORT;\n\nvarying vec2 v_Texcoord;\n\nvoid main()\n{\n    vec4 proj = worldViewProjection * vec4(position, 1.0);\n\n    vec2 screen = (proj.xy / abs(proj.w) + 1.0) * 0.5 * viewport.zw;\n\n    screen += offset;\n\n    proj.xy = (screen / viewport.zw - 0.5) * 2.0 * abs(proj.w);\n    gl_Position = proj;\n#ifdef VERTEX_COLOR\n    v_Color = a_Color;\n#endif\n    v_Texcoord = texcoord;\n\n    gl_PointSize = 10.0;\n}\n@end\n\n\n@export ecgl.labels3D.fragment\n\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\nuniform sampler2D textureAtlas;\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\nvarying float v_Miter;\n\nvarying vec2 v_Texcoord;\n\nvoid main()\n{\n    gl_FragColor = vec4(color, alpha) * texture2D(textureAtlas, v_Texcoord);\n#ifdef VERTEX_COLOR\n    gl_FragColor *= v_Color;\n#endif\n}\n\n@end"},function(t,e){t.exports="/**\n * http://en.wikipedia.org/wiki/Lambertian_reflectance\n */\n\n@export ecgl.lambert.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\n\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\n\n@import ecgl.wireframe.common.vertexHeader\n\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\n\nvarying vec2 v_Texcoord;\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nvoid main()\n{\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n\n    v_Normal = normalize((worldInverseTranspose * vec4(normal, 0.0)).xyz);\n    v_WorldPosition = (world * vec4(position, 1.0)).xyz;\n\n#ifdef VERTEX_COLOR\n    v_Color = a_Color;\n#endif\n\n    @import ecgl.wireframe.common.vertexMain\n}\n\n@end\n\n\n@export ecgl.lambert.fragment\n\n#define LAYER_DIFFUSEMAP_COUNT 0\n#define LAYER_EMISSIVEMAP_COUNT 0\n#define PI 3.14159265358979\n\nvarying vec2 v_Texcoord;\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\n#ifdef DIFFUSEMAP_ENABLED\nuniform sampler2D diffuseMap;\n#endif\n\n#if (LAYER_DIFFUSEMAP_COUNT > 0)\nuniform sampler2D layerDiffuseMap[LAYER_DIFFUSEMAP_COUNT];\n#endif\n\n#if (LAYER_EMISSIVEMAP_COUNT > 0)\nuniform sampler2D layerEmissiveMap[LAYER_EMISSIVEMAP_COUNT];\n#endif\n\nuniform float emissionIntensity: 1.0;\n\n#ifdef BUMPMAP_ENABLED\nuniform sampler2D bumpMap;\nuniform float bumpScale : 1.0;\n// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n//  http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\nvec3 perturbNormalArb(vec3 surfPos, vec3 surfNormal, vec3 baseNormal)\n{\n    vec2 dSTdx = dFdx(v_Texcoord);\n    vec2 dSTdy = dFdy(v_Texcoord);\n\n    float Hll = bumpScale * texture2D(bumpMap, v_Texcoord).x;\n    float dHx = bumpScale * texture2D(bumpMap, v_Texcoord + dSTdx).x - Hll;\n    float dHy = bumpScale * texture2D(bumpMap, v_Texcoord + dSTdy).x - Hll;\n\n    vec3 vSigmaX = dFdx(surfPos);\n    vec3 vSigmaY = dFdy(surfPos);\n    vec3 vN = surfNormal;\n\n    vec3 R1 = cross(vSigmaY, vN);\n    vec3 R2 = cross(vN, vSigmaX);\n\n    float fDet = dot(vSigmaX, R1);\n\n    vec3 vGrad = sign(fDet) * (dHx * R1 + dHy * R2);\n    return normalize(abs(fDet) * baseNormal - vGrad);\n\n}\n#endif\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\n#ifdef AMBIENT_LIGHT_COUNT\n@import qtek.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import qtek.header.ambient_sh_light\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import qtek.header.directional_light\n#endif\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\n@import qtek.util.srgb\n\n@import ecgl.wireframe.common.fragmentHeader\n\n@import qtek.plugin.compute_shadow_map\n\nvoid main()\n{\n#ifdef SRGB_DECODE\n    gl_FragColor = sRGBToLinear(color);\n#else\n    gl_FragColor = color;\n#endif\n\n#ifdef VERTEX_COLOR\n    // PENDING\n    #ifdef SRGB_DECODE\n    gl_FragColor *= sRGBToLinear(v_Color);\n    #else\n    gl_FragColor *= v_Color;\n    #endif\n#endif\n\n    vec4 albedoTexel = vec4(1.0);\n#ifdef DIFFUSEMAP_ENABLED\n    albedoTexel = texture2D(diffuseMap, v_Texcoord);\n    #ifdef SRGB_DECODE\n    albedoTexel = sRGBToLinear(albedoTexel);\n    #endif\n#endif\n\n#if (LAYER_DIFFUSEMAP_COUNT > 0)\n    for (int _idx_ = 0; _idx_ < LAYER_DIFFUSEMAP_COUNT; _idx_++) {{\n        vec4 texel2 = texture2D(layerDiffuseMap[_idx_], v_Texcoord);\n        #ifdef SRGB_DECODE\n        texel2 = sRGBToLinear(texel2);\n        #endif\n        // source-over blend\n        albedoTexel.rgb = mix(albedoTexel.rgb, texel2.rgb, texel2.a);\n        albedoTexel.a = texel2.a + (1.0 - texel2.a) * albedoTexel.a;\n    }}\n#endif\n    gl_FragColor *= albedoTexel;\n\n    vec3 N = v_Normal;\n#ifdef DOUBLE_SIDE\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 V = normalize(eyePos - v_WorldPosition);\n\n    if (dot(N, V) < 0.0) {\n        N = -N;\n    }\n#endif\n\n    float ambientFactor = 1.0;\n\n#ifdef BUMPMAP_ENABLED\n    N = perturbNormalArb(v_WorldPosition, v_Normal, N);\n    // PENDING\n    ambientFactor = dot(v_Normal, N);\n#endif\n\n    vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\n\n#ifdef AMBIENT_LIGHT_COUNT\n    for(int i = 0; i < AMBIENT_LIGHT_COUNT; i++)\n    {\n        // Multiply a dot factor to make sure the bump detail can be seen\n        // in the dark side\n        diffuseColor += ambientLightColor[i] * ambientFactor;\n    }\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n    for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n    {{\n        diffuseColor += calcAmbientSHLight(_idx_, N) * ambientSHLightColor[_idx_];\n    }}\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n    }\n#endif\n    for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\n    {\n        vec3 lightDirection = -directionalLightDirection[i];\n        vec3 lightColor = directionalLightColor[i];\n\n        float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n        if (shadowEnabled)\n        {\n            shadowContrib = shadowContribsDir[i];\n        }\n#endif\n\n        float ndl = dot(N, normalize(lightDirection)) * shadowContrib;\n\n        diffuseColor += lightColor * clamp(ndl, 0.0, 1.0);\n    }\n#endif\n\n    gl_FragColor.rgb *= diffuseColor;\n\n#if (LAYER_EMISSIVEMAP_COUNT > 0)\n    for (int _idx_ = 0; _idx_ < LAYER_EMISSIVEMAP_COUNT; _idx_++) {{\n        vec4 texel2 = texture2D(layerEmissiveMap[_idx_], v_Texcoord) * emissionIntensity;\n        gl_FragColor.rgb += texel2.rgb;\n    }}\n#endif\n\n    @import ecgl.wireframe.common.fragmentMain\n}\n\n@end"},function(t,e){t.exports="@export ecgl.realistic.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\n\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\n\n@import ecgl.wireframe.common.vertexHeader\n\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\n\nvarying vec2 v_Texcoord;\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nvoid main()\n{\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n\n    v_Normal = normalize((worldInverseTranspose * vec4(normal, 0.0)).xyz);\n    v_WorldPosition = (world * vec4(position, 1.0)).xyz;\n\n#ifdef VERTEX_COLOR\n    v_Color = a_Color;\n#endif\n\n    @import ecgl.wireframe.common.vertexMain\n\n}\n\n@end\n\n\n@export ecgl.realistic.fragment\n\n#define LAYER_DIFFUSEMAP_COUNT 0\n#define LAYER_EMISSIVEMAP_COUNT 0\n#define PI 3.14159265358979\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\n#ifdef DIFFUSEMAP_ENABLED\nuniform sampler2D diffuseMap;\n#endif\n\n#if (LAYER_DIFFUSEMAP_COUNT > 0)\nuniform sampler2D layerDiffuseMap[LAYER_DIFFUSEMAP_COUNT];\n#endif\n\n#if (LAYER_EMISSIVEMAP_COUNT > 0)\nuniform sampler2D layerEmissiveMap[LAYER_EMISSIVEMAP_COUNT];\n#endif\n\nuniform float emissionIntensity: 1.0;\n\n#ifdef BUMPMAP_ENABLED\nuniform sampler2D bumpMap;\nuniform float bumpScale : 1.0;\n// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n//  http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\nvec3 perturbNormalArb(vec3 surfPos, vec3 surfNormal, vec3 baseNormal)\n{\n    vec2 dSTdx = dFdx(v_Texcoord);\n    vec2 dSTdy = dFdy(v_Texcoord);\n\n    float Hll = bumpScale * texture2D(bumpMap, v_Texcoord).x;\n    float dHx = bumpScale * texture2D(bumpMap, v_Texcoord + dSTdx).x - Hll;\n    float dHy = bumpScale * texture2D(bumpMap, v_Texcoord + dSTdy).x - Hll;\n\n    vec3 vSigmaX = dFdx(surfPos);\n    vec3 vSigmaY = dFdy(surfPos);\n    vec3 vN = surfNormal;\n\n    vec3 R1 = cross(vSigmaY, vN);\n    vec3 R2 = cross(vN, vSigmaX);\n\n    float fDet = dot(vSigmaX, R1);\n\n    vec3 vGrad = sign(fDet) * (dHx * R1 + dHy * R2);\n    return normalize(abs(fDet) * baseNormal - vGrad);\n\n}\n#endif\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nuniform float metalness : 0.0;\nuniform float roughness : 0.5;\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\n#ifdef AMBIENT_LIGHT_COUNT\n@import qtek.header.ambient_light\n#endif\n\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import qtek.header.ambient_sh_light\n#endif\n\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n@import qtek.header.ambient_cubemap_light\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import qtek.header.directional_light\n#endif\n\n@import qtek.util.srgb\n\n@import qtek.util.rgbm\n\n@import ecgl.wireframe.common.fragmentHeader\n\n@import qtek.plugin.compute_shadow_map\n\n// Fresnel\nvec3 F_Schlick(float ndv, vec3 spec) {\n    return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\n\nfloat D_Phong(float g, float ndh) {\n    // from black ops 2\n    float a = pow(8192.0, g);\n    return (a + 2.0) / 8.0 * pow(ndh, a);\n}\nvoid main()\n{\n    vec4 albedoColor = color;\n\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 V = normalize(eyePos - v_WorldPosition);\n#ifdef VERTEX_COLOR\n    // PENDING\n    #ifdef SRGB_DECODE\n    albedoColor *= sRGBToLinear(v_Color);\n    #else\n    albedoColor *= v_Color;\n    #endif\n#endif\n\n    vec4 albedoTexel = vec4(1.0);\n#ifdef DIFFUSEMAP_ENABLED\n    albedoTexel = texture2D(diffuseMap, v_Texcoord);\n    #ifdef SRGB_DECODE\n    albedoTexel = sRGBToLinear(albedoTexel);\n    #endif\n#endif\n\n#if (LAYER_DIFFUSEMAP_COUNT > 0)\n    for (int _idx_ = 0; _idx_ < LAYER_DIFFUSEMAP_COUNT; _idx_++) {{\n        vec4 texel2 = texture2D(layerDiffuseMap[_idx_], v_Texcoord);\n        #ifdef SRGB_DECODE\n        texel2 = sRGBToLinear(texel2);\n        #endif\n        // source-over blend\n        albedoTexel.rgb = mix(albedoTexel.rgb, texel2.rgb, texel2.a);\n        albedoTexel.a = texel2.a + (1.0 - texel2.a) * albedoTexel.a;\n    }}\n#endif\n    albedoColor *= albedoTexel;\n\n    vec3 baseColor = albedoColor.rgb;\n    albedoColor.rgb = baseColor * (1.0 - metalness);\n    vec3 specFactor = mix(vec3(0.04), baseColor, metalness);\n\n    float g = 1.0 - roughness;\n\n    vec3 N = v_Normal;\n\n#ifdef DOUBLE_SIDE\n    if (dot(N, V) < 0.0) {\n        N = -N;\n    }\n#endif\n\n    float ambientFactor = 1.0;\n\n#ifdef BUMPMAP_ENABLED\n    N = perturbNormalArb(v_WorldPosition, v_Normal, N);\n    // PENDING\n    ambientFactor = dot(v_Normal, N);\n#endif\n\n    vec3 diffuseTerm = vec3(0.0);\n    vec3 specularTerm = vec3(0.0);\n\n    float ndv = clamp(dot(N, V), 0.0, 1.0);\n    vec3 fresnelTerm = F_Schlick(ndv, specFactor);\n\n#ifdef AMBIENT_LIGHT_COUNT\n    for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n    {{\n        // Multiply a dot factor to make sure the bump detail can be seen\n        // in the dark side\n        diffuseTerm += ambientLightColor[_idx_] * ambientFactor;\n    }}\n#endif\n\n#ifdef AMBIENT_SH_LIGHT_COUNT\n    for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n    {{\n        diffuseTerm += calcAmbientSHLight(_idx_, N) * ambientSHLightColor[_idx_];\n    }}\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n    }\n#endif\n    for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++)\n    {{\n        vec3 L = -directionalLightDirection[_idx_];\n        vec3 lc = directionalLightColor[_idx_];\n\n        vec3 H = normalize(L + V);\n        float ndl = clamp(dot(N, normalize(L)), 0.0, 1.0);\n        float ndh = clamp(dot(N, H), 0.0, 1.0);\n\n        float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n        if (shadowEnabled)\n        {\n            shadowContrib = shadowContribsDir[_idx_];\n        }\n#endif\n\n        vec3 li = lc * ndl * shadowContrib;\n\n        diffuseTerm += li;\n        specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n    }}\n#endif\n\n\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n    vec3 L = reflect(-V, N);\n    float rough2 = clamp(1.0 - g, 0.0, 1.0);\n    // FIXME fixed maxMipmapLevel ?\n    float bias2 = rough2 * 5.0;\n    // One brdf lookup is enough\n    vec2 brdfParam2 = texture2D(ambientCubemapLightBRDFLookup[0], vec2(rough2, ndv)).xy;\n    vec3 envWeight2 = specFactor * brdfParam2.x + brdfParam2.y;\n    vec3 envTexel2;\n    for(int _idx_ = 0; _idx_ < AMBIENT_CUBEMAP_LIGHT_COUNT; _idx_++)\n    {{\n        envTexel2 = RGBMDecode(textureCubeLodEXT(ambientCubemapLightCubemap[_idx_], L, bias2), 51.5);\n        // TODO mix ?\n        specularTerm += ambientCubemapLightColor[_idx_] * envTexel2 * envWeight2;\n    }}\n#endif\n\n    gl_FragColor.rgb = albedoColor.rgb * diffuseTerm + specularTerm;\n    gl_FragColor.a = albedoColor.a;\n\n    #ifdef SRGB_ENCODE\n    gl_FragColor = linearTosRGB(gl_FragColor);\n    #endif\n\n#if (LAYER_EMISSIVEMAP_COUNT > 0)\n    for (int _idx_ = 0; _idx_ < LAYER_EMISSIVEMAP_COUNT; _idx_++)\n    {{\n        // PENDING sRGB ?\n        vec4 texel2 = texture2D(layerEmissiveMap[_idx_], v_Texcoord) * emissionIntensity;\n        gl_FragColor.rgb += texel2.rgb;\n    }}\n#endif\n\n    @import ecgl.wireframe.common.fragmentMain\n}\n\n@end"},function(t,e,r){var n=r(1);r(90),r(89),r(88),n.registerVisual(n.util.curry(r(21),"bar3D")),n.registerProcessor(function(t,e){t.eachSeriesByType("bar3d",function(t){var e=t.getData();e.filterSelf(function(t){return e.hasValue(t)})})})},function(t,e,r){var n=r(1),i=n.extendSeriesModel({type:"series.bar3D",dependencies:["globe"],visualColorAccessPath:"itemStyle.color",getInitialData:function(t,e){var r=n.helper.completeDimensions(["x","y","z"],t.data),i=new n.List(r,this);return i.initData(t.data),i},getFormattedLabel:function(t,e,r,n){var a=i.superCall(this,"getFormattedLabel",t,e,r,n);return null==a&&(a=this.getData().get("z",t)),a},defaultOption:{coordinateSystem:"cartesian3D",globeIndex:0,xAxis3DIndex:0,yAxis3DIndex:0,zAxis3DIndex:0,zlevel:-10,bevelSize:0,bevelSmoothness:2,onGridPlane:"xy",shading:"color",realisticMaterial:{roughness:.5,metalness:0},minHeight:0,maxHeight:100,itemStyle:{opacity:1},label:{show:!1,distance:2},emphasis:{label:{show:!0,textStyle:{fontSize:20,borderWidth:4,borderColor:"#fff"}}}}});t.exports=i},function(t,e,r){function n(t){var e=a.createShader("ecgl."+t);return e.define("both","VERTEX_COLOR"),e}var i=r(1),a=r(4),o=r(11),s=r(137),u=r(51),c=r(2).vec3;t.exports=i.extendChartView({type:"bar3D",__ecgl__:!0,init:function(t,e){this.groupGL=new a.Node;var r=new a.Mesh({geometry:new s,renderOrder:10}),i={};a.COMMON_SHADERS.forEach(function(t){i[t]=new a.Material({shader:n(t)})}),this._materials=i,this._barMesh=r,this._api=e,this._labelsBuilder=new u(1024,1024,e);var o=this;this._labelsBuilder.getLabelPosition=function(t,e,r){if(o._data){var n=o._data.getItemLayout(t),i=n[0],a=n[1],s=n[2][1];return c.scaleAndAdd([],i,a,r+s)}return[0,0]},this._labelsBuilder.getMesh().renderOrder=11},render:function(t,e,r){this.groupGL.add(this._barMesh),this.groupGL.add(this._labelsBuilder.getMesh());var n=t.coordinateSystem;if(this._doRender(t,r),n&&n.viewGL){n.viewGL.add(this.groupGL);var i=n.viewGL.isLinearSpace()?"define":"unDefine";this._barMesh.material.shader[i]("fragment","SRGB_DECODE")}this._data=t.getData(),this._labelsBuilder.updateData(this._data),this._labelsBuilder.updateLabels()},_doRender:function(t,e){var r=t.getData(),n=t.get("shading"),i="color"!==n,s=this,u=this._barMesh;if(this._materials[n]?u.material=this._materials[n]:u.material=this._materials.lambert,"realistic"===n){var c=t.getModel("realisticMaterial"),l={roughness:o.firstNotNull(c.get("roughness"),.5),metalness:c.get("metalness")||0};u.material.set(l)}u.geometry.enableNormal=i,u.geometry.resetOffset();var h=t.get("bevelSize"),f=t.get("bevelSmoothness");u.geometry.bevelSegments=f,u.geometry.bevelSize=h;var d=[],_=new Float32Array(4*r.count()),p=0,m=0,v=!1;r.each(function(t){if(r.hasValue(t)){var e=r.getItemVisual(t,"color"),n=r.getItemVisual(t,"opacity");null==n&&(n=1),a.parseColor(e,d),d[3]*=n,_[p++]=d[0],_[p++]=d[1],_[p++]=d[2],_[p++]=d[3],d[3]>0&&m++,d[3]<.99&&(v=!0)}}),u.geometry.setBarCount(m);var g=r.getLayout("orient"),y=this._barIndexOfData=new Int32Array(r.count()),m=0;r.each(function(t){if(!r.hasValue(t))return void(y[t]=-1);var e=r.getItemLayout(t),n=e[0],i=e[1],a=e[2],o=4*t;d[0]=_[o++],d[1]=_[o++],d[2]=_[o++],d[3]=_[o++],d[3]>0&&s._barMesh.geometry.addBar(n,i,g,a,d,t),y[t]=m++}),u.geometry.dirty(),u.geometry.updateBoundingBox();var x=u.material;x.transparent=v,x.depthMask=!v,u.geometry.sortTriangles=v,u.off("mouseover"),u.off("mouseout"),u.on("mouseover",function(t){var e=u.geometry.getDataIndexOfVertex(t.triangle[0]);this._highlight(e),this._labelsBuilder.updateLabels([e])},this),u.on("mouseout",function(t){var e=u.geometry.getDataIndexOfVertex(t.triangle[0]);this._downplay(e),t.relatedTarget||this._labelsBuilder.updateLabels()},this)},_highlight:function(t){var e=this._data;if(e){var r=this._barIndexOfData[t];if(!(r<0)){var n=e.getItemModel(t),o=n.getModel("emphasis.itemStyle"),s=o.get("color"),u=o.get("opacity");if(null==s){var c=e.getItemVisual(t,"color");s=i.color.lift(c,-.4)}null==u&&(u=e.getItemVisual(t,"opacity"));var l=a.parseColor(s);l[3]*=u,this._barMesh.geometry.setColor(r,l),this._api.getZr().refresh()}}},_downplay:function(t){var e=this._data;if(e){var r=this._barIndexOfData[t];if(!(r<0)){var n=e.getItemVisual(t,"color"),i=e.getItemVisual(t,"opacity"),o=a.parseColor(n);o[3]*=i,this._barMesh.geometry.setColor(r,o),this._api.getZr().refresh()}}},remove:function(){this.groupGL.removeAll()},dispose:function(){this.groupGL.removeAll()}})},function(t,e,r){function n(t,e){var r=t.getData(),n=r.getDataExtent("z",!0),i=[t.get("minHeight"),t.get("maxHeight")],u=Math.abs(n[1]-n[0])<1e-10,c=t.get("barSize");if(null==c){var l=e.radius*Math.PI*2;c=[l/720,l/720]}else a.util.isArray(c)||(c=[c,c]);r.each(["x","y","z"],function(t,o,l,h){var f=u?i[1]:a.number.linearMap(l,n,i),d=e.dataToPoint([t,o,0]),_=e.dataToPoint([t,o,f]),p=s.sub([],_,d),m=[c[0],f,c[1]];r.setItemLayout(h,[d,p,m])}),r.setLayout("orient",o.UP._array)}function i(t,e){var r=t.getData(),n=(t.get("onGridPlane"),t.get("barSize"));if(null==n){var i,o,u=e.size,c=e.getAxis("x"),l=e.getAxis("y");i="category"===c.type?.7*c.getBandWidth():.6*Math.round(u[0]/Math.sqrt(r.count())),o="category"===l.type?.7*l.getBandWidth():.6*Math.round(u[1]/Math.sqrt(r.count())),n=[i,o]}else a.util.isArray(n)||(n=[n,n]);var h=[0,1,0];r.each(["x","y","z"],function(t,i,a,o){var u=e.dataToPoint([t,i,0]),c=e.dataToPoint([t,i,a]),l=s.dist(u,c);0===Math.abs(l)&&(l=.1);var f=[n[0],l,n[1]];r.setItemLayout(o,[u,h,f])}),r.setLayout("orient",[1,0,0])}var a=r(1),o=r(3),s=r(2).vec3;a.registerLayout(function(t,e){t.eachSeriesByType("bar3D",function(t){var e=t.coordinateSystem;e&&"globe"===e.type?n(t,e):e&&"cartesian3D"===e.type&&i(t,e)})})},function(t,e,r){var n=r(1);r(96),r(95),r(94),n.registerVisual(n.util.curry(r(21),"lines3D"))},function(t,e,r){var n=r(13),i=r(2).vec3,a=n.derive(function(){return{attributes:{p0:new n.Attribute("p0","float",3,""),p1:new n.Attribute("p1","float",3,""),p2:new n.Attribute("p2","float",3,""),p3:new n.Attribute("p3","float",3,""),offset:new n.Attribute("offset","float",1,""),size:new n.Attribute("size","float",1,""),color:new n.Attribute("color","float",4,"COLOR")},mainAttribute:"p0",scale:1,_offset:0}},{reset:function(){this._offset=0},setVertexCount:function(t){if(this.vertexCount!==t)for(var e in this.attributes)this.attributes[e].init(t)},getPointVertexCount:function(t,e,r,n){var a=i.dist(t,e)+i.dist(r,e)+i.dist(n,r),o=Math.max(Math.min(Math.round((a+1)/this.scale*40),15),5);return o},addPoint:function(t,e,r,n,i,a){for(var o=this.attributes,s=Math.random(),u=this.getPointVertexCount(t,e,r,n),c=0;c<u;c++)o.p0.set(this._offset,t),o.p1.set(this._offset,e),o.p2.set(this._offset,r),o.p3.set(this._offset,n),o.offset.set(this._offset,s),o.size.set(this._offset,i*c/u),o.color.set(this._offset++,a),s+=.004}});t.exports=a},function(t,e,r){var n=(r(1),r(4)),i=r(57),a=r(92);n.Shader.import(r(79)),t.exports=n.Mesh.extend(function(){var t=new n.Material({shader:new n.Shader({vertex:n.Shader.source("ecgl.curveAnimatingPoints.vertex"),fragment:n.Shader.source("ecgl.curveAnimatingPoints.fragment")}),transparent:!0,depthMask:!1});t.shader.enableTexture("sprite");var e=new n.Texture2D({image:document.createElement("canvas")});return t.set("sprite",e),{geometry:new a({dynamic:!0}),material:t,mode:n.Mesh.POINTS,_spriteTexture:e}},{setData:function(t,e){var r=t.hostModel,a=this.geometry,o=r.getModel("effect"),s=o.get("symbol"),u=o.get("symbolSize")*e.getDevicePixelRatio();i.createSymbolSprite(s,u,{fill:"#fff"},this._spriteTexture.image),this._spriteTexture.dirty(),a.reset();var c=0;t.each(function(e){var r=t.getItemLayout(e);c+=a.getPointVertexCount(r[0],r[1],r[2],r[3])}),a.setVertexCount(c);var l=[];t.each(function(e){var r=t.getItemLayout(e),i=t.getItemVisual(e,"opacity"),o=t.getItemVisual(e,"color");null==i&&(i=1),l=n.parseColor(o,l),l[3]*=i,a.addPoint(r[0],r[1],r[2],r[3],u,l)}),a.dirty()},setScale:function(t){this.geometry.scale=t},setAnimationPercent:function(t){this.material.set("percent",t)}})},function(t,e,r){var n=r(1);n.extendSeriesModel({type:"series.lines3D",dependencies:["globe"],visualColorAccessPath:"lineStyle.color",getInitialData:function(t,e){var r=new n.List(["value"],this);return r.hasItemOption=!1,r.initData(t.data,[],function(t,e,n,i){if(t instanceof Array)return NaN;r.hasItemOption=!0;var a=t.value;return null!=a?a instanceof Array?a[i]:a:void 0}),r},defaultOption:{coordinateSystem:"globe",globeIndex:0,geo3DIndex:0,zlevel:-10,polyline:!1,effect:{symbol:"circle",show:!1,period:4,symbolSize:4},blendMode:"source-over",lineStyle:{width:1,opacity:.5}}})},function(t,e,r){function n(t){return null!=t.radius?t.radius:null!=t.size?Math.max(t.size[0],t.size[1],t.size[2]):100}var i=r(1),a=r(4),o=r(38),s=r(93);a.Shader.import(r(37)),t.exports=i.extendChartView({type:"lines3D",__ecgl__:!0,init:function(t,e){this.groupGL=new a.Node,this._nativeLinesMaterial=new a.Material({shader:a.createShader("ecgl.lines3D"),transparent:!0}),this._projectedLinesMaterial=new a.Material({shader:a.createShader("ecgl.meshLines3D"),transparent:!0}),this._linesMesh=new a.Mesh({geometry:new o({dynamic:!0}),ignorePicking:!0}),this._curveAnimatingPointsMesh=new s},render:function(t,e,r){this.groupGL.add(this._linesMesh);var i=t.coordinateSystem,o=t.getData();if(i&&i.viewGL){var s=i.viewGL;s.add(this.groupGL),"cubicBezier"===o.getLayout("lineType")&&this._generateBezierCurves(t,e,r)}var u=this._curveAnimatingPointsMesh;if(u.stopAnimation(),t.get("effect.show")){this.groupGL.add(u),u.setScale(n(i)),u.setData(o,r);var c=1e3*t.get("effect.period"),l=u.__percent?-(c*u.__percent):0;u.__percent=0,u.animate("",{loop:!0}).when(c,{__percent:1}).delay(l).during(function(){u.setAnimationPercent(u.__percent)}).start()}else this.groupGL.remove(u);this._linesMesh.material.blend=this._curveAnimatingPointsMesh.material.blend="lighter"===t.get("blendMode")?a.additiveBlend:null},_generateBezierCurves:function(t,e,r){var i=t.getData(),o=t.coordinateSystem,s=this._linesMesh.geometry;s.expandLine=!0;var u=n(o);s.segmentScale=u/20;var c="lineStyle.width".split("."),l=r.getDevicePixelRatio(),h=!0,f=0;i.each(function(t){var e=i.getItemModel(t),r=e.get(c);null==r&&(r=1),i.setItemVisual(t,"lineWidth",r),f=Math.max(r,f)});var h=f*l<=1;s.useNativeLine=h;var d=0,_=0;i.each(function(t){var e=i.getItemLayout(t);d+=s.getCubicCurveVertexCount(e[0],e[1],e[2],e[3]),_+=s.getCubicCurveTriangleCount(e[0],e[1],e[2],e[3])}),this._linesMesh.material=h?this._nativeLinesMaterial:this._projectedLinesMaterial,this._linesMesh.mode=h?a.Mesh.LINES:a.Mesh.TRIANGLES,s.setVertexCount(d),s.setTriangleCount(_),s.resetOffset();var p=[];i.each(function(t){var e=i.getItemLayout(t),r=i.getItemVisual(t,"color"),n=i.getItemVisual(t,"opacity"),o=i.getItemVisual(t,"lineWidth")*l;null==n&&(n=1),p=a.parseColor(r,p),p[3]*=n,s.addCubicCurve(e[0],e[1],e[2],e[3],p,o)}),s.dirty()},remove:function(){this.groupGL.removeAll()},dispose:function(){this.groupGL.removeAll()}})},function(t,e,r){function n(t,e){var r=t.getData(),n=t.get("polyline"),i=s.create(),a=s.create(),o=s.create(),u=s.create();r.setLayout("lineType",n?"polyline":"cubicBezier"),r.each(function(t){var n=r.getItemModel(t),c=n.option instanceof Array?n.option:n.getShallow("coords",!0);if(!(c instanceof Array&&c.length>0&&c[0]instanceof Array))throw new Error("Invalid coords "+JSON.stringify(c)+". Lines must have 2d coords array in data item.");var l=[],h=l[0]=s.create(),f=l[1]=s.create(),d=l[2]=s.create(),_=l[3]=s.create();e.dataToPoint(c[0],h),e.dataToPoint(c[1],_),s.normalize(i,h),s.sub(a,_,h),s.normalize(a,a),s.cross(o,a,i),s.normalize(o,o),s.cross(a,i,o),s.add(f,i,a),s.normalize(f,f),s.normalize(i,_),s.sub(a,h,_),s.normalize(a,a),s.cross(o,a,i),s.normalize(o,o),s.cross(a,i,o),s.add(d,i,a),s.normalize(d,d),s.add(u,h,_),s.normalize(u,u);var p=s.dot(h,u),m=s.dot(u,f),v=(e.radius-p)/m*2;s.scaleAndAdd(f,h,f,v),s.scaleAndAdd(d,_,d,v),r.setItemLayout(t,l)})}function i(t,e){var r=t.getData(),n=t.get("polyline");r.setLayout("lineType",n?"polyline":"cubicBezier");var i=[];r.each(function(t){var n=r.getItemModel(t),a=n.option instanceof Array?n.option:n.getShallow("coords",!0);if(!(a instanceof Array&&a.length>0&&a[0]instanceof Array))throw new Error("Invalid coords "+JSON.stringify(a)+". Lines must have 2d coords array in data item.");var o=[],u=o[0]=s.create(),c=o[1]=s.create(),l=o[2]=s.create(),h=o[3]=s.create();e.dataToPoint(a[0],u),e.dataToPoint(a[1],h);var f=s.dist(u,h);s.lerp(c,u,h,.3),s.lerp(l,u,h,.3),s.set(i,0,1,0),s.scaleAndAdd(c,c,i,Math.min(.1*f,10)),s.scaleAndAdd(l,l,i,Math.min(.1*f,10)),r.setItemLayout(t,o)})}var a=r(1),o=r(2),s=o.vec3;a.registerLayout(function(t,e){t.eachSeriesByType("lines3D",function(t){var e=t.coordinateSystem;"globe"===e.type?n(t,e):"geo3D"===e.type&&i(t,e)})})},function(t,e,r){var n=r(1);r(98),r(99),r(53),n.registerVisual(n.util.curry(r(21),"map3D")),n.registerAction({type:"map3DChangeView",event:"map3dviewchanged",update:"none"
},function(t,e){e.eachComponent({mainType:"series",subType:"map3D",query:t},function(e){e.setView(t)})})},function(t,e,r){var n=r(1),i=r(32),a=r(31),o=r(30),s=r(52),u=n.extendSeriesModel({type:"series.map3D",layoutMode:"box",coordinateSystem:null,getInitialData:function(t){t.data=this.getFilledRegions(t.data,t.map);var e=n.helper.completeDimensions(["value"],t.data),r=new n.List(e,this);r.initData(t.data);var i={};return r.each(function(t){var e=r.getName(t),n=r.getItemModel(t);i[e]=n}),this._regionModelMap=i,r},getRegionModel:function(t){return this._regionModelMap[t]||new n.Model(null,this)},getFormattedLabel:function(t,e){var r=u.superCall(this,"getFormattedLabel",t,e);return null==r&&(r=this.getData().getName(t)),r},defaultOption:{data:null}});n.util.merge(u.prototype,s),n.util.merge(u.prototype,i),n.util.merge(u.prototype,a),n.util.merge(u.prototype,o),t.exports=u},function(t,e,r){var n=r(1),i=r(4),a=r(34),o=r(29),s=r(50);t.exports=n.extendChartView({type:"map3D",__ecgl__:!0,init:function(t,e){this._geo3DBuilder=new s(e),this.groupGL=new i.Node,this._lightHelper=new o(this.groupGL),this._control=new a({zr:e.getZr()}),this._control.init()},render:function(t,e,r){this.groupGL.add(this._geo3DBuilder.rootNode);var n=t.coordinateSystem;if(n&&n.viewGL){n.viewGL.add(this.groupGL);var i=this._control;i.setCamera(n.viewGL.camera);var a=t.getModel("viewControl");i.setFromViewControlModel(a,0),this._lightHelper.updateLight(t),n.viewGL.setPostEffect(t.getModel("postEffect")),n.viewGL.setTemporalSuperSampling(t.getModel("temporalSuperSampling")),this._geo3DBuilder.update(t,e,r),i.off("update"),i.on("update",function(){r.dispatchAction({type:"map3DChangeView",alpha:i.getAlpha(),beta:i.getBeta(),distance:i.getDistance(),from:this.uid,map3DId:t.id})})}},afterRender:function(t,e,r,n){var i=n.renderer;this._lightHelper.updateAmbientCubemap(i,t,r)},dispose:function(){this.groupGL.removeAll()}})},function(t,e,r){var n=r(1);r(101),r(102),n.registerVisual(n.util.curry(r(59),"scatter3D","circle",null)),n.registerVisual(n.util.curry(r(21),"scatter3D")),n.registerLayout(function(t,e){t.eachSeriesByType("scatter3D",function(t){var e=t.getData(),r=t.coordinateSystem;if(r){var n=r.dimensions;if(n.length<3)return;var i=new Float32Array(3*e.count()),a=[],o=[];"globe"===r.type,"geo3D"===r.type;r&&e.each(n,function(t,e,n,s){a[0]=t,a[1]=e,a[2]=n,r.dataToPoint(a,o),i[3*s]=o[0],i[3*s+1]=o[1],i[3*s+2]=o[2]}),e.setLayout("points",i)}})})},function(t,e,r){var n=r(1);n.extendSeriesModel({type:"series.scatter3D",dependencies:["globe","grid3D","geo3D"],visualColorAccessPath:"itemStyle.color",getInitialData:function(t,e){var r=n.helper.completeDimensions(["x","y","z"],t.data),i=new n.List(r,this);return i.initData(t.data),i},defaultOption:{coordinateSystem:"cartesian3D",zlevel:-10,xAxis3DIndex:0,yAxis3DIndex:0,zAxis3DIndex:0,globeIndex:0,symbol:"circle",symbolSize:10,blendMode:"source-over",itemStyle:{opacity:.8}}})},function(t,e,r){var n=r(1),i=r(4),a=r(49);n.extendChartView({type:"scatter3D",__ecgl__:!0,init:function(t,e){this.groupGL=new i.Node;var r=new a(!1);this._pointsBuilder=r},render:function(t,e,r){this.groupGL.add(this._pointsBuilder.rootNode);var n=t.coordinateSystem;n&&n.viewGL&&n.viewGL.add(this.groupGL),this._pointsBuilder.update(t,e,r)},updateLayout:function(t,e,r){this._pointsBuilder.updateLayout(t,e,r)},dispose:function(){this.groupGL.removeAll()},remove:function(){this.groupGL.removeAll()}})},function(t,e,r){var n=r(1);r(104),r(105),n.registerVisual(n.util.curry(r(59),"scatterGL","circle",null)),n.registerVisual(n.util.curry(r(21),"scatterGL")),n.registerLayout(function(t,e){t.eachSeriesByType("scatterGL",function(t){var e=t.getData(),r=t.coordinateSystem;if(r){var n=r.dimensions,i=new Float32Array(2*e.count());if(1===n.length)e.each(n[0],function(t,e){var n=r.dataToPoint(t);i[2*e]=n[0],i[2*e+1]=n[1]});else if(2===n.length){var a=[];e.each(n,function(t,e,n){a[0]=t,a[1]=e;var o=r.dataToPoint(a);i[2*n]=o[0],i[2*n+1]=o[1]})}e.setLayout("points",i)}})})},function(t,e,r){var n=r(1);n.extendSeriesModel({type:"series.scatterGL",dependencies:["grid","polar","geo","singleAxis"],visualColorAccessPath:"itemStyle.color",getInitialData:function(){return n.helper.createList(this)},defaultOption:{coordinateSystem:"cartesian2d",zlevel:10,symbol:"circle",symbolSize:10,blendMode:"source-over",itemStyle:{opacity:.8}}})},function(t,e,r){var n=r(1),i=r(4),a=r(33),o=r(49);n.extendChartView({type:"scatterGL",__ecgl__:!0,init:function(t,e){this.groupGL=new i.Node,this.viewGL=new a("orthographic"),this.viewGL.add(this.groupGL),this._pointsBuilder=new o(!0)},render:function(t,e,r){this.groupGL.add(this._pointsBuilder.rootNode),this._updateCamera(r.getWidth(),r.getHeight(),r.getDevicePixelRatio()),this._pointsBuilder.update(t,e,r)},updateLayout:function(t,e,r){this._pointsBuilder.updateLayout(t,e,r)},_updateCamera:function(t,e,r){this.viewGL.setViewport(0,0,t,e,r);var n=this.viewGL.camera;n.left=n.top=0,n.bottom=e,n.right=t,n.near=0,n.far=100},dispose:function(){this.groupGL.removeAll()},remove:function(){this.groupGL.removeAll()}})},function(t,e,r){var n=r(1);r(107),r(108),r(109),n.registerVisual(n.util.curry(r(21),"surface"))},function(t,e,r){var n=r(1);n.extendSeriesModel({type:"series.surface",dependencies:["globe","grid3D","geo3D"],visualColorAccessPath:"areaStyle.color",getInitialData:function(t,e){function r(t){return!(isNaN(t.min)||isNaN(t.max)||isNaN(t.step))}function i(t){var e=n.number.getPrecisionSafe;return Math.max(e(t.min),e(t.max),e(t.step))+1}var a=t.data;if(!a)if(a=[],t.parametric){var o=t.parametricSurfaceEquation||{},s=o.u||{},u=o.v||{};["u","v"].forEach(function(t){!r(o[t])}),["x","y","z"].forEach(function(t){"function"!=typeof o[t]});for(var c=i(s),l=i(u),h=u.min;h<u.max+.999*u.step;h+=u.step)for(var f=s.min;f<s.max+.999*s.step;f+=s.step){var d=n.number.round(Math.min(f,s.max),c),_=n.number.round(Math.min(h,u.max),l),p=o.x(d,_),m=o.y(d,_),v=o.z(d,_);a.push([p,m,v,d,_])}}else{var g=t.surfaceEquation||{},y=g.x||{},x=g.y||{};if(["x","y"].forEach(function(t){!r(g[t])}),"function"!=typeof g.z)return;for(var T=i(y),b=i(x),m=x.min;m<x.max+.999*x.step;m+=x.step)for(var p=y.min;p<y.max+.999*y.step;p+=y.step){var E=n.number.round(Math.min(p,y.max),T),w=n.number.round(Math.min(m,x.max),b),v=g.z(E,w);a.push([E,w,v])}}var S=["x","y","z"];t.parametric&&S.push("u","v"),S=n.helper.completeDimensions(S,t.data);var A=new n.List(S,this);return A.initData(a),A},defaultOption:{coordinateSystem:"cartesian3D",zlevel:-10,xAxis3DIndex:0,yAxis3DIndex:0,zAxis3DIndex:0,shading:"lambert",realisticMaterial:{roughness:.5,metalness:0},parametric:!1,wireframe:{show:!0,lineWidth:1,lineColor:"#222"},surfaceEquation:{x:{min:-1,max:1,step:.1},y:{min:-1,max:1,step:.1},z:null},parametricSurfaceEquation:{u:{min:-1,max:1,step:.1},v:{min:-1,max:1,step:.1},x:null,y:null,z:null},areaStyle:{}}})},function(t,e,r){function n(t){return isNaN(t[0])||isNaN(t[1])||isNaN(t[2])}var i=r(1),a=r(4),o=r(11),s=r(2).vec3,u=r(39);i.extendChartView({type:"surface",__ecgl__:!0,init:function(t,e){this.groupGL=new a.Node;var r={};a.COMMON_SHADERS.forEach(function(t){r[t]=new a.Material({shader:a.createShader("ecgl."+t)}),r[t].shader.define("both","VERTEX_COLOR"),r[t].shader.define("fragment","DOUBLE_SIDE")}),this._materials=r;var n=new a.Mesh({geometry:new a.Geometry({dynamic:!0,sortTriangles:!0}),material:r.lambert,culling:!1,renderOrder:10});n.geometry.createAttribute("barycentric","float",4,null),i.util.extend(n.geometry,u),this._surfaceMesh=n},render:function(t,e,r){this.groupGL.add(this._surfaceMesh);var n=t.coordinateSystem,i=t.get("shading"),s=t.getData();if(this._materials[i]?this._surfaceMesh.material=this._materials[i]:this._surfaceMesh.material=this._materials.lambert,"realistic"===i){var u=t.getModel("realisticMaterial");this._surfaceMesh.material.set({roughness:o.firstNotNull(u.get("roughness"),.5),metalness:u.get("metalness")||0})}if(n&&n.viewGL){n.viewGL.add(this.groupGL);var c=n.viewGL.isLinearSpace()?"define":"unDefine";this._surfaceMesh.material.shader[c]("fragment","SRGB_DECODE")}var l=t.get("parametric"),h=this._getDataShape(s,l),f=t.getModel("wireframe"),d=f.get("lineWidth"),_=f.get("show")&&d>0;this._updateSurfaceMesh(this._surfaceMesh,t,h,_);var p=this._surfaceMesh.material;_?(p.shader.define("WIREFRAME_QUAD"),p.set("wireframeLineWidth",d),p.set("wireframeLineColor",a.parseColor(f.get("lineColor")).slice(0,3))):p.shader.unDefine("WIREFRAME_QUAD")},_updateSurfaceMesh:function(t,e,r,i){var o=t.geometry,u=e.getData(),c=u.getLayout("points"),l=0;u.each(function(t){u.hasValue(t)||l++});var h=l||i,f=o.attributes.position,d=o.attributes.normal,_=o.attributes.barycentric,p=o.attributes.color,m=r.row,v=r.column,g=e.get("shading"),y="color"!==g;if(h){var x=(m-1)*(v-1)*4;f.init(x),i&&_.init(x)}else f.value=new Float32Array(c);p.init(o.vertexCount);var T=[0,3,1,1,3,2],b=[[1,1,0,0],[0,0,1,1],[1,0,0,1],[1,1,0,0]],E=o.indices=new(o.vertexCount>65535?Uint32Array:Uint16Array)((m-1)*(v-1)*6),w=function(t,e,r){r[1]=t*v+e,r[0]=t*v+e+1,r[3]=(t+1)*v+e+1,r[2]=(t+1)*v+e},S=!1;if(h){var A=[],M=[],C=0;y&&d.init(o.vertexCount);for(var L=[[],[],[]],R=[],N=[],D=s.create(),I=function(t,e,r){var n=3*e;return r[0]=t[n],r[1]=t[n+1],r[2]=t[n+2],r},O=new Float32Array(c.length),P=new Float32Array(c.length/3*4),F=0;F<u.count();F++)if(u.hasValue(F)){var B=a.parseColor(u.getItemVisual(F,"color")),U=u.getItemVisual(F,"opacity");B[3]*=U,B[3]<.99&&(S=!0);for(var k=0;k<4;k++)P[4*F+k]=B[k]}for(var z=[1e7,1e7,1e7],F=0;F<m-1;F++)for(var G=0;G<v-1;G++){var V=F*(v-1)+G,H=4*V;w(F,G,A);for(var W=!1,k=0;k<4;k++)I(c,A[k],M),n(M)&&(W=!0);for(var k=0;k<4;k++)W?f.set(H+k,z):(I(c,A[k],M),f.set(H+k,M)),i&&_.set(H+k,b[k]);for(var k=0;k<6;k++)E[C++]=T[k]+H;if(y&&!W)for(var k=0;k<2;k++){for(var q=3*k,X=0;X<3;X++){var j=A[T[q]+X];I(c,j,L[X])}s.sub(R,L[0],L[1]),s.sub(N,L[1],L[2]),s.cross(D,R,N);for(var X=0;X<3;X++){var Y=3*A[T[q]+X];O[Y]=O[Y]+D[0],O[Y+1]=O[Y+1]+D[1],O[Y+2]=O[Y+2]+D[2]}}}if(y)for(var F=0;F<O.length/3;F++)I(O,F,D),s.normalize(D,D),O[3*F]=D[0],O[3*F+1]=D[1],O[3*F+2]=D[2];for(var B=[],F=0;F<m-1;F++)for(var G=0;G<v-1;G++){var V=F*(v-1)+G,H=4*V;w(F,G,A);for(var k=0;k<4;k++){for(var X=0;X<4;X++)B[X]=P[4*A[k]+X];p.set(H+k,B),y&&(I(O,A[k],D),d.set(H+k,D))}V++}}else{for(var F=0;F<u.count();F++){var B=a.parseColor(u.getItemVisual(F,"color")),U=u.getItemVisual(F,"opacity");B[3]*=U,B[3]<.99&&(S=!0),p.set(F,B)}for(var A=[],Z=0,F=0;F<m-1;F++)for(var G=0;G<v-1;G++){w(F,G,A);for(var k=0;k<6;k++)E[Z++]=A[T[k]]}y&&o.generateVertexNormals()}o.updateBoundingBox(),o.dirty(),t.material.transparent=S,t.material.depthMask=!S},_getDataShape:function(t,e){for(var r=-(1/0),n=0,i=0,a=0,o=e?"u":"x",s=0;s<t.count();s++){var u=t.get(o,s);u<r&&(a=i,i=0,n++),r=u,i++}return{row:n+1,column:i}},dispose:function(){this.groupGL.removeAll()},remove:function(){this.groupGL.removeAll()}})},function(t,e,r){var n=r(1);n.registerLayout(function(t,e){t.eachSeriesByType("surface",function(t){var e=t.coordinateSystem;!e||"cartesian3D"!==e.type;var r=t.getData(),n=new Float32Array(3*r.count()),i=[NaN,NaN,NaN];e&&"cartesian3D"===e.type&&r.each(["x","y","z"],function(t,a,o,s){var u;u=r.hasValue(s)?e.dataToPoint([t,a,o]):i,n[3*s]=u[0],n[3*s+1]=u[1],n[3*s+2]=u[2]}),r.setLayout("points",n)})})},function(t,e,r){r(111),r(112),r(53),echarts.registerAction({type:"geo3DChangeView",event:"geo3dviewchanged",update:"none"},function(t,e){e.eachComponent({mainType:"geo3D",query:t},function(e){e.setView(t)})})},function(t,e,r){var n=r(1),i=r(32),a=r(31),o=r(30),s=r(52),u=n.extendComponentModel({type:"geo3D",layoutMode:"box",coordinateSystem:null,optionUpdated:function(){var t=this.option;t.regions=this.getFilledRegions(t.regions,t.map);var e=n.helper.completeDimensions(["value"],t.data),r=new n.List(e,this);r.initData(t.regions);var i={};r.each(function(t){var e=r.getName(t),n=r.getItemModel(t);i[e]=n}),this._regionModelMap=i,this._data=r},getData:function(){return this._data},getRegionModel:function(t){return this._regionModelMap[t]||new n.Model(null,this)},getFormattedLabel:function(t,e){var r=this._data.getName(t),n=this.getRegionModel(r),i=n.get("label."+e+".formatter"),a={name:r};if("function"==typeof i)return a.status=e,i(a);if("string"==typeof i){var o=a.seriesName;return i.replace("{a}",null!=o?o:"")}return r},defaultOption:{regions:[]}});n.util.merge(u.prototype,s),n.util.merge(u.prototype,i),n.util.merge(u.prototype,a),n.util.merge(u.prototype,o),t.exports=u},function(t,e,r){var n=r(50),i=r(1),a=r(4),o=r(34),s=r(29);t.exports=i.extendComponentView({type:"geo3D",__ecgl__:!0,init:function(t,e){this._geo3DBuilder=new n(e),this.groupGL=new a.Node,this._lightHelper=new s(this.groupGL),this._control=new o({zr:e.getZr()}),this._control.init()},render:function(t,e,r){this.groupGL.add(this._geo3DBuilder.rootNode);var n=t.coordinateSystem;if(n&&n.viewGL){n.viewGL.add(this.groupGL);var i=this._control;i.setCamera(n.viewGL.camera),i.setViewGL(n.viewGL);var a=t.getModel("viewControl");i.setFromViewControlModel(a,0),this._lightHelper.updateLight(t),n.viewGL.setPostEffect(t.getModel("postEffect")),n.viewGL.setTemporalSuperSampling(t.getModel("temporalSuperSampling")),this._geo3DBuilder.update(t,e,r),i.off("update"),i.on("update",function(){r.dispatchAction({type:"geo3DChangeView",alpha:i.getAlpha(),beta:i.getBeta(),distance:i.getDistance(),from:this.uid,geo3DId:t.id})})}},afterRender:function(t,e,r,n){var i=n.renderer;this._lightHelper.updateAmbientCubemap(i,t,r)}})},function(t,e,r){var n=r(1);r(114),r(115),r(124),n.registerAction({type:"globeChangeView",event:"globeviewchanged",update:"none"},function(t,e){e.eachComponent({mainType:"globe",query:t},function(e){e.setView(t)})})},function(t,e,r){function n(t,e){t.id=t.id||t.name||e+""}var i=r(1),a=r(32),o=r(31),s=r(30),u=i.extendComponentModel({type:"globe",layoutMode:"box",coordinateSystem:null,init:function(){u.superApply(this,"init",arguments),i.util.each(this.option.layers,function(t,e){i.util.merge(t,this.defaultLayerOption),n(t)},this)},mergeOption:function(t){function e(t){return i.util.reduce(t,function(t,e,r){return n(e,r),t[e.id]=e,t},{})}var r=this.option.layers;if(this.option.layers=null,u.superApply(this,"mergeOption",arguments),r&&r.length){var a=e(t.layers),o=e(r);for(var s in a)o[s]?i.util.merge(o[s],a[s],!0):r.push(t.layers[s]);this.option.layers=r}i.util.each(this.option.layers,function(t){i.util.merge(t,this.defaultLayerOption)},this)},defaultLayerOption:{show:!0,type:"overlay"},defaultOption:{show:!0,zlevel:-10,flat:!1,left:0,top:0,width:"100%",height:"100%",environmentTexture:"",baseTexture:"",heightTexture:"",displacementTexture:"",displacementScale:0,displacementQuality:"medium",globeRadius:100,shading:"color",realisticMaterial:{roughness:.5,metalness:0},light:{main:{time:""},emission:{intensity:1}},viewControl:{autoRotate:!0},layers:[]}});i.util.merge(u.prototype,a),i.util.merge(u.prototype,o),i.util.merge(u.prototype,s),t.exports=u},function(t,e,r){var n=r(1),i=r(4),a=r(34),o=r(29),s=r(141),u=r(11);t.exports=n.extendComponentView({type:"globe",__ecgl__:!0,_displacementScale:0,init:function(t,e){this.groupGL=new i.Node;var r={};i.COMMON_SHADERS.forEach(function(t){r[t]=new i.Material({shader:i.createShader("ecgl."+t)})}),this._materials=r,this._sphereGeometry=new i.SphereGeometry({widthSegments:200,heightSegments:100,dynamic:!0}),this._overlayGeometry=new i.SphereGeometry({widthSegments:80,heightSegments:40}),this._planeGeometry=new i.PlaneGeometry,this._earthMesh=new i.Mesh({name:"earth"}),this._lightHelper=new o(this.groupGL),this.groupGL.add(this._earthMesh),this._control=new a({zr:e.getZr()}),this._control.init(),this._layerMeshes={}},render:function(t,e,r){var n=t.coordinateSystem,i=t.get("shading");n.viewGL.add(this.groupGL),n.viewGL.setPostEffect(t.getModel("postEffect")),n.viewGL.setTemporalSuperSampling(t.getModel("temporalSuperSampling"));var a=this._earthMesh;if(a.geometry=this._sphereGeometry,this._materials[i]?a.material=this._materials[i]:a.material=this._materials.lambert,"realistic"===i){var o=t.getModel("realisticMaterial");a.material.set({roughness:u.firstNotNull(o.get("roughness"),.5),metalness:o.get("metalness")||0})}a.scale.set(n.radius,n.radius,n.radius),a.setTextureImage("diffuseMap",t.get("baseTexture"),r,{flipY:!1,anisotropic:8}),a.setTextureImage("bumpMap",t.get("heightTexture"),r,{flipY:!1,anisotropic:8}),a.material.shader[t.get("postEffect.enable")?"define":"unDefine"]("fragment","SRGB_DECODE"),this._updateLight(t,r),this._displaceVertices(t,r),this._updateViewControl(t,r),this._updateLayers(t,r)},afterRender:function(t,e,r,n){var i=n.renderer;this._lightHelper.updateAmbientCubemap(i,t,r)},_updateLayers:function(t,e){var r=t.coordinateSystem,a=t.get("layers"),o=r.radius,s=[],u=[];n.util.each(a,function(t){var a=new n.Model(t),c=a.get("type"),l=i.loadTexture(a.get("texture"),e,{flipY:!1,anisotropic:8});if(l.surface&&l.surface.attachToMesh(this._earthMesh),"blend"===c){var h=a.get("blendTo");"emission"===h?u.push(l):s.push(l)}else{var f=a.get("id"),d=this._layerMeshes[f];d||(d=this._layerMeshes[f]=new i.Mesh({geometry:this._overlayGeometry}));var _=a.get("shading");"lambert"===_?(d.material=d.__lambertMaterial||new i.Material({shader:i.createShader("ecgl.lambert"),transparent:!0,depthMask:!1}),d.__lambertMaterial=d.material):(d.material=d.__colorMaterial||new i.Material({shader:i.createShader("ecgl.color"),transparent:!0,depthMask:!1}),d.__colorMaterial=d.material),d.material.shader.enableTexture("diffuseMap");var p=a.get("distance"),m=o+(null==p?r.radius/100:p);d.scale.set(m,m,m),o=m;var v=this._blankTexture||(this._blankTexture=i.createBlankTexture("rgba(255, 255, 255, 0)"));d.material.set("diffuseMap",v),i.loadTexture(a.get("texture"),e,{flipY:!1,anisotropic:8},function(t){t.surface&&t.surface.attachToMesh(d),d.material.set("diffuseMap",t),e.getZr().refresh()}),a.get("show")?this.groupGL.add(d):this.groupGL.remove(d)}},this);var c=this._earthMesh.material;c.shader.define("fragment","LAYER_DIFFUSEMAP_COUNT",s.length),c.shader.define("fragment","LAYER_EMISSIVEMAP_COUNT",u.length),c.set("layerDiffuseMap",s),c.set("layerEmissiveMap",u)},_updateViewControl:function(t,e){function r(){return{type:"globeChangeView",alpha:o.getAlpha(),beta:o.getBeta(),distance:o.getDistance()-n.radius,from:this.uid,globeId:t.id}}var n=t.coordinateSystem,i=t.getModel("viewControl"),a=n.viewGL.camera,o=this._control;o.setCamera(a),o.setViewGL(n.viewGL),o.setFromViewControlModel(i,n.radius),o.off("update"),o.on("update",function(){e.dispatchAction(r())})},_displaceVertices:function(t,e){var r=t.get("displacementTexture")||t.get("heightTexture"),n=t.get("displacementScale"),a=t.get("displacementQuality");if(r&&"none"!==r||(n=0),n!==this._displacementScale||a!==this._displacementQuality){this._displacementScale=n,this._displacementQuality=a;var o=this._sphereGeometry,s={low:100,medium:200,high:400,ultra:800}[a]||200,u=s/2;o.widthSegments!==s&&(o.widthSegments=s,o.heightSegments=u,o.build());var c;if(i.isImage(r))c=r,this._doDisplaceVertices(o,c,n);else{c=new Image;var l=this;c.onload=function(){l._doDisplaceVertices(o,c,n)},c.src=r}}},_doDisplaceVertices:function(t,e,r){var n=t.attributes.position.value,i=t.attributes.texcoord0.value,a=t.__originalPosition;a&&a.length===n.length||(a=new Float32Array(n.length),a.set(n),t.__originalPosition=a);var o=document.createElement("canvas"),s=o.getContext("2d"),u=e.width,c=e.height;o.width=u,o.height=c,s.drawImage(e,0,0,u,c);for(var l=s.getImageData(0,0,u,c).data,h=0;h<t.vertexCount;h++){var f=3*h,d=2*h,_=a[f+1],p=a[f+2],m=a[f+3],v=i[d++],g=i[d++],y=Math.round(v*(u-1)),x=Math.round(g*(c-1)),T=x*u+y,b=l[4*T]/255*r;n[f+1]=_+_*b,n[f+2]=p+p*b,n[f+3]=m+m*b}t.generateVertexNormals(),t.dirty(),t.updateBoundingBox()},_updateLight:function(t,e){var r=this._earthMesh;this._lightHelper.updateLight(t);var n=this._lightHelper.mainLight,i=t.get("light.main.time")||new Date,a=s.getPosition(Date.parse(i),0,0),o=Math.cos(a.altitude);n.position.y=-o*Math.cos(a.azimuth),n.position.x=Math.sin(a.altitude),n.position.z=o*Math.sin(a.azimuth),n.lookAt(r.getWorldPosition()),r.material.set("emissionIntensity",t.get("light.emission.intensity"))},dispose:function(t,e){this.groupGL.removeAll(),this._control.dispose()}})},function(t,e,r){r(117),r(118),r(119),r(127);var n=r(1);n.registerAction({type:"grid3DChangeView",event:"grid3dviewchanged",update:"none"},function(t,e){e.eachComponent({mainType:"grid3D",query:t},function(e){e.setView(t)})})},function(t,e,r){function n(t,e){return e.type||(e.data?"category":"value")}var i=r(1),a=r(121),o=i.extendComponentModel({type:"cartesian3DAxis",axis:null,getCoordSysModel:function(){return this.ecModel.queryComponents({mainType:"grid3D",index:this.option.gridIndex,id:this.option.gridId})[0]}});i.helper.mixinAxisModelCommonMethods(o),a("x",o,n,{name:"X"}),a("y",o,n,{name:"Y"}),a("z",o,n,{name:"Z"})},function(t,e,r){var n=r(1),i=r(32),a=r(31),o=r(30),s=n.extendComponentModel({type:"grid3D",dependencies:["xAxis3D","yAxis3D","zAxis3D"],defaultOption:{zlevel:-10,left:0,top:0,width:"100%",height:"100%",boxWidth:100,boxHeight:100,boxDepth:100,light:{main:{alpha:30,beta:40},ambient:{intensity:.4}},viewControl:{alpha:30,beta:40,autoRotate:!1,distance:200,minDistance:40,maxDistance:400}}});n.util.merge(s.prototype,i),n.util.merge(s.prototype,a),n.util.merge(s.prototype,o),t.exports=s},function(t,e,r){function n(t,e,r){switch(e.rotation.identity(),t){case"px":e.position.set(r[0]/2,0,0),e.rotation.rotateY(Math.PI/2);break;case"nx":e.position.set(-r[0]/2,0,0),e.rotation.rotateY(-Math.PI/2);break;case"py":e.position.set(0,r[1]/2,0),e.rotation.rotateX(-Math.PI/2);break;case"ny":e.position.set(0,-r[1]/2,0),e.rotation.rotateX(Math.PI/2);break;case"pz":e.position.set(0,0,r[2]/2);break;case"nz":e.position.set(0,0,-r[2]/2),e.rotation.rotateY(Math.PI)}}function i(t,e,r){var n,i=t.scale;return"ordinal"===i.type&&("function"==typeof r?(n=i.getTicks()[e],!r(n,i.getLabel(n))):e%(r+1))}var a=r(1),o=r(4),s=r(34),u=r(38),c=r(138),l=r(11),h=r(55),f=r(56),d=r(29),_=["x","y","z"];o.Shader.import(r(37)),_.forEach(function(t){a.extendComponentView({type:t+"Axis3D"})});var p={x:0,y:2,z:1};t.exports=a.extendComponentView({type:"grid3D",__ecgl__:!0,init:function(t,e){var r=new o.Material({shader:o.createShader("ecgl.color"),depthMask:!1,transparent:!0}),n=new o.Material({shader:o.createShader("ecgl.meshLines3D"),depthMask:!1,transparent:!0});r.shader.define("fragment","DOUBLE_SIDE"),r.shader.define("both","VERTEX_COLOR"),this.groupGL=new o.Node,this._control=new s({zr:e.getZr()}),this._control.init(),this._faces=[["y","z","nx"],["y","z","px"],["x","y","ny"],["x","y","py"],["x","z","nz"],["x","z","pz"]].map(function(t){var e=new o.Node;this.groupGL.add(e);var i=new o.Mesh({geometry:new u({useNativeLine:!1,dynamic:!0}),material:n,ignorePicking:!0,renderOrder:1}),a=new o.Mesh({geometry:new c,material:r,culling:!1,ignorePicking:!0,renderOrder:0});return e.add(a),e.add(i),{node:e,linesMesh:i,quadsMesh:a,dims:t}},this),this._axes=_.map(function(t){var e=new o.Mesh({geometry:new u({useNativeLine:!1,dynamic:!0}),material:n,ignorePicking:!0,renderOrder:2}),r=new f;r.material.depthMask=!1;var i=new o.Node;return i.add(e),i.add(r),this.groupGL.add(i),{dim:t,node:i,linesMesh:e,labelsMesh:r,axisLineCoords:null,labelElements:[]}},this),this._labelTextureSurface=new h(512,512,e.getDevicePixelRatio()),this._labelTextureSurface.onupdate=function(){e.getZr().refresh()},this._lightHelper=new d(this.groupGL)},render:function(t,e,r){this._model=t,this._api=r;var i=t.coordinateSystem;i.viewGL.add(this.groupGL);var a=this._control;a.setCamera(i.viewGL.camera),a.setViewGL(i.viewGL);var o=t.getModel("viewControl");a.setFromViewControlModel(o,0),this._labelTextureSurface.clear(),this._faces.forEach(function(a){this._renderFace(a,t,e,r),n(a.dims[2],a.node,i.size)},this),this._axes.forEach(function(e){var n=i.getAxis(e.dim);this._renderAxisLine(e,n,t,r)},this),a.off("update"),a.on("update",this._onCameraChange.bind(this,t,r),this),this._lightHelper.updateLight(t),i.viewGL.setPostEffect(t.getModel("postEffect")),i.viewGL.setTemporalSuperSampling(t.getModel("temporalSuperSampling"))},afterRender:function(t,e,r,n){var i=n.renderer;this._lightHelper.updateAmbientCubemap(i,t,r)},_onCameraChange:function(t,e){this._updateFaceVisibility(),this._updateAxisLinePosition();var r=this._control;e.dispatchAction({type:"grid3DChangeView",alpha:r.getAlpha(),beta:r.getBeta(),distance:r.getDistance(),from:this.uid,grid3DId:t.id})},_updateFaceVisibility:function(){var t=this._control.getCamera(),e=new o.Vector3;t.update();for(var r=0;r<this._faces.length/2;r++){for(var n=[],i=0;i<2;i++){var a=this._faces[2*r+i];a.node.getWorldPosition(e),e.transformMat4(t.viewMatrix),n[i]=e.z}var s=n[0]>n[1]?0:1,u=this._faces[2*r+s],c=this._faces[2*r+1-s];u.node.invisible=!0,c.node.invisible=!1}},_updateAxisLinePosition:function(){var t=this._model.coordinateSystem,e=t.size,r=this._axes[0].node,n=this._axes[1].node,i=this._axes[2].node,a=this._faces,o=(a[4].node.invisible?-e[2]:e[2])/2,s=(a[2].node.invisible?e[1]:-e[1])/2,u=(a[0].node.invisible?-e[0]:e[0])/2,c=(a[2].node.invisible?e[1]:-e[1])/2,l=(a[0].node.invisible?e[0]:-e[0])/2,h=(a[4].node.invisible?-e[2]:e[2])/2;r.rotation.identity(),n.rotation.identity(),i.rotation.identity(),a[4].node.invisible&&r.rotation.rotateX(Math.PI),a[0].node.invisible&&n.rotation.rotateZ(Math.PI),a[4].node.invisible&&i.rotation.rotateY(Math.PI),r.position.set(0,s,o),n.position.set(u,c,0),i.position.set(l,0,h),r.update(),n.update(),i.update(),this._updateAxisLabelAlign()},_updateAxisLabelAlign:function(){var t=this._control.getCamera(),e=[new o.Vector4,new o.Vector4],r=new o.Vector4;this.groupGL.getWorldPosition(r),r.w=1,r.transformMat4(t.viewMatrix).transformMat4(t.projectionMatrix),r.x/=r.w,r.y/=r.w,this._axes.forEach(function(n){for(var i=n.axisLineCoords,a=n.labelsMesh.geometry,o=0;o<e.length;o++)e[o].setArray(i[o]),e[o].w=1,e[o].transformMat4(n.node.worldTransform).transformMat4(t.viewMatrix).transformMat4(t.projectionMatrix),e[o].x/=e[o].w,e[o].y/=e[o].w;var s,u,c=e[1].x-e[0].x,l=e[1].y-e[0].y,h=(e[1].x+e[0].x)/2,f=(e[1].y+e[0].y)/2;Math.abs(l/c)<.5?(s="center",u=f>r.y?"bottom":"top"):(u="middle",s=h>r.x?"left":"right");for(var d=this._api.getDevicePixelRatio(),o=0;o<n.labelElements.length;o++){var _=n.labelElements[o],p=_.getBoundingRect();a.setSpriteAlign(o,[p.width*d,p.height*d],s,u)}var m=n.nameLabelElement,p=m.getBoundingRect();a.setSpriteAlign(m.__idx,[p.width*d,p.height*d],s,u),a.dirty()},this)},_renderFace:function(t,e,r,n){var i=e.coordinateSystem,a=[i.getAxis(t.dims[0]),i.getAxis(t.dims[1])],o=t.linesMesh.geometry,s=t.quadsMesh.geometry;o.convertToDynamicArray(!0),s.convertToDynamicArray(!0),this._renderSplitLines(o,a,e,n),this._renderSplitAreas(s,a,e,n),o.convertToTypedArray(),s.convertToTypedArray()},_renderAxisLine:function(t,e,r,n){var s=t.linesMesh.geometry,u=t.labelsMesh.geometry;s.convertToDynamicArray(!0),u.convertToDynamicArray(!0);var c=e.model,h=e.getExtent(),f=n.getDevicePixelRatio();if(c.get("axisLine.show")){var d=c.getModel("axisLine.lineStyle"),_=[0,0,0],m=[0,0,0],v=p[e.dim];_[v]=h[0],m[v]=h[1],t.axisLineCoords=[_,m];var g=o.parseColor(d.get("color")),y=l.firstNotNull(d.get("width"),1),x=l.firstNotNull(d.get("opacity"),1);g[3]*=x,s.addLine(_,m,g,y*f)}var T={x:"y",y:"x",z:"y"};if(c.get("axisTick.show")){var b=c.getModel("axisTick"),E=b.getModel("lineStyle"),w=o.parseColor(l.firstNotNull(E.get("color"),c.get("axisLine.lineStyle.color"))),y=l.firstNotNull(E.get("width"),1);w[3]*=l.firstNotNull(E.get("opacity"),1);var S=e.getTicksCoords(),A=b.get("interval");null!=A&&"auto"!==A||(A=c.get("axisLabel.interval"));for(var M=b.get("length"),C=0;C<S.length;C++)if(!i(e,C,A)){var L=S[C],_=[0,0,0],m=[0,0,0],v=p[e.dim],R=p[T[e.dim]];_[v]=m[v]=L,m[R]=M,s.addLine(_,m,w,y*f)}}t.labelElements=[];var f=n.getDevicePixelRatio();if(c.get("axisLabel.show"))for(var N=c.getModel("axisLabel"),D=N.getModel("textStyle"),I=e.getLabelsCoords(),O=l.firstNotNull(D.get("color"),c.get("axisLine.lineStyle.color")),A=c.get("axisLabel.interval"),P=N.get("margin"),F=c.getFormattedLabels(),C=0;C<I.length;C++)if(!i(e,C,A)){var L=I[C],B=[0,0,0],v=p[e.dim],R=p[T[e.dim]];B[v]=B[v]=L,B[R]=P;var U=new a.graphic.Text({style:{text:F[C],fill:O,font:D.getFont(),textVerticalAlign:"top",textAlign:"left"}}),k=this._labelTextureSurface.add(U),z=U.getBoundingRect();u.addSprite(B,[z.width*f,z.height*f],k),t.labelElements.push(U)}if(c.get("name")){var G=c.getModel("nameTextStyle"),B=[0,0,0],v=p[e.dim],R=p[T[e.dim]],O=l.firstNotNull(G.get("color"),c.get("axisLine.lineStyle.color"));B[v]=B[v]=(h[0]+h[1])/2,B[R]=c.get("nameGap");var U=new a.graphic.Text({style:{text:c.get("name"),fill:O,font:G.getFont(),textVerticalAlign:"top",textAlign:"left"}}),k=this._labelTextureSurface.add(U),z=U.getBoundingRect();u.addSprite(B,[z.width*f,z.height*f],k),U.__idx=t.labelElements.length,t.nameLabelElement=U}t.labelsMesh.material.set("textureAtlas",this._labelTextureSurface.getTexture()),s.convertToTypedArray(),u.convertToTypedArray()},_renderSplitLines:function(t,e,r,n){var s=n.getDevicePixelRatio();e.forEach(function(r,n){var u=r.model,c=e[1-n].getExtent();if(!r.scale.isBlank()&&u.get("splitLine.show")){var h=u.getModel("splitLine"),f=h.getModel("lineStyle"),d=f.get("color"),_=l.firstNotNull(f.get("opacity"),1),p=l.firstNotNull(f.get("width"),1),m=h.get("interval");null!=m&&"auto"!==m||(m=u.get("axisLabel.interval")),d=a.util.isArray(d)?d:[d];for(var v=r.getTicksCoords(),g=0,y=0;y<v.length;y++)if(!i(r,y,m)){var x=v[y],T=o.parseColor(d[g%d.length]);T[3]*=_;var b=[0,0,0],E=[0,0,0];b[n]=E[n]=x,b[1-n]=c[0],E[1-n]=c[1],t.addLine(b,E,T,p*s),g++}}})},_renderSplitAreas:function(t,e,r,n){n.getDevicePixelRatio();e.forEach(function(r,n){var s=r.model,u=e[1-n].getExtent();if(!r.scale.isBlank()&&s.get("splitArea.show")){var c=s.getModel("splitArea"),h=c.getModel("areaStyle"),f=h.get("color"),d=l.firstNotNull(h.get("opacity"),1),_=c.get("interval");null!=_&&"auto"!==_||(_=s.get("axisLabel.interval")),f=a.util.isArray(f)?f:[f];for(var p=r.getTicksCoords(),m=0,v=[0,0,0],g=[0,0,0],y=0;y<p.length;y++){var x=p[y],T=[0,0,0],b=[0,0,0];if(T[n]=b[n]=x,T[1-n]=u[0],b[1-n]=u[1],0!==y){if(!i(r,y,_)){var E=o.parseColor(f[m%f.length]);E[3]*=d,t.addQuad([v,T,b,g],E),v=T,g=b,m++}}else v=T,g=b}}})},dispose:function(){this.groupGL.removeAll()}})},function(t,e,r){var n=r(1),i={show:!0,grid3DIndex:0,inverse:!1,name:"",nameLocation:"middle",nameRotate:null,nameTextStyle:{fontSize:16},nameGap:20,axisLine:{show:!0,lineStyle:{color:"#333",width:3,type:"solid"}},axisTick:{show:!0,inside:!1,length:3,lineStyle:{width:1}},axisLabel:{show:!0,inside:!1,rotate:0,margin:8,textStyle:{fontSize:12}},splitLine:{show:!0,lineStyle:{color:["#ccc"],width:1,type:"solid"}},splitArea:{show:!1,areaStyle:{color:["rgba(250,250,250,0.3)","rgba(200,200,200,0.3)"]}}},a=n.util.merge({boundaryGap:!0,splitLine:{show:!0},axisTick:{alignWithLabel:!1,interval:"auto"},axisLabel:{interval:"auto"}},i),o=n.util.merge({boundaryGap:[0,0],splitNumber:5},i),s=n.util.defaults({scale:!0,min:"dataMin",max:"dataMax"},o),u=n.util.defaults({logBase:10},o);u.scale=!0,t.exports={categoryAxis:a,valueAxis:o,timeAxis:s,logAxis:u}},function(t,e,r){var n=r(1),i=r(120),a=["value","category","time","log"];t.exports=function(t,e,r,o){n.util.each(a,function(a){e.extend({type:t+"Axis3D."+a,mergeDefaultAndTheme:function(e,i){var o=i.getTheme();n.util.merge(e,o.get(a+"Axis")),n.util.merge(e,this.getDefaultOption()),e.type=r(t,e)},defaultOption:n.util.merge(n.util.clone(i[a+"Axis"]),o||{},!0)})}),e.superClass.registerSubTypeDefaulter(t+"Axis",n.util.curry(r,t))}},function(t,e,r){function n(t,e,r,n,i){this.name=t,this.map=e,this.regions=[],this._nameCoordMap={},this.loadGeoJson(r,n,i),this.transform=s.create(),this.invTransform=s.create()}var i=r(1),a=r(2),o=a.vec3,s=a.mat4,u=[r(144),r(143)];n.prototype={constructor:n,type:"geo3D",dimensions:["lng","lat","alt"],loadGeoJson:function(t,e,r){try{this.regions=t?i.parseGeoJSON(t):[]}catch(t){throw"Invalid geoJson format\n"+t;
}e=e||{},r=r||{};for(var n=this.regions,a={},o=0;o<n.length;o++){var s=n[o].name;s=r[s]||s,n[o].name=s,a[s]=n[o],this.addGeoCoord(s,n[o].center);var c=e[s];c&&n[o].transformTo(c.left,c.top,c.width,c.height)}this._regionsMap=a,this._geoRect=null,u.forEach(function(t){t(this)},this)},getGeoBoundingRect:function(){if(this._geoRect)return this._geoRect;for(var t,e=this.regions,r=0;r<e.length;r++){var n=e[r].getBoundingRect();t=t||n.clone(),t.union(n)}return this._geoRect=t||new i.graphic.BoundingRect(0,0,0,0)},addGeoCoord:function(t,e){this._nameCoordMap[t]=e},getRegion:function(t){return this._regionsMap[t]},getRegionByCoord:function(t){for(var e=this.regions,r=0;r<e.length;r++)if(e[r].contain(t))return e[r]},setSize:function(t,e,r){this.size=[t,e,r];var n=this.getGeoBoundingRect(),i=t/n.width,a=-r/n.height,o=-t/2-n.x*i,u=r/2-n.y*a,c=[o,0,u],l=[i,1,a],h=this.transform;s.identity(h),s.translate(h,h,c),s.scale(h,h,l),s.invert(this.invTransform,h)},dataToPoint:function(t,e){return e=e||[],e[0]=t[0],e[2]=t[1],e[1]=t[2],isNaN(e[1])&&(e[1]=this.size[1]),o.transformMat4(e,e,this.transform),e},pointToData:function(t,e){return e=e||[],e[0]=t[0],e[1]=t[1],e[2]=t[2],o.transformMat4(e,e,this.invTransform),e}},t.exports=n},function(t,e,r){function n(t){this.radius=t||100,this.viewGL=null}var i=r(2),a=i.vec3;n.prototype={constructor:n,dimensions:["lng","lat","alt"],type:"globe",dataToPoint:function(t,e){var r=t[0],n=t[1],i=t[2]||0;r=r*Math.PI/180,n=n*Math.PI/180;var a=i+this.radius,o=Math.cos(n)*a;return e=e||[],e[0]=-o*Math.cos(r+Math.PI),e[1]=Math.sin(n)*a,e[2]=o*Math.sin(r+Math.PI),e},pointToData:function(t,e){var r=t[0],n=t[1],i=t[2],o=a.len(t);r/=o,n/=o,i/=o;var s=Math.asin(n),u=Math.atan2(i,-r);u<0&&(u=2*Math.PI+u);var c=180*s/Math.PI,l=180*u/Math.PI-180;return e=e||[],e[0]=l,e[1]=c,e[2]=o-this.radius,e}},t.exports=n},function(t,e,r){function n(t,e){var r=t.getBoxLayoutParams(),n=o.getLayoutRect(r,{width:e.getWidth(),height:e.getHeight()});n.y=e.getHeight()-n.y-n.height,this.viewGL.setViewport(n.x,n.y,n.width,n.height,e.getDevicePixelRatio()),this.radius=t.get("globeRadius")}var i=r(123),a=r(1),o=r(40),s=r(33),u=r(11),c={dimensions:i.prototype.dimensions,create:function(t,e){var r=[];return t.eachComponent("globe",function(t){t.__viewGL=t.__viewGL||new s;var a=new i;a.viewGL=t.__viewGL,t.coordinateSystem=a,r.push(a),a.resize=n,a.resize(t,e)}),t.eachSeries(function(e){if("globe"===e.get("coordinateSystem")){var r=e.getReferringComponents("globe")[0];if(r||(r=t.getComponent("globe")),!r)throw new Error('globe "'+u.firstNotNull(e.get("globe3DIndex"),e.get("globe3DId"),0)+'" not found');var n=r.coordinateSystem;e.coordinateSystem=n}}),r}};a.registerCoordinateSystem("globe",c),t.exports=c},function(t,e,r){function n(t,e,r){i.Axis.call(this,t,e,r)}var i=r(1);n.prototype={constructor:n},i.util.inherits(n,i.Axis),t.exports=n},function(t,e,r){function n(t){a.call(this,t),this.size=[0,0,0]}var i=r(1),a=r(142);n.prototype={constructor:n,type:"cartesian3D",dimensions:["x","y","z"],dataToPoint:function(t,e,r){return e=e||[],e[0]=this.getAxis("x").dataToCoord(t[0],r),e[2]=this.getAxis("y").dataToCoord(t[1],r),e[1]=this.getAxis("z").dataToCoord(t[2],r),e},pointToData:function(t,e,r){return e=e||[],e[0]=this.getAxis("x").coordToData(t[0],r),e[2]=this.getAxis("y").coordToData(t[1],r),e[1]=this.getAxis("z").coordToData(t[2],r),e}},i.util.inherits(n,a),t.exports=n},function(t,e,r){function n(t,e){var r=t.getBoxLayoutParams(),n=s.getLayoutRect(r,{width:e.getWidth(),height:e.getHeight()});n.y=e.getHeight()-n.y-n.height,this.viewGL.setViewport(n.x,n.y,n.width,n.height,e.getDevicePixelRatio());var i=t.get("boxWidth"),a=t.get("boxHeight"),o=t.get("boxDepth");this.getAxis("x").setExtent(-i/2,i/2),this.getAxis("y").setExtent(o/2,-o/2),this.getAxis("z").setExtent(-a/2,a/2),this.size=[i,a,o]}var i=r(126),a=r(125),o=r(1),s=r(40),u=r(33),c=(r(11),{dimensions:i.prototype.dimensions,create:function(t,e){function r(t,e,r){l[t][e]=l[t][e]||[1/0,-(1/0)],l[t][e][0]=Math.min(r[0],l[t][e][0]),l[t][e][1]=Math.max(r[1],l[t][e][1])}function s(t,e){return h.map(function(e){var r=t.getReferringComponents(e)[0];return r})}var c=[];t.eachComponent("grid3D",function(t){t.__viewGL=t.__viewGL||new u;var e=new i;e.viewGL=t.__viewGL,t.coordinateSystem=e,c.push(e),e.resize=n});var l={x:[],y:[],z:[]};t.eachSeries(function(t){if("cartesian3D"===t.get("coordinateSystem")){var e=t.getData();i.prototype.dimensions.forEach(function(n){var i=n+"Axis3D",a=t.getReferringComponents(i)[0];a&&r(n,a.componentIndex,e.getDataExtent(t.coordDimToDataDim(n)[0]))})}}),["xAxis3D","yAxis3D","zAxis3D"].forEach(function(e){t.eachComponent(e,function(t){var r=e.charAt(0),n=t.getReferringComponents("grid3D")[0],i=n.coordinateSystem,s=i.getAxis(r);if(!s){var u=o.helper.createScale(l[r][t.componentIndex]||[1/0,-(1/0)],t);s=new a(r,u),s.type=t.get("type");var c="category"===s.type;s.onBand=c&&t.get("boundaryGap"),s.inverse=t.get("inverse"),t.axis=s,s.model=t,i.addAxis(s)}})});var h=["xAxis3D","yAxis3D","zAxis3D"];return t.eachSeries(function(e){if("cartesian3D"===e.get("coordinateSystem")){var r=s(e,t),n=r[0].getCoordSysModel();r.forEach(function(t){t.getCoordSysModel()});var i=n.coordinateSystem;e.coordinateSystem=i}}),t.eachComponent("grid3D",function(t){t.coordinateSystem.resize(t,e)}),c}});o.registerCoordinateSystem("grid3D",c),t.exports=c},function(t,e,r){function n(t){var e=t.__zr;t.__zr=null,e&&t.removeAnimatorsFromZr&&t.removeAnimatorsFromZr(e)}function i(t){return t.__GUID__}function a(t,e,r){var n=0,i=[];for(var a in e)e[a].count?n++:i.push(e[a].target);for(var o=0;o<Math.min(n-r,i.length);o++)i[o].dispose(t)}function o(t,e){var r=i(e);t[r]=t[r]||{count:0,target:e},t[r].count++}var s=r(62),u=r(162),c=r(8),l=r(197),h=r(18),f=r(193),d=function(t,e){l.call(this),this.id=t,this.zr=e;try{this.renderer=new s({clearBit:0,devicePixelRatio:e.painter.dpr}),this.renderer.resize(e.painter.getWidth(),e.painter.getHeight())}catch(t){return this.renderer=null,this.dom=document.createElement("div"),this.dom.style.cssText="position:absolute; left: 0; top: 0; right: 0; bottom: 0;",this.dom.className="ecgl-nowebgl",this.dom.innerHTML="Sorry, your browser does support WebGL",void console.error(t)}this.dom=this.renderer.canvas;var r=this.dom.style;r.position="absolute",r.left="0",r.top="0",this.views=[],this._initHandlers(),this._viewsToDispose=[],this._accumulatingId=0};d.prototype._initHandlers=function(){this.on("click",this._clickHandler,this),this.on("mousedown",this._mouseDownHandler,this),this.on("mouseup",this._mouseUpHandler,this),this.on("mousemove",this._mouseMoveHandler,this),this._picking=new u({renderer:this.renderer})},d.prototype.addView=function(t){if(t.layer!==this){var e=this._viewsToDispose.indexOf(t);e>=0&&this._viewsToDispose.splice(e,1),this.views.push(t),t.layer=this;var r=this.zr;t.scene.traverse(function(t){t.__zr=r,t.addAnimatorsToZr&&t.addAnimatorsToZr(r)})}},d.prototype.removeView=function(t){if(t.layer===this){var e=this.views.indexOf(t);e>=0&&(this.views.splice(e,1),t.scene.traverse(n,this),t.layer=null,this._viewsToDispose.push(t))}},d.prototype.removeViewsAll=function(){this.views.forEach(function(t){t.scene.traverse(n,this),t.layer=null,this._viewsToDispose.push(t)},this),this.views.length=0},d.prototype.resize=function(t,e){var r=this.renderer;r.resize(t,e)},d.prototype.clear=function(){var t=this.renderer.gl;t.clearColor(0,0,0,0),t.clear(t.DEPTH_BUFFER_BIT|t.COLOR_BUFFER_BIT)},d.prototype.clearDepth=function(){var t=this.renderer.gl;t.clear(t.DEPTH_BUFFER_BIT)},d.prototype.clearColor=function(){var t=this.renderer.gl;t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT)},d.prototype.needsRefresh=function(){this.zr.refresh()},d.prototype.refresh=function(){for(var t=0;t<this.views.length;t++)this.views[t].prepareRender();this._doRender(!1),this._trackAndClean(),this._startAccumulating();for(var t=0;t<this._viewsToDispose.length;t++)this._viewsToDispose[t].dispose(this.renderer);this._viewsToDispose.length=0},d.prototype._doRender=function(t){this.clear(),this.renderer.saveViewport();for(var e=0;e<this.views.length;e++)this.views[e].render(this.renderer,t);this.renderer.restoreViewport()},d.prototype._stopAccumulating=function(){this._accumulatingId=0,clearTimeout(this._accumulatingTimeout)};var _=1;d.prototype._startAccumulating=function(){function t(n){if(e._accumulatingId&&n===e._accumulatingId){for(var i=!0,a=0;a<e.views.length;a++)i=e.views[a].isAccumulateFinished()&&r;i||(e._doRender(!0),f(function(){t(n)}))}}var e=this;this._stopAccumulating();for(var r=!1,n=0;n<this.views.length;n++)r=this.views[n].needsAccumulate()||r;r&&(this._accumulatingId=_++,this._accumulatingTimeout=setTimeout(function(){t(e._accumulatingId)},50))};var p=60,m=20,v=20;d.prototype._trackAndClean=function(){function t(t){for(var i=0;i<t.length;i++){var a=t[i],s=a.geometry,u=a.material,l=u.shader;o(n,s),o(e,l);for(var h in u.uniforms){var f=u.uniforms[h].value;if(f instanceof c)o(r,f);else if(f instanceof Array)for(var d=0;d<f.length;d++)f[d]instanceof c&&o(r,f[d])}}}var e=this._shadersMap=this._shadersMap||{},r=this._texturesMap=this._texturesMap||{},n=this._geometriesMap=this._geometriesMap||{};for(var i in e)e[i].count=0;for(var i in r)r[i].count=0;for(var i in n)n[i].count=0;for(var s=0;s<this.views.length;s++){var u=this.views[s],l=u.scene;t(l.opaqueQueue),t(l.transparentQueue);for(var h=0;h<l.lights.length;h++)l.lights[h].cubemap&&o(r,l.lights[h].cubemap)}var f=this.renderer.gl;a(f,e,p),a(f,r,v),a(f,n,m)},d.prototype.dispose=function(){this._stopAccumulating(),this.renderer.disposeScene(this.scene)},d.prototype.onmousedown=function(t){t=t.event;var e=this.pickObject(t.offsetX,t.offsetY);e&&this._dispatchEvent("mousedown",t,e)},d.prototype.onmousemove=function(t){t=t.event;var e=this.pickObject(t.offsetX,t.offsetY),r=e&&e.target,n=this._hovered;this._hovered=e,n&&r!==n.target&&(n.relatedTarget=r,this._dispatchEvent("mouseout",t,n)),e&&(this._dispatchEvent("mousemove",t,e),n&&r===n.target||this._dispatchEvent("mouseover",t,e))},d.prototype.onmouseup=function(t){t=t.event;var e=this.pickObject(t.offsetX,t.offsetY);e&&this._dispatchEvent("mouseup",t,e)},d.prototype.onclick=function(t){t=t.event;var e=this.pickObject(t.offsetX,t.offsetY);e&&this._dispatchEvent("click",t,e)},d.prototype.pickObject=function(t,e){for(var r=[],n=0;n<this.views.length;n++){var i=this.views[n];i.containPoint(t,e)&&(this._picking.scene=i.scene,this._picking.camera=i.camera,this._picking.pickAll(t,e,r))}return r.sort(function(t,e){return t.distance-e.distance}),r[0]},d.prototype._dispatchEvent=function(t,e,r){var n=r.target;for(r.cancelBubble=!1,r.event=e,r.type=t;n&&(n.trigger(t,r),n=n.getParent(),!r.cancelBubble););},h.inherits(d,l),t.exports=d},function(t,e,r){function n(t){throw new Error(t+" version is too old, needs "+l[t]+" or higher")}function i(t,e){t.replace(".","")-0<l[e].replace(".","")-0&&n(e),console.log("Loaded "+e+", version "+t)}function a(t){this._layers={},this._zr=t}var o={version:"1.0.0",dependencies:{echarts:"3.4.0",qtek:"0.3.0"}},s=r(1),u=r(189),c=r(128),l=o.dependencies;i(u,"qtek"),i(s.version,"echarts"),a.prototype.update=function(t,e){function r(t){var e=t.get("zlevel"),r=n._layers,a=r[e];if(!a){if(a=r[e]=new c("gl-"+e,i),i.painter.isSingleCanvas()){a.virtual=!0;var o=new s.graphic.Image({z:1e4,style:{image:a.renderer.canvas},silent:!0});a.__hostImage=o,i.add(o)}i.painter.insertLayer(e,a)}return a.__hostImage&&a.__hostImage.setStyle({width:a.renderer.getWidth(),height:a.renderer.getHeight()}),a}var n=this,i=e.getZr();for(var a in this._layers)this._layers[a].removeViewsAll();t.eachComponent(function(n,i){if("series"!==n){var a=e.getViewOfComponentModel(i),o=i.coordinateSystem;if(a.__ecgl__){var s;if(o){if(!o.viewGL)return void console.error("Can't find viewGL in coordinateSystem of component "+i.id);s=o.viewGL}else{if(!i.viewGL)return void console.error("Can't find viewGL of component "+i.id);s=o.viewGL}var s=o.viewGL,u=r(i);u.addView(s),a.afterRender&&a.afterRender(i,t,e,u)}}}),t.eachSeries(function(n){var i=e.getViewOfSeriesModel(n),a=n.coordinateSystem;if(i.__ecgl__){if(a&&!a.viewGL&&!i.viewGL)return void console.error("Can't find viewGL of series "+i.id);var o=a&&a.viewGL||i.viewGL,s=r(n);s.addView(o),i.afterRender&&i.afterRender(n,t,e,s);var u=n.get("silent");i.groupGL&&i.groupGL.traverse(function(t){t.isRenderable&&t.isRenderable()&&(t.ignorePicking=u)})}})},s.registerPostUpdate(function(t,e){var r=e.getZr(),n=r.__egl=r.__egl||new a(r);n.update(t,e)});r(7);t.exports=a},function(t,e,r){function n(){this._sourceTexture=new a({type:o.HALF_FLOAT}),this._depthTexture=new a({format:o.DEPTH_COMPONENT,type:o.UNSIGNED_INT}),this._framebuffer=new s,this._framebuffer.attach(this._sourceTexture),this._framebuffer.attach(this._depthTexture,s.DEPTH_ATTACHMENT);var t=new u;this._compositor=t.parse(l);var e=this._compositor.getNodeByName("source");e.texture=this._sourceTexture;var r=this._compositor.getNodeByName("coc");r.setParameter("depth",this._depthTexture),this._sourceNode=e,this._cocNode=r,this._compositeNode=this._compositor.getNodeByName("composite"),this._fxaaNode=this._compositor.getNodeByName("FXAA"),this._ssaoPass=new c({depthTexture:this._depthTexture})}var i=(r(63),r(7)),a=r(9),o=r(8),s=r(12),u=r(157),c=r(131),l=JSON.parse(r(81));i.import(r(166)),i.import(r(173)),i.import(r(174)),i.import(r(167)),i.import(r(169)),i.import(r(175)),i.import(r(171)),i.import(r(168)),i.import(r(172)),i.import(r(165)),i.import(r(170)),n.prototype.resize=function(t,e,r){r=r||1;var t=t*r,e=e*r,n=this._sourceTexture,i=this._depthTexture;n.width===t&&n.height===e||(n.width=t,n.height=e,n.dirty(),i.width=t,i.height=e,i.dirty())},n.prototype.updateSSAO=function(t,e,r){this._ssaoPass.update(t,e,r)},n.prototype.blendSSAO=function(t,e){this._ssaoPass.blend(t,e)},n.prototype.getSourceFrameBuffer=function(){return this._framebuffer},n.prototype.getSourceTexture=function(){return this._sourceTexture},n.prototype.disableSSAO=function(){this._sourceNode.texture=this._sourceTexture},n.prototype.enableSSAO=function(){this._sourceNode.texture=this._ssaoPass.getTargetTexture()},n.prototype.disableFXAA=function(){this._compositor.removeNode(this._fxaaNode),this._compositeNode.outputs&&(this._compositeNode.__outputs=this._compositeNode.outputs),this._compositeNode.outputs=null},n.prototype.enableFXAA=function(){this._compositor.addNode(this._fxaaNode),this._compositeNode.__outputs&&(this._compositeNode.outputs=this._compositeNode.__outputs)},n.prototype.enableBloom=function(){this._compositeNode.inputs.bloom="bloom_composite"},n.prototype.disableBloom=function(){this._compositeNode.inputs.bloom=null},n.prototype.enableDOF=function(){this._compositeNode.inputs.texture="dof_composite"},n.prototype.disableDOF=function(){this._compositeNode.inputs.texture="source"},n.prototype.setBloomIntensity=function(t){this._compositeNode.setParameter("bloom",t)},n.prototype.setSSAORadius=function(t){this._ssaoPass.setParameter("radius",t)},n.prototype.setSSAOIntensity=function(t){this._ssaoPass.setParameter("ssaoIntensity",t)},n.prototype.setSSAOQuality=function(t){var e={low:8,medium:16,high:64,ultra:128}[t]||16;this._ssaoPass.setParameter("kernelSize",e)},n.prototype.composite=function(t,e){this._compositor.render(t,e)},n.prototype.dispose=function(t){this._sourceTexture.dispose(t),this._depthTexture.dispose(t),this._framebuffer.dispose(t),this._compositor.dispose(t)},t.exports=n},function(t,e,r){function n(t){for(var e=new Uint8Array(t*t*4),r=0,n=new u,i=0;i<t;i++)for(var a=0;a<t;a++)n.set(2*Math.random()-1,2*Math.random()-1,0).normalize(),e[r++]=255*(.5*n.x+.5),e[r++]=255*(.5*n.y+.5),e[r++]=0,e[r++]=255;return e}function i(t){return new c({pixels:n(t),wrapS:l.REPEAT,wrapT:l.REPEAT,width:t,height:t})}function a(t){for(var e=new Float32Array(3*t),r=new u,n=0;n<t;n++)r.set(2*Math.random()-1,2*Math.random()-1,2*Math.random()-1).normalize().scale(Math.random()),e[3*n]=r.x,e[3*n+1]=r.y,e[3*n+2]=r.z;return e}function o(t){t=t||{},this._ssaoPass=new h({fragment:f.source("ecgl.ssao.estimate")}),this._blendPass=new h({fragment:f.source("ecgl.ssao.blur")}),this._framebuffer=new d,this._ssaoTexture=new c,this._targetTexture=new c({type:l.HALF_FLOAT}),this._depthTexture=t.depthTexture,this.setNoiseSize(4),this.setKernelSize(t.kernelSize||16),this.setParameter("blurSize",Math.round(t.blurSize||4)),null!=t.radius&&this.setParameter("radius",t.radius),null!=t.power&&this.setParameter("power",t.power)}var s=r(14),u=r(3),c=r(9),l=r(8),h=r(22),f=r(7),d=r(12);f.import(r(80)),o.prototype.setDepthTexture=function(t){this._depthTexture=t},o.prototype.update=function(t,e,r){var n=t.getWidth(),i=t.getHeight(),a=this._ssaoPass;a.setUniform("kernel",this._kernels[r%this._kernels.length]),a.setUniform("depthTex",this._depthTexture),a.setUniform("depthTexSize",[this._depthTexture.width,this._depthTexture.height]);var o=new s;s.transpose(o,e.worldTransform),a.setUniform("projection",e.projectionMatrix._array),a.setUniform("projectionInv",e.invProjectionMatrix._array),a.setUniform("viewInverseTranspose",o._array);var u=this._ssaoTexture;n===u.width&&i===u.height||(u.width=n,u.height=i,u.dirty()),this._framebuffer.attach(u),this._framebuffer.bind(t),t.gl.clearColor(1,1,1,1),t.gl.clear(t.gl.COLOR_BUFFER_BIT),a.render(t),this._framebuffer.unbind(t)},o.prototype.getTargetTexture=function(){return this._targetTexture},o.prototype.blend=function(t,e){var r=this._blendPass,n=this._depthTexture.width,i=this._depthTexture.height,a=this._targetTexture;e.width===a.width&&e.height===a.height||(a.width=e.width,a.height=e.height,a.dirty()),this._framebuffer.attach(a),this._framebuffer.bind(t),r.setUniform("textureSize",[n,i]),r.setUniform("ssaoTexture",this._ssaoTexture),r.setUniform("sourceTexture",e),r.render(t),this._framebuffer.unbind(t)},o.prototype.setParameter=function(t,e){"noiseTexSize"===t?this.setNoiseSize(e):"kernelSize"===t?this.setKernelSize(e):"blurSize"===t?this._blendPass.material.shader.define("fragment","BLUR_SIZE",e):"ssaoIntensity"===t?this._blendPass.material.set("ssaoIntensity",e):this._ssaoPass.setUniform(t,e)},o.prototype.setKernelSize=function(t){this._ssaoPass.material.shader.define("fragment","KERNEL_SIZE",t),this._kernels=this._kernels||[];for(var e=0;e<20;e++)this._kernels[e]=a(t)},o.prototype.setNoiseSize=function(t){var e=this._ssaoPass.getUniform("noiseTex");e?(e.data=n(t),e.width=e.height=t,e.dirty()):(e=i(t),this._ssaoPass.setUniform("noiseTex",i(t))),this._ssaoPass.setUniform("noiseTexSize",[t,t])},t.exports=o},function(t,e,r){function n(){for(var t=[],e=0;e<20;e++)t.push([i(e,2),i(e,3)]);this._haltonSequence=t,this._frame=0,this._sourceTex=new s,this._sourceFb=new o,this._sourceFb.attach(this._sourceTex),this._prevFrameTex=new s,this._outputTex=new s;var r=this._blendPass=new a({fragment:u.source("qtek.compositor.blend")});r.material.shader.disableTexturesAll(),r.material.shader.enableTexture(["texture1","texture2"]),this._blendFb=new o({depthBuffer:!1}),this._outputPass=new a({fragment:u.source("qtek.compositor.output"),blendWithPrevious:!0}),this._outputPass.material.shader.define("fragment","OUTPUT_ALPHA"),this._outputPass.material.blend=function(t){t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA)}}var i=r(133),a=r(22),o=r(12),s=r(9),u=r(7);n.prototype={constructor:n,jitterProjection:function(t,e){var r=t.viewport,n=r.devicePixelRatio||t.getDevicePixelRatio(),i=r.width*n,a=r.height*n,o=this._haltonSequence[this._frame];e.projectionMatrix._array[8]+=(2*o[0]-1)/i,e.projectionMatrix._array[9]+=(2*o[1]-1)/a},resetFrame:function(){this._frame=0},getFrame:function(){return this._frame},getSourceFrameBuffer:function(){return this._sourceFb},resize:function(t,e){this._sourceTex.width===t&&this._sourceTex.height===e||(this._prevFrameTex.width=t,this._prevFrameTex.height=e,this._outputTex.width=t,this._outputTex.height=e,this._sourceTex.width=t,this._sourceTex.height=e,this._prevFrameTex.dirty(),this._outputTex.dirty(),this._sourceTex.dirty())},isFinished:function(){return this._frame>=this._haltonSequence.length},render:function(t){var e=this._blendPass;0===this._frame?(e.setUniform("weight1",0),e.setUniform("weight2",1)):(e.setUniform("weight1",.9),e.setUniform("weight2",.1)),e.setUniform("texture1",this._prevFrameTex),e.setUniform("texture2",this._sourceTex),this._blendFb.attach(this._outputTex),this._blendFb.bind(t),e.render(t),this._blendFb.unbind(t),this._outputPass.setUniform("texture",this._outputTex),this._outputPass.render(t);var r=this._prevFrameTex;this._prevFrameTex=this._outputTex,this._outputTex=r,this._frame++},dispose:function(t){this._sourceFb.dispose(t),this._blendFb.dispose(t),this._prevFrameTex.dispose(t),this._outputTex.dispose(t),this._sourceTex.dispose(t),this._outputPass.dispose(t),this._blendPass.dispose(t)}},t.exports=n},function(t,e){function r(t,e){for(var r=0,n=1/e,i=t;i>0;)r+=n*(i%e),i=Math.floor(i/e),n/=e;return r}t.exports=r},function(t,e,r){function n(t){return"_on"+t}var i=r(9),a=r(3),o=r(28),s=["mousedown","mouseup","mousemove","mouseover","mouseout","click","dblclick","contextmenu"],u=function(t){var e=this;this._texture=new i({anisotropic:32,flipY:!1,surface:this,dispose:function(t){e.dispose(),i.prototype.dispose.call(this,t)}}),s.forEach(function(t){this[n(t)]=function(e){this._meshes.forEach(function(r){this.dispatchEvent(t,r,e.triangle,e.point)},this)}},this),this._meshes=[],t&&this.setECharts(t),this.onupdate=null};u.prototype={constructor:u,getTexture:function(){return this._texture},setECharts:function(t){this._chart=t;var e=t.getDom();if(e instanceof HTMLCanvasElement){var r=this,n=t.getZr(),i=n.__oldRefreshImmediately||n.refreshImmediately;n.refreshImmediately=function(){i.call(this),r._texture.dirty(),r.onupdate&&r.onupdate()},n.__oldRefreshImmediately=i}else console.error("ECharts must init on canvas if it is used as texture."),e=document.createElement("canvas");this._texture.image=e,this._texture.dirty(),this.onupdate&&this.onupdate()},dispatchEvent:function(){var t=new a,e=new a,r=new a,n=new o,i=new o,s=new o,u=new o,c=new a;return function(l,h,f,d){var _=h.geometry,p=_.attributes.position,m=_.attributes.texcoord0,v=a.dot,g=a.cross;p.get(f[0],t._array),p.get(f[1],e._array),p.get(f[2],r._array),m.get(f[0],n._array),m.get(f[1],i._array),m.get(f[2],s._array),g(c,e,r);var y=v(t,c),x=v(d,c)/y;g(c,r,t);var T=v(d,c)/y;g(c,t,e);var b=v(d,c)/y;o.scale(u,n,x),o.scaleAndAdd(u,u,i,T),o.scaleAndAdd(u,u,s,b);var E=u.x*this._chart.getWidth(),w=u.y*this._chart.getHeight();this._chart.getZr().handler.dispatch(l,{zrX:E,zrY:w})}}(),attachToMesh:function(t){this._meshes.indexOf(t)>=0||(s.forEach(function(e){t.on(e,this[n(e)],this)},this),this._meshes.push(t))},detachFromMesh:function(t){var e=this._meshes.indexOf(t);e>=0&&this._meshes.splice(e,1),s.forEach(function(e){t.off(e,this[n(e)])},this)},dispose:function(){this._meshes.forEach(function(t){this.detachFromMesh(t)},this)}},t.exports=u},function(t,e,r){function n(t,e,r,n,i,a){if(a>e&&a>n||a<e&&a<n)return-(1/0);if(n===e)return-(1/0);var o=n<e?1:-1,s=(a-e)/(n-e);1!==s&&0!==s||(o=n<e?.5:-.5);var u=s*(r-t)+t;return u}function i(t,e,r,n,i,a){return(r-t)*(a-n)-(n-e)*(i-r)}function a(t,e,r,n,a,o,s,u){return!(i(t,e,a,o,s,u)<=0||i(t,e,s,u,r,n)<=0||i(s,u,a,o,r,n)<=0)}function o(t){var e=t.length/2;if(e<3)return 0;for(var r=0,n=2*(e-1),i=0;i<2*e;){var a=t[n],o=t[n+1],s=t[i],u=t[i+1];n=i,i+=2,r+=a*u-s*o}return r}function s(t,e){for(var r=t.length/e,n=0;n<Math.floor(r/2);n++)for(var i=0;i<e;i++){var a=n*e+i,o=(r-n-1)*e+i,s=t[a];t[a]=t[o],t[o]=s}return t}function u(t){this.idx=t}var c=r(151),l=1,h=2,f=50,d=function(){this.points=[],this.triangles=[],this.maxGridNumber=50,this.minGridNumber=4,this._gridNumber=20,this._boundingBox=[[1/0,1/0],[-(1/0),-(1/0)]],this._nPoints=0,this._pointsTypes=[],this._grids=[],this._gridWidth=0,this._gridHeight=0,this._candidates=null};d.prototype.triangulate=function(t,e){this._nPoints=t.length/2,this._nPoints<3||(this._gridNumber=Math.ceil(Math.sqrt(this._nPoints)/2),this._gridNumber=Math.max(Math.min(this._gridNumber,this.maxGridNumber),this.minGridNumber),this.points=t,this._needsGreed=this._nPoints>f,o(this.points)>0&&(this.points=this.points.slice(),s(this.points,2)),this.holes=(e||[]).map(function(t){return o(t)<0&&(t=t.slice(),s(t,2)),t}),this._reset(),this._prepare(),this._earClipping())},d.prototype._reset=function(){this._candidates=new c,this.triangles=[],this._boundingBox[0][0]=this._boundingBox[0][1]=1/0,this._boundingBox[1][0]=this._boundingBox[1][1]=-(1/0);for(var t=this._gridNumber*this._gridNumber,e=0;e<t;e++)this._grids[e]=[];this._grids.length=t},d.prototype._prepare=function(){var t=this._boundingBox,e=this._nPoints,r=this.points;this._pointsTypes=[];for(var n=0,a=e-1;n<e;){var o=(n+1)%e,s=r[2*a],c=r[2*a+1],f=r[2*n],d=r[2*n+1],_=r[2*o],p=r[2*o+1];this._needsGreed&&(f<t[0][0]&&(t[0][0]=f),d<t[0][1]&&(t[0][1]=d),f>t[1][0]&&(t[1][0]=f),d>t[1][1]&&(t[1][1]=d),t[0][0]-=.1,t[0][1]-=.1,t[1][0]+=.1,t[1][1]+=.1);var m=i(s,c,f,d,_,p);this._pointsTypes[n]=m<0?l:h,a=n,n++}this._cutHoles(),e=this._nPoints,r=this.points;for(var n=0;n<e;n++)this._candidates.insert(new u(n));if(this._needsGreed){this._gridWidth=(t[1][0]-t[0][0])/this._gridNumber,this._gridHeight=(t[1][1]-t[0][1])/this._gridNumber;for(var n=0;n<e;n++){var v=r[2*n],g=r[2*n+1];if(this._pointsTypes[n]==h){var y=this._getPointHash(v,g);this._grids[y].push(n)}}}},d.prototype._cutHoles=function(){function t(){function t(t,e){W=V,q=H,V=z[Y++]=e[2*t],H=z[Y++]=e[2*t+1]}function s(){var t=i(W,q,V,H,X,j)<0?l:h;G[Z++]=t}for(var u=p.points,c=p._nPoints,f=-(1/0),d=0,_=0,m=0;m<r.length;m++)r[m]>f&&(f=r[m],d=o[m],_=m);var v=e[_];r.splice(_,1),o.splice(_,1),e.splice(_,1);for(var g=v[2*d],y=v[2*d+1],x=1/0,T=-1,m=0,b=u.length-2;m<u.length;m+=2){var E=u[b],w=u[b+1],S=u[m],A=u[m+1],M=n(E,w,S,A,g,y);M>=g&&M<x&&(x=M,T=b/2),b=m}if(!(T<0)){for(var C=(T+1)%(u.length/2),L=u[2*T]>u[2*C]?T:C,R=u[2*L],N=u[2*L+1],D=1/0,m=0;m<c;m++)if(p._pointsTypes[m]===h){var I=u[2*m],O=u[2*m+1];if(a(g,y,x,y,R,N,I,O)){var P=I-g,F=O-y,B=Math.sqrt(P*P+F*F);P/=B,F/=B;var U=P*P;U<D&&(D=U,L=m)}}var k=c+v.length/2+2,z=new Float32Array(2*k),G=new Uint8Array(k);R=u[2*L],N=u[2*L+1];for(var V,H,W,q,X,j,Y=0,Z=0,m=0;m<L;m++)t(m,u),G[Z++]=p._pointsTypes[m];t(L,u),0===L&&(W=u[2*c-2],q=u[2*c-1]),X=v[2*d],j=v[2*d+1],s();for(var m=0,Q=v.length/2;m<Q;m++){var K=(m+d)%Q;t(K,v);var J=(K+1)%Q;X=v[2*J],j=v[2*J+1],s()}t(d,v),X=R,j=N,s(),t(L,u);var J=(L+1)%c;X=u[2*J],j=u[2*J+1],s();for(var m=L+1;m<c;m++)t(m,u),G[Z++]=p._pointsTypes[m];p.points=z,p._pointsTypes=G,p._nPoints=k}}var e=this.holes;if(e.length){e=e.slice();for(var r=[],o=[],s=0;s<e.length;s++){for(var u=e[s],c=-(1/0),f=0,d=0;d<u.length;d+=2){var _=u[2*d];_>c&&(f=d/2,c=_)}r.push(c),o.push(f)}for(var p=this,m=e.length;m--;)t()}},d.prototype._earClipping=function(){for(var t=this._candidates;t.length()>2;){for(var e=!0,r=t.head;r;)this._isEar(r)?(r=this._clipEar(r),e=!1):r=r.next;e&&this._clipEar(t.head)}},d.prototype._isEar=function(t){if(this._pointsTypes[t.value.idx]!==h){var e=this.points,r=t.prev||this._candidates.tail,n=t.next||this._candidates.head,i=r.value.idx,o=t.value.idx,s=n.value.idx;i*=2,o*=2,s*=2;var u=e[i],c=e[i+1],l=e[o],f=e[o+1],d=e[s],_=e[s+1];if(this._needsGreed)for(var p=this._getTriangleGrids(u,c,l,f,d,_),m=p[0][1];m<=p[1][1];m++)for(var v=p[0][0];v<=p[1][0];v++)for(var g=m*this._gridNumber+v,y=this._grids[g],x=0;x<y.length;x++){var T=y[x];if(this._pointsTypes[T]==h){var b=e[2*T],E=e[2*T+1];if(a(u,c,l,f,d,_,b,E))return!1}}else for(var w=this._candidates.head;w;){var T=w.value.idx,b=e[2*T],E=e[2*T+1];if(this._pointsTypes[T]==h&&a(u,c,l,f,d,_,b,E))return!1;w=w.next}return!0}},d.prototype._clipEar=function(t){var e=this._candidates,r=t.prev||e.tail,n=t.next||e.head,i=r.value.idx,a=t.value.idx,o=n.value.idx,s=this.triangles;if(s.push(i),s.push(a),s.push(o),e.remove(t),3===e.length())return s.push(i),s.push(o),void s.push((n.next||e.head).value.idx);var u=n.next||e.head,c=r.prev||e.tail,i=c.value.idx,a=r.value.idx,o=n.value.idx,f=u.value.idx;return this._pointsTypes[a]=this.isTriangleConvex2(i,a,o)?l:h,this._pointsTypes[o]=this.isTriangleConvex2(a,o,f)?l:h,r},d.prototype._getPointHash=function(t,e){var r=this._boundingBox;return Math.floor((e-r[0][1])/this._gridHeight)*this._gridNumber+Math.floor((t-r[0][0])/this._gridWidth)},d.prototype._getTriangleGrids=function(){var t,e,r,n,i=[[-1,-1],[-1,-1]];return function(a,o,s,u,c,l){var h=this._boundingBox;return t=r=a,e=n=o,s<t&&(t=s),u<e&&(e=u),s>r&&(r=s),u>n&&(n=u),c<t&&(t=c),l<e&&(e=l),c>r&&(r=c),l>n&&(n=l),i[0][0]=Math.floor((t-h[0][0])/this._gridWidth),i[1][0]=Math.floor((r-h[0][0])/this._gridWidth),i[0][1]=Math.floor((e-h[0][1])/this._gridHeight),i[1][1]=Math.floor((n-h[0][1])/this._gridHeight),i}}(),d.prototype.isTriangleConvex2=function(t,e,r){return this.triangleArea(t,e,r)<0},d.prototype.triangleArea=function(t,e,r){var n=this.points[2*t],i=this.points[2*t+1],a=this.points[2*e],o=this.points[2*e+1],s=this.points[2*r],u=this.points[2*r+1];return(a-n)*(u-o)-(o-i)*(s-a)},t.exports=d},function(t,e,r){var n=r(190),i={_animators:null,getAnimators:function(){return this._animators=this._animators||[],this._animators},animate:function(t,e){this._animators=this._animators||[];var r,i=this;if(t){for(var a=t.split("."),o=i,s=0,u=a.length;s<u;s++)o&&(o=o[a[s]]);o&&(r=o)}else r=i;if(null==r)throw new Error("Target "+t+" not exists");var c=this._animators,l=new n(r,e),h=this;return l.during(function(){h.__zr&&h.__zr.refresh()}).done(function(){var t=c.indexOf(l);t>=0&&c.splice(t,1)}),c.push(l),this.__zr&&this.__zr.animation.addAnimator(l),l},stopAnimation:function(t){this._animators=this._animators||[];for(var e=this._animators,r=e.length,n=0;n<r;n++)e[n].stop(t);return e.length=0,this},addAnimatorsToZr:function(t){if(this._animators)for(var e=0;e<this._animators.length;e++)t.animation.addAnimator(this._animators[e])},removeAnimatorsFromZr:function(t){if(this._animators)for(var e=0;e<this._animators.length;e++)t.animation.removeAnimator(this._animators[e])}};t.exports=i},function(t,e,r){var n=r(1),i=r(35),a=r(39),o=r(13),s=r(2),u=s.vec3,c=s.mat3,l=o.extend(function(){return{attributes:{position:new o.Attribute("position","float",3,"POSITION"),normal:new o.Attribute("normal","float",3,"NORMAL"),color:new o.Attribute("color","float",4,"COLOR")},dynamic:!0,enableNormal:!1,bevelSize:1,bevelSegments:0,_dataIndices:null,_vertexOffset:0,_triangleOffset:0}},{resetOffset:function(){this._vertexOffset=0,this._triangleOffset=0},setBarCount:function(t){var e=this.enableNormal,r=this.getBarVertexCount()*t,n=this.getBarTriangleCount()*t;this.vertexCount!==r&&(this.attributes.position.init(r),e?this.attributes.normal.init(r):this.attributes.normal.value=null,this.attributes.color.init(r)),this.triangleCount!==n&&(this.indices=r>65535?new Uint32Array(3*n):new Uint16Array(3*n),this._dataIndices=new Uint32Array(n))},getBarVertexCount:function(){var t=this.bevelSize>0?this.bevelSegments:0;return t>0?this._getBevelBarVertexCount(t):this.enableNormal?24:8},getBarTriangleCount:function(){var t=this.bevelSize>0?this.bevelSegments:0;return t>0?this._getBevelBarTriangleCount(t):12},_getBevelBarVertexCount:function(t){return 4*(t+1)*(t+1)*2},_getBevelBarTriangleCount:function(t){var e=4*t+3,r=2*t+1;return(e+1)*r*2+4},setColor:function(t,e){for(var r=this.getBarVertexCount(),n=r*t,i=r*(t+1),a=n;a<i;a++)this.attributes.color.set(a,e);this.dirtyAttribute("color")},getDataIndexOfVertex:function(t){return this._dataIndices?this._dataIndices[t]:null},addBar:function(){for(var t=u.create,e=u.scaleAndAdd,r=t(),n=t(),i=t(),a=t(),o=t(),s=t(),c=t(),l=[],h=[],f=0;f<8;f++)l[f]=t();for(var d=[[0,1,5,4],[2,3,7,6],[4,5,6,7],[3,2,1,0],[0,4,7,3],[1,2,6,5]],_=[0,1,2,0,2,3],p=[],f=0;f<d.length;f++)for(var m=d[f],v=0;v<2;v++){for(var g=[],y=0;y<3;y++)g.push(m[_[3*v+y]]);p.push(g)}return function(t,f,m,v,g,y){var x=this._vertexOffset;if(this.bevelSize>0&&this.bevelSegments>0)this._addBevelBar(t,f,m,v,this.bevelSize,this.bevelSegments,g);else{
u.copy(i,f),u.normalize(i,i),u.cross(a,m,i),u.normalize(a,a),u.cross(n,i,a),u.normalize(a,a),u.negate(o,n),u.negate(s,i),u.negate(c,a),e(l[0],t,n,v[0]/2),e(l[0],l[0],a,v[2]/2),e(l[1],t,n,v[0]/2),e(l[1],l[1],c,v[2]/2),e(l[2],t,o,v[0]/2),e(l[2],l[2],c,v[2]/2),e(l[3],t,o,v[0]/2),e(l[3],l[3],a,v[2]/2),e(r,t,i,v[1]),e(l[4],r,n,v[0]/2),e(l[4],l[4],a,v[2]/2),e(l[5],r,n,v[0]/2),e(l[5],l[5],c,v[2]/2),e(l[6],r,o,v[0]/2),e(l[6],l[6],c,v[2]/2),e(l[7],r,o,v[0]/2),e(l[7],l[7],a,v[2]/2);var T=this.attributes;if(this.enableNormal){h[0]=n,h[1]=o,h[2]=i,h[3]=s,h[4]=a,h[5]=c;for(var b=this._vertexOffset,E=0;E<d.length;E++){for(var w=3*this._triangleOffset,S=0;S<6;S++)this.indices[w++]=b+_[S];b+=4,this._triangleOffset+=2}for(var E=0;E<d.length;E++)for(var A=h[E],S=0;S<4;S++){var M=d[E][S];T.position.set(this._vertexOffset,l[M]),T.normal.set(this._vertexOffset,A),T.color.set(this._vertexOffset++,g)}}else{for(var E=0;E<p.length;E++){for(var w=3*this._triangleOffset,S=0;S<3;S++)this.indices[w+S]=p[E][S]+this._vertexOffset;this._triangleOffset++}for(var E=0;E<l.length;E++)T.position.set(this._vertexOffset,l[E]),T.color.set(this._vertexOffset++,g)}}for(var C=this._vertexOffset,E=x;E<C;E++)this._dataIndices[E]=y}}(),_addBevelBar:function(){var t=u.create(),e=u.create(),r=u.create(),n=c.create(),i=[];return function(a,o,s,c,l,h,f){u.copy(e,o),u.normalize(e,e),u.cross(r,s,e),u.normalize(r,r),u.cross(t,e,r),u.normalize(r,r),n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=e[0],n[4]=e[1],n[5]=e[2],n[6]=r[0],n[7]=r[1],n[8]=r[2];for(var d=0;d<3;d++)i[d]=Math.max(c[d]-2*l,0);for(var _=(c[0]-i[0])/2,p=(c[1]-i[1])/2,m=(c[2]-i[2])/2,v=[],g=[],y=this._vertexOffset,x=[1,-1,-1,1],T=[1,1,-1,-1],b=[2,0],E=[],d=0;d<2;d++){E[d]=E[d]=[];for(var w=0;w<=h;w++)for(var S=0;S<4;S++){(0===w&&0===d||1===d&&w===h)&&E[d].push(y);for(var A=0;A<=h;A++){var M=A/h*Math.PI/2+Math.PI/2*S,C=w/h*Math.PI/2+Math.PI/2*d;g[0]=_*Math.cos(M)*Math.sin(C),g[1]=p*Math.cos(C),g[2]=m*Math.sin(M)*Math.sin(C),v[0]=g[0]+x[S]*i[0]/2,v[1]=g[1]+b[d]*i[1]/2,v[2]=g[2]+T[S]*i[2]/2,Math.abs(_-p)<1e-6&&Math.abs(p-m)<1e-6||(g[0]/=_*_,g[1]/=p*p,g[2]/=m*m),u.normalize(g,g),u.transformMat3(v,v,n),u.transformMat3(g,g,n),u.add(v,v,a),this.attributes.position.set(y,v),this.enableNormal&&this.attributes.normal.set(y,g),this.attributes.color.set(y,f),y++}}}for(var L=4*h+3,R=2*h+1,N=L+1,S=0;S<R;S++)for(var d=0;d<=L;d++){var D=S*N+d+this._vertexOffset,I=S*N+(d+1)%N+this._vertexOffset,O=(S+1)*N+(d+1)%N+this._vertexOffset,P=(S+1)*N+d+this._vertexOffset;this.setTriangleIndices(this._triangleOffset++,[O,D,I]),this.setTriangleIndices(this._triangleOffset++,[O,P,D])}this.setTriangleIndices(this._triangleOffset++,[E[0][0],E[0][2],E[0][1]]),this.setTriangleIndices(this._triangleOffset++,[E[0][0],E[0][3],E[0][2]]),this.setTriangleIndices(this._triangleOffset++,[E[1][0],E[1][1],E[1][2]]),this.setTriangleIndices(this._triangleOffset++,[E[1][0],E[1][2],E[1][3]]),this._vertexOffset=y}}()});n.util.defaults(l.prototype,i),n.util.defaults(l.prototype,a),t.exports=l},function(t,e,r){var n=r(13),i=r(2).vec3,a=r(1),o=r(35),s=n.extend(function(){return{segmentScale:1,useNativeLine:!0,attributes:{position:new n.Attribute("position","float",3,"POSITION"),normal:new n.Attribute("normal","float",3,"NORMAL"),color:new n.Attribute("color","float",4,"COLOR")}}},{resetOffset:function(){this._vertexOffset=0,this._faceOffset=0},setQuadCount:function(t){var e=this.attributes,r=this.getQuadVertexCount()*t,n=this.getQuadTriangleCount()*t;this.vertexCount!==r&&(e.position.init(r),e.normal.init(r),e.color.init(r)),this.triangleCount!==n&&(this.indices=r>65535?new Uint32Array(3*n):new Uint16Array(3*n))},getQuadVertexCount:function(){return 4},getQuadTriangleCount:function(){return 2},addQuad:function(){var t=i.create(),e=i.create(),r=i.create(),n=[0,3,1,3,2,1];return function(a,o){var s=this.attributes.position,u=this.attributes.normal,c=this.attributes.color;i.sub(t,a[1],a[0]),i.sub(e,a[2],a[1]),i.cross(r,t,e),i.normalize(r,r);for(var l=0;l<4;l++)s.set(this._vertexOffset+l,a[l]),c.set(this._vertexOffset+l,o),u.set(this._vertexOffset+l,r);for(var h=3*this._faceOffset,l=0;l<6;l++)this.indices[h+l]=n[l]+this._vertexOffset;this._vertexOffset+=4,this._faceOffset+=2}}()});a.util.defaults(s.prototype,o),t.exports=s},function(t,e,r){var n=r(1),i=r(13),a=r(35),o=[0,1,2,0,2,3],s=i.extend(function(){return{attributes:{position:new i.Attribute("position","float",3,"POSITION"),texcoord:new i.Attribute("texcoord","float",2,"TEXCOORD_0"),offset:new i.Attribute("offset","float",2),color:new i.Attribute("color","float",4,"COLOR")}}},{resetOffset:function(){this._vertexOffset=0,this._faceOffset=0},setSpriteCount:function(t){this._spriteCount=t;var e=4*t,r=2*t;this.vertexCount!==e&&(this.attributes.position.init(e),this.attributes.offset.init(e),this.attributes.color.init(e)),this.triangleCount!==r&&(this.indices=e>65535?new Uint32Array(3*r):new Uint16Array(3*r))},setSpriteAlign:function(t,e,r,n){null==r&&(r="left"),null==n&&(n="top");var i,a,o,s;switch(r){case"left":i=0,o=e[0];break;case"center":case"middle":i=-e[0]/2,o=e[0]/2;break;case"right":i=-e[0],o=0}switch(n){case"bottom":a=0,s=e[1];break;case"middle":a=-e[1]/2,s=e[1]/2;break;case"top":a=-e[1],s=0}var u=4*t,c=this.attributes.offset;c.set(u,[i,s]),c.set(u+1,[o,s]),c.set(u+2,[o,a]),c.set(u+3,[i,a])},addSprite:function(t,e,r,n,i){for(var a=this.attributes,s=0;s<4;s++)a.position.set(this._vertexOffset+s,t);var u=this._vertexOffset,c=a.texcoord;c.set(u,[r[0][0],r[0][1]]),c.set(u+1,[r[1][0],r[0][1]]),c.set(u+2,[r[1][0],r[1][1]]),c.set(u+3,[r[0][0],r[1][1]]),this.setSpriteAlign(u/4,e,n,i);for(var s=0;s<o.length;s++)this.indices[3*this._faceOffset+s]=o[s]+u;this._faceOffset+=2,this._vertexOffset+=4}});n.util.defaults(s.prototype,a),t.exports=s},function(t,e,r){var n=r(2).vec3,i=r(54);t.exports={needsSortVertices:function(){return this.sortVertices},needsSortVerticesProgressively:function(){return this.needsSortVertices()&&this.vertexCount>=2e4},doSortVertices:function(t,e){var r=this.indices,i=n.create();if(!r){r=this.indices=this.vertexCount>65535?new Uint32Array(this.vertexCount):new Uint16Array(this.vertexCount);for(var a=0;a<r.length;a++)r[a]=a}if(0===e){var o=this.attributes.position,t=t._array,s=0;this._zList&&this._zList.length===this.vertexCount||(this._zList=new Float32Array(this.vertexCount));for(var a=0;a<this.vertexCount;a++){o.get(a,i);var u=n.sqrDist(i,t);isNaN(u)&&(u=1e7,s++),this._zList[a]=u}this._noneCount=s}if(this.vertexCount<2e4)0===e&&this._simpleSort(this._noneCount/this.vertexCount>.05);else for(var a=0;a<3;a++)this._progressiveQuickSort(3*e+a);this.dirtyIndices()},_simpleSort:function(t){function e(t,e){return r[e]-r[t]}var r=this._zList,n=this.indices;t?n.sort(e):i.sort(n,e,0,n.length-1)},_progressiveQuickSort:function(t){var e=this._zList,r=this.indices;this._quickSort=this._quickSort||new i,this._quickSort.step(r,function(t,r){return e[r]-e[t]},t)}}},function(t,e){function r(t){return t.valueOf()/y-.5+x}function n(t){return r(t)-T}function i(t,e){return v(d(t)*_(b)-p(e)*d(b),_(t))}function a(t,e){return m(d(e)*_(b)+_(e)*d(b)*d(t))}function o(t,e,r){return v(d(t),_(t)*d(e)-p(r)*_(e))}function s(t,e,r){return m(d(e)*d(r)+_(e)*_(r)*_(t))}function u(t,e){return g*(280.16+360.9856235*t)-e}function c(t){return g*(357.5291+.98560028*t)}function l(t){var e=g*(1.9148*d(t)+.02*d(2*t)+3e-4*d(3*t)),r=102.9372*g;return t+e+r+f}function h(t){var e=c(t),r=l(e);return{dec:a(r,0),ra:i(r,0)}}var f=Math.PI,d=Math.sin,_=Math.cos,p=Math.tan,m=Math.asin,v=Math.atan2,g=f/180,y=864e5,x=2440588,T=2451545,b=23.4397*g,E={};E.getPosition=function(t,e,r){var i=g*-r,a=g*e,c=n(t),l=h(c),f=u(c,i)-l.ra;return{azimuth:o(f,a,l.dec),altitude:s(f,a,l.dec)}},t.exports=E},function(t,e,r){"use strict";function n(t){return this._axes[t]}var i=r(18),a=function(t){this._axes={},this._dimList=[],this.name=t||""};a.prototype={constructor:a,type:"cartesian",getAxis:function(t){return this._axes[t]},getAxes:function(){return i.map(this._dimList,n,this)},getAxesByScale:function(t){return t=t.toLowerCase(),i.filter(this.getAxes(),function(e){return e.scale.type===t})},addAxis:function(t){var e=t.dim;this._axes[e]=t,this._dimList.push(e)},dataToCoord:function(t){return this._dataCoordConvert(t,"dataToCoord")},coordToData:function(t){return this._dataCoordConvert(t,"coordToData")},_dataCoordConvert:function(t,e){for(var r=this._dimList,n=t instanceof Array?[]:{},i=0;i<r.length;i++){var a=r[i],o=this._axes[a];n[a]=o[e](t[a])}return n}},t.exports=a},function(t,e,r){var n=r(18),i={Russia:[100,60],"United States":[-99,38],"United States of America":[-99,38]};t.exports=function(t){n.each(t.regions,function(t){var e=i[t.name];if(e){var r=t.center;r[0]=e[0],r[1]=e[1]}})}},function(t,e,r){var n=r(18),i={"南海诸岛":[32,80],"广东":[0,-10],"香港":[10,5],"澳门":[-10,10],"天津":[5,5]};t.exports=function(t){n.each(t.regions,function(t){var e=i[t.name];if(e){var r=t.center;r[0]+=e[0]/10.5,r[1]+=-e[1]/14}})}},function(t,e,r){var n=r(18),i=r(58),a=r(194),o={};o.addCommas=function(t){return isNaN(t)?"-":(t=(t+"").split("."),t[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g,"$1,")+(t.length>1?"."+t[1]:""))},o.toCamelCase=function(t,e){return t=(t||"").toLowerCase().replace(/-(.)/g,function(t,e){return e.toUpperCase()}),e&&t&&(t=t.charAt(0).toUpperCase()+t.slice(1)),t},o.normalizeCssArray=function(t){var e=t.length;return"number"==typeof t?[t,t,t,t]:2===e?[t[0],t[1],t[0],t[1]]:3===e?[t[0],t[1],t[2],t[1]]:t};var s=o.encodeHTML=function(t){return String(t).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")},u=["a","b","c","d","e","f","g"],c=function(t,e){return"{"+t+(null==e?"":e)+"}"};o.formatTpl=function(t,e,r){n.isArray(e)||(e=[e]);var i=e.length;if(!i)return"";for(var a=e[0].$vars||[],o=0;o<a.length;o++){var l=u[o],h=c(l,0);t=t.replace(c(l),r?s(h):h)}for(var f=0;f<i;f++)for(var d=0;d<a.length;d++){var h=e[f][a[d]];t=t.replace(c(u[d],f),r?s(h):h)}return t},o.formatTplSimple=function(t,e,r){return n.each(e,function(e,n){t=t.replace("{"+n+"}",r?s(vaule):e)}),t};var l=function(t){return t<10?"0"+t:t};o.formatTime=function(t,e,r){"week"!==t&&"month"!==t&&"quarter"!==t&&"half-year"!==t&&"year"!==t||(t="MM-dd\nyyyy");var n=i.parseDate(e),a=r?"":"UTC",o=n["get"+a+"FullYear"](),s=n["get"+a+"Month"]()+1,u=n["get"+a+"Date"](),c=n["get"+a+"Hours"](),h=n["get"+a+"Minutes"](),f=n["get"+a+"Seconds"]();return t=t.replace("MM",l(s)).toLowerCase().replace("yyyy",o).replace("yy",o%100).replace("dd",l(u)).replace("d",u).replace("hh",l(c)).replace("h",c).replace("mm",l(h)).replace("m",h).replace("ss",l(f)).replace("s",f)},o.capitalFirst=function(t){return t?t.charAt(0).toUpperCase()+t.substr(1):t},o.truncateText=a.truncateText,t.exports=o},function(t,e,r){"use strict";function n(t){var e;switch(t){case"byte":e=f.Int8Array;break;case"ubyte":e=f.Uint8Array;break;case"short":e=f.Int16Array;break;case"ushort":e=f.Uint16Array;break;default:e=f.Float32Array}return e}function i(t,e,r,n){this.name=t,this.type=e,this.size=r,n&&(this.semantic=n)}function a(t,e,r,n){switch(i.call(this,t,e,r,n),this.value=null,r){case 1:this.get=function(t){return this.value[t]},this.set=function(t,e){this.value[t]=e},this.copy=function(t,e){this.value[t]=this.value[t]};break;case 2:this.get=function(t,e){var r=this.value;return e[0]=r[2*t],e[1]=r[2*t+1],e},this.set=function(t,e){var r=this.value;r[2*t]=e[0],r[2*t+1]=e[1]},this.copy=function(t,e){var r=this.value;e*=2,t*=2,r[t]=r[e],r[t+1]=r[e+1]};break;case 3:this.get=function(t,e){var r=3*t,n=this.value;return e[0]=n[r++],e[1]=n[r++],e[2]=n[r++],e},this.set=function(t,e){var r=3*t,n=this.value;n[r++]=e[0],n[r++]=e[1],n[r++]=e[2]},this.copy=function(t,e){var r=this.value;e*=3,t*=3,r[t]=r[e],r[t+1]=r[e+1],r[t+2]=r[e+2]};break;case 4:this.get=function(t,e){var r=this.value,n=4*t;return e[0]=r[n++],e[1]=r[n++],e[2]=r[n++],e[3]=r[n++],e},this.set=function(t,e){var r=this.value,n=4*t;r[n++]=e[0],r[n++]=e[1],r[n++]=e[2],r[n++]=e[3]},this.copy=function(t,e){var r=this.value;e*=4,t*=4,r[t]=r[e],r[t+1]=r[e+1],r[t+2]=r[e+2],r[t+3]=r[e+3]}}}function o(t,e,r,n,i){this.name=t,this.type=e,this.buffer=r,this.size=n,this.semantic=i,this.symbol="",this.needsRemove=!1}function s(t){this.buffer=t,this.count=0}function u(){console.warn("Geometry doesn't implement this method, use StaticGeometry instead")}var c=r(5),l=r(6),h=r(36),f=r(17),d=r(2),_=d.vec2,p=d.vec3,m=d.vec4;m.copy,p.copy,_.copy;i.prototype.clone=function(t){var e=new this.constructor(this.name,this.type,this.size,this.semantic);return t&&console.warn("todo"),e},a.prototype.constructor=new i,a.prototype.init=function(t){if(!this.value||this.value.length!=t*this.size){var e=n(this.type);this.value=new e(t*this.size)}},a.prototype.fromArray=function(t){var e,r=n(this.type);if(t[0]&&t[0].length){var i=0,a=this.size;e=new r(t.length*a);for(var o=0;o<t.length;o++)for(var s=0;s<a;s++)e[i++]=t[o][s]}else e=new r(t);this.value=e};var v=c.extend({boundingBox:null,attributes:{},indices:null,dynamic:!1},function(){this._cache=new h,this._attributeList=Object.keys(this.attributes)},{pickByRay:null,mainAttribute:"position",dirty:u,createAttribute:u,removeAttribute:u,getTriangleIndices:u,setTriangleIndices:u,isUseIndices:u,getEnabledAttributes:u,getBufferChunks:u,generateVertexNormals:u,generateFaceNormals:u,isUniqueVertex:u,generateUniqueVertex:u,generateTangents:u,generateBarycentric:u,applyTransform:u,dispose:u});v.STATIC_DRAW=l.STATIC_DRAW,v.DYNAMIC_DRAW=l.DYNAMIC_DRAW,v.STREAM_DRAW=l.STREAM_DRAW,v.AttributeBuffer=o,v.IndicesBuffer=s,v.Attribute=i,v.StaticAttribute=a,t.exports=v},function(t,e,r){"use strict";var n=r(22),i=r(27),a=i.extend(function(){return{name:"",inputs:{},outputs:null,shader:"",inputLinks:{},outputLinks:{},pass:null,_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}},function(){var t=new n({fragment:this.shader});this.pass=t},{render:function(t,e){this.trigger("beforerender",t),this._rendering=!0;var r=t.gl;for(var n in this.inputLinks){var i=this.inputLinks[n],a=i.node.getOutput(t,i.pin);this.pass.setUniform(n,a)}if(this.outputs){this.pass.outputs={};var o={};for(var s in this.outputs){var u=this.updateParameter(s,t);isNaN(u.width)&&this.updateParameter(s,t);var c=this.outputs[s],l=this._compositor.allocateTexture(u);this._outputTextures[s]=l;var h=c.attachment||r.COLOR_ATTACHMENT0;"string"==typeof h&&(h=r[h]),o[h]=l}this._compositor.getFrameBuffer().bind(t);for(var h in o)this._compositor.getFrameBuffer().attach(o[h],h);this.pass.render(t),this._compositor.getFrameBuffer().updateMipmap(t.gl)}else this.pass.outputs=null,this._compositor.getFrameBuffer().unbind(t),this.pass.render(t,e);for(var n in this.inputLinks){var i=this.inputLinks[n];i.node.removeReference(i.pin)}this._rendering=!1,this._rendered=!0,this.trigger("afterrender",t)},updateParameter:function(t,e){var r=this.outputs[t],n=r.parameters,i=r._parametersCopy;if(i||(i=r._parametersCopy={}),n)for(var a in n)"width"!==a&&"height"!==a&&(i[a]=n[a]);var o,s;return o=n.width instanceof Function?n.width.call(this,e):n.width,s=n.height instanceof Function?n.height.call(this,e):n.height,i.width===o&&i.height===s||this._outputTextures[t]&&this._outputTextures[t].dispose(e.gl),i.width=o,i.height=s,i},setParameter:function(t,e){this.pass.setUniform(t,e)},getParameter:function(t){return this.pass.getUniform(t)},setParameters:function(t){for(var e in t)this.setParameter(e,t[e])},setShader:function(t){var e=this.pass.material;e.shader.setFragment(t),e.attachShader(e.shader,!0)},shaderDefine:function(t,e){this.pass.material.shader.define("fragment",t,e)},shaderUnDefine:function(t){this.pass.material.shader.unDefine("fragment",t)},removeReference:function(t){if(this._outputReferences[t]--,0===this._outputReferences[t]){var e=this.outputs[t];e.keepLastFrame?(this._prevOutputTextures[t]&&this._compositor.releaseTexture(this._prevOutputTextures[t]),this._prevOutputTextures[t]=this._outputTextures[t]):this._compositor.releaseTexture(this._outputTextures[t])}},link:function(t,e,r){this.inputLinks[t]={node:e,pin:r},e.outputLinks[r]||(e.outputLinks[r]=[]),e.outputLinks[r].push({node:this,pin:t});var n=this.pass.material.shader;n.enableTexture(t)},clear:function(){i.prototype.clear.call(this);var t=this.pass.material.shader;t.disableTexturesAll()},updateReference:function(t){if(!this._rendering){this._rendering=!0;for(var e in this.inputLinks){var r=this.inputLinks[e];r.node.updateReference(r.pin)}this._rendering=!1}t&&this._outputReferences[t]++},beforeFrame:function(){this._rendered=!1;for(var t in this.outputLinks)this._outputReferences[t]=0},afterFrame:function(){for(var t in this.outputLinks)if(this._outputReferences[t]>0){var e=this.outputs[t];e.keepLastFrame?(this._prevOutputTextures[t]&&this._compositor.releaseTexture(this._prevOutputTextures[t]),this._prevOutputTextures[t]=this._outputTextures[t]):this._compositor.releaseTexture(this._outputTextures[t])}}});t.exports=a},function(t,e,r){"use strict";var n=r(5),i=r(27),a=n.extend(function(){return{nodes:[]}},{dirty:function(){this._dirty=!0},addNode:function(t){this.nodes.indexOf(t)>=0||(this.nodes.push(t),this._dirty=!0)},removeNode:function(t){"string"==typeof t&&(t=this.getNodeByName(t));var e=this.nodes.indexOf(t);e>=0&&(this.nodes.splice(e,1),this._dirty=!0)},getNodeByName:function(t){for(var e=0;e<this.nodes.length;e++)if(this.nodes[e].name===t)return this.nodes[e]},update:function(){for(var t=0;t<this.nodes.length;t++)this.nodes[t].clear();for(var t=0;t<this.nodes.length;t++){var e=this.nodes[t];if(e.inputs)for(var r in e.inputs)if(e.inputs[r])if(!e.pass||e.pass.material.isUniformEnabled(r)){var n=e.inputs[r],i=this.findPin(n);i?e.link(r,i.node,i.pin):"string"==typeof n?console.warn("Node "+n+" not exist"):console.warn("Pin of "+n.node+"."+n.pin+" not exist")}else console.warn("Pin "+e.name+"."+r+" not used.")}},findPin:function(t){var e;if(("string"==typeof t||t instanceof i)&&(t={node:t}),"string"==typeof t.node)for(var r=0;r<this.nodes.length;r++){var n=this.nodes[r];n.name===t.node&&(e=n)}else e=t.node;if(e){var a=t.pin;if(a||e.outputs&&(a=Object.keys(e.outputs)[0]),e.outputs[a])return{node:e,pin:a}}}});t.exports=a},function(t,e,r){"use strict";var n=r(27),i=r(16),a=r(6),o=r(12),s=n.extend({name:"scene",scene:null,camera:null,autoUpdateScene:!0,preZ:!1},function(){this.frameBuffer=new o},{render:function(t){this._rendering=!0;var e=t.gl;this.trigger("beforerender");var r;if(this.outputs){var n=this.frameBuffer;for(var o in this.outputs){var s=this.updateParameter(o,t),u=this.outputs[o],c=this._compositor.allocateTexture(s);this._outputTextures[o]=c;var l=u.attachment||e.COLOR_ATTACHMENT0;"string"==typeof l&&(l=e[l]),n.attach(c,l)}n.bind(t);var h=i.getExtension(e,"EXT_draw_buffers");if(h){var f=[];for(var l in this.outputs)l=parseInt(l),l>=e.COLOR_ATTACHMENT0&&l<=e.COLOR_ATTACHMENT0+8&&f.push(l);h.drawBuffersEXT(f)}t.saveClear(),t.clearBit=a.DEPTH_BUFFER_BIT|a.COLOR_BUFFER_BIT,r=t.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ),t.restoreClear(),n.unbind(t)}else r=t.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ);this.trigger("afterrender",r),this._rendering=!1,this._rendered=!0}});t.exports=s},function(t,e,r){"use strict";var n=r(27),i=n.extend(function(){return{texture:null,outputs:{color:{}}}},function(){},{getOutput:function(t,e){return this.texture},beforeFrame:function(){},afterFrame:function(){}});t.exports=i},function(t,e){"use strict";var r=function(){this.head=null,this.tail=null,this._length=0};r.prototype.insert=function(t){var e=new r.Entry(t);return this.insertEntry(e),e},r.prototype.insertAt=function(t,e){if(!(t<0)){for(var n=this.head,i=0;n&&i!=t;)n=n.next,i++;if(n){var a=new r.Entry(e),o=n.prev;o?(o.next=a,a.prev=o):this.head=a,a.next=n,n.prev=a}else this.insert(e)}},r.prototype.insertBeforeEntry=function(t,e){var n=new r.Entry(t),i=e.prev;i?(i.next=n,n.prev=i):this.head=n,n.next=e,e.prev=n,this._length++},r.prototype.insertEntry=function(t){this.head?(this.tail.next=t,t.prev=this.tail,this.tail=t):this.head=this.tail=t,this._length++},r.prototype.remove=function(t){var e=t.prev,r=t.next;e?e.next=r:this.head=r,r?r.prev=e:this.tail=e,t.next=t.prev=null,this._length--},r.prototype.removeAt=function(t){if(!(t<0)){for(var e=this.head,r=0;e&&r!=t;)e=e.next,r++;return e?(this.remove(e),e.value):void 0}},r.prototype.getHead=function(){if(this.head)return this.head.value},r.prototype.getTail=function(){if(this.tail)return this.tail.value},r.prototype.getAt=function(t){if(!(t<0)){for(var e=this.head,r=0;e&&r!=t;)e=e.next,r++;return e.value}},r.prototype.indexOf=function(t){for(var e=this.head,r=0;e;){if(e.value===t)return r;e=e.next,r++}},r.prototype.length=function(){return this._length},r.prototype.isEmpty=function(){return 0===this._length},r.prototype.forEach=function(t,e){for(var r=this.head,n=0,i="undefined"!=typeof e;r;)i?t.call(e,r.value,n):t(r.value,n),r=r.next,n++},r.prototype.clear=function(){this.tail=this.head=null,this._length=0},r.Entry=function(t){this.value=t,this.next=null,this.prev=null},t.exports=r},function(t,e){"use strict";function r(t,e,r){"object"==typeof e&&(r=e,e=null);var a,o=this;if(!(t instanceof Function)){a=[];for(var s in t)t.hasOwnProperty(s)&&a.push(s)}var u=function(e){if(o.apply(this,arguments),t instanceof Function?n(this,t.call(this,e)):i(this,t,a),this.constructor===u)for(var r=u.__initializers__,s=0;s<r.length;s++)r[s].apply(this,arguments)};u.__super__=o,o.__initializers__?u.__initializers__=o.__initializers__.slice():u.__initializers__=[],e&&u.__initializers__.push(e);var c=function(){};return c.prototype=o.prototype,u.prototype=new c,u.prototype.constructor=u,n(u.prototype,r),u.extend=o.extend,u.derive=o.extend,u}function n(t,e){if(e)for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])}function i(t,e,r){for(var n=0;n<r.length;n++){var i=r[n];t[i]=e[i]}}t.exports={extend:r,derive:r}},function(t,e){function r(t,e){this.action=t,this.context=e}var n={trigger:function(t){if(this.hasOwnProperty("__handlers__")&&this.__handlers__.hasOwnProperty(t)){var e=this.__handlers__[t],r=e.length,n=-1,i=arguments;switch(i.length){case 1:for(;++n<r;)e[n].action.call(e[n].context);return;case 2:for(;++n<r;)e[n].action.call(e[n].context,i[1]);return;case 3:for(;++n<r;)e[n].action.call(e[n].context,i[1],i[2]);return;case 4:for(;++n<r;)e[n].action.call(e[n].context,i[1],i[2],i[3]);return;case 5:for(;++n<r;)e[n].action.call(e[n].context,i[1],i[2],i[3],i[4]);return;default:for(;++n<r;)e[n].action.apply(e[n].context,Array.prototype.slice.call(i,1));return}}},on:function(t,e,n){if(t&&e){var i=this.__handlers__||(this.__handlers__={});if(i[t]){if(this.has(t,e))return}else i[t]=[];var a=new r(e,n||this);return i[t].push(a),this}},once:function(t,e,r){function n(){i.off(t,n),e.apply(this,arguments)}if(t&&e){var i=this;return this.on(t,n,r)}},before:function(t,e,r){if(t&&e)return t="before"+t,this.on(t,e,r)},after:function(t,e,r){if(t&&e)return t="after"+t,this.on(t,e,r)},success:function(t,e){return this.once("success",t,e)},error:function(t,e){return this.once("error",t,e)},off:function(t,e){var r=this.__handlers__||(this.__handlers__={});if(!e)return void(r[t]=[]);if(r[t]){for(var n=r[t],i=[],a=0;a<n.length;a++)e&&n[a].action!==e&&i.push(n[a]);r[t]=i}return this},has:function(t,e){var r=this.__handlers__;if(!r||!r[t])return!1;for(var n=r[t],i=0;i<n.length;i++)if(n[i].action===e)return!0}};t.exports=n},function(t,e,r){"use strict";var n=r(15),i=n.extend({castShadow:!1},{type:"AMBIENT_LIGHT",uniformTemplates:{ambientLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}}}});t.exports=i},function(t,e,r){"use strict";var n=r(15),i=r(182),a=n.extend({cubemap:null,castShadow:!1,_normalDistribution:null,_brdfLookup:null},{type:"AMBIENT_CUBEMAP_LIGHT",prefilter:function(t){this._brdfLookup||(this._normalDistribution=i.generateNormalDistribution(),this._brdfLookup=i.integrateBRDF(t,this._normalDistribution));var e=this.cubemap;if(!e.__prefiltered){var r=i.prefilterEnvironmentMap(t,e,{encodeRGBM:!0},this._normalDistribution,this._brdfLookup);this.cubemap=r.environmentMap,this.cubemap.__prefiltered=!0,e.dispose(t.gl)}},uniformTemplates:{ambientCubemapLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}},ambientCubemapLightCubemap:{type:"t",value:function(t){return t.cubemap}},ambientCubemapLightBRDFLookup:{type:"t",value:function(t){return t._brdfLookup}}}});t.exports=a},function(t,e,r){"use strict";var n=r(15),i=r(17),a=n.extend({castShadow:!1,coefficients:[]},function(){this._coefficientsTmpArr=new i.Float32Array(27)},{type:"AMBIENT_SH_LIGHT",uniformTemplates:{ambientSHLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}},ambientSHLightCoefficients:{type:"3f",value:function(t){for(var e=t._coefficientsTmpArr,r=0;r<t.coefficients.length;r++)e[r]=t.coefficients[r];return e}}}});t.exports=a},function(t,e,r){"use strict";function n(t,e){return function(r){var n=r.getDevicePixelRatio(),i=r.getWidth(),a=r.getHeight(),o=e(i,a,n);this.setParameter(t,o)}}function i(t,e){return function(t){var r=t.getDevicePixelRatio(),n=t.getWidth(),i=t.getHeight();return e(n,i,r)}}function a(t){var e=/^expr\((.*)\)$/.exec(t);if(e)try{var r=new Function("width","height","dpr","return "+e[1]);return r(1,1),r}catch(t){throw new Error("Invalid expression.")}}var o=r(5),s=r(65),u=r(23),c=r(63),l=(r(27),r(149)),h=r(150),f=r(147),d=r(7),_=r(8),p=r(9),m=r(20),v=/#source\((.*?)\)/,g=/#url\((.*?)\)/,y=o.extend({rootPath:"",textureRootPath:"",shaderRootPath:"",scene:null,camera:null},{load:function(t){var e=this;this.rootPath||(this.rootPath=t.slice(0,t.lastIndexOf("/"))),s.get({url:t,onprogress:function(t,r,n){e.trigger("progress",t,r,n)},onerror:function(t){e.trigger("error",t)},responseType:"text",onload:function(t){e.parse(JSON.parse(t))}})},parse:function(t){var e=this,r=new c,n={textures:{},shaders:{},parameters:{}},i=function(i,a){for(var o=0;o<t.nodes.length;o++){var s=t.nodes[o],u=e._createNode(s,n);u&&r.addNode(u)}e.trigger("success",r)};for(var a in t.parameters){var o=t.parameters[a];n.parameters[a]=this._convertParameter(o)}return this._loadShaders(t,function(r){e._loadTextures(t,n,function(t){n.textures=t,n.shaders=r,i()})}),r},_createNode:function(t,e){var r,i,o,s=t.type||"filter";if("filter"===s){var u=t.shader.trim(),c=v.exec(u);if(c?r=d.source(c[1].trim()):"#"===u.charAt(0)&&(r=e.shaders[u.substr(1)]),r||(r=u),!r)return}if(t.inputs){i={};for(var _ in t.inputs)"string"==typeof t.inputs[_]?i[_]=t.inputs[_]:i[_]={node:t.inputs[_].node,pin:t.inputs[_].pin}}if(t.outputs){o={};for(var _ in t.outputs){var p=t.outputs[_];if(o[_]={},null!=p.attachment&&(o[_].attachment=p.attachment),null!=p.keepLastFrame&&(o[_].keepLastFrame=p.keepLastFrame),null!=p.outputLastFrame&&(o[_].outputLastFrame=p.outputLastFrame),"string"==typeof p.parameters){var m=p.parameters;"#"===m.charAt(0)&&(o[_].parameters=e.parameters[m.substr(1)])}else p.parameters&&(o[_].parameters=this._convertParameter(p.parameters))}}var g;if(g="scene"===s?new l({name:t.name,scene:this.scene,camera:this.camera,outputs:o}):"texture"===s?new h({name:t.name,outputs:o}):new f({name:t.name,shader:r,inputs:i,outputs:o})){if(t.parameters)for(var _ in t.parameters){var y=t.parameters[_];"string"==typeof y&&(y=y.trim(),"#"===y.charAt(0)?y=e.textures[y.substr(1)]:g.on("beforerender",n(_,a(y)))),g.setParameter(_,y)}if(t.defines&&g.pass)for(var _ in t.defines){var y=t.defines[_];g.pass.material.shader.define("fragment",_,y)}}return g},_convertParameter:function(t){var e={};return t?(["type","minFilter","magFilter","wrapS","wrapT","flipY","useMipmap"].forEach(function(r){var n=t[r];null!=n&&("string"==typeof n&&(n=_[n]),e[r]=n)}),["width","height"].forEach(function(r){if(null!=t[r]){var n=t[r];"string"==typeof n?(n=n.trim(),e[r]=i(r,a(n))):e[r]=n}}),null!=t.useMipmap&&(e.useMipmap=t.useMipmap),e):e},_loadShaders:function(t,e){if(!t.shaders)return void e({});var r={},n=0,i=!1,a=this.shaderRootPath||this.rootPath;u.each(t.shaders,function(t,o){var c=g.exec(t);if(c){var l=c[1];l=u.relative2absolute(l,a),n++,s.get({url:l,onload:function(t){r[o]=t,d.import(t),n--,0===n&&(e(r),i=!0)}})}else r[o]=t,d.import(t)},this),0!==n||i||e(r)},_loadTextures:function(t,e,r){if(!t.textures)return void r({});var n={},i=0,a=!1,o=this.textureRootPath||this.rootPath;u.each(t.textures,function(t,e){var s,c=t.path,l=this._convertParameter(t.parameters);if(c instanceof Array&&6===c.length)c=c.map(function(t){return u.relative2absolute(t,o)}),s=new m(l);else{if("string"!=typeof c)return;c=u.relative2absolute(c,o),s=new p(l)}s.load(c),i++,s.once("success",function(){n[e]=s,i--,0===i&&(r(n),a=!0)})},this),0!==i||a||r(n)}});t.exports=y},function(t,e,r){"use strict";var n=r(2),i=n.mat2,a=function(){this._array=i.create(),this._dirty=!0};a.prototype={constructor:a,setArray:function(t){for(var e=0;e<this._array.length;e++)this._array[e]=t[e];return this._dirty=!0,this},clone:function(){return(new a).copy(this)},copy:function(t){return i.copy(this._array,t._array),this._dirty=!0,this},adjoint:function(){return i.adjoint(this._array,this._array),this._dirty=!0,this},determinant:function(){return i.determinant(this._array)},identity:function(){return i.identity(this._array),this._dirty=!0,this},invert:function(){return i.invert(this._array,this._array),this._dirty=!0,this},mul:function(t){return i.mul(this._array,this._array,t._array),this._dirty=!0,this},mulLeft:function(t){return i.mul(this._array,t._array,this._array),this._dirty=!0,this},multiply:function(t){return i.multiply(this._array,this._array,t._array),this._dirty=!0,this},multiplyLeft:function(t){return i.multiply(this._array,t._array,this._array),this._dirty=!0,this},rotate:function(t){return i.rotate(this._array,this._array,t),this._dirty=!0,this},scale:function(t){return i.scale(this._array,this._array,t._array),this._dirty=!0,this},transpose:function(){return i.transpose(this._array,this._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}},a.adjoint=function(t,e){return i.adjoint(t._array,e._array),t._dirty=!0,t},a.copy=function(t,e){return i.copy(t._array,e._array),t._dirty=!0,t},a.determinant=function(t){return i.determinant(t._array)},a.identity=function(t){return i.identity(t._array),t._dirty=!0,t},a.invert=function(t,e){return i.invert(t._array,e._array),t._dirty=!0,t},a.mul=function(t,e,r){return i.mul(t._array,e._array,r._array),t._dirty=!0,t},a.multiply=a.mul,a.rotate=function(t,e,r){return i.rotate(t._array,e._array,r),t._dirty=!0,t},a.scale=function(t,e,r){return i.scale(t._array,e._array,r._array),t._dirty=!0,t},a.transpose=function(t,e){return i.transpose(t._array,e._array),t._dirty=!0,t},t.exports=a},function(t,e,r){"use strict";var n=r(2),i=n.mat2d,a=function(){this._array=i.create(),this._dirty=!0};a.prototype={constructor:a,setArray:function(t){for(var e=0;e<this._array.length;e++)this._array[e]=t[e];return this._dirty=!0,this},clone:function(){return(new a).copy(this)},copy:function(t){return i.copy(this._array,t._array),this._dirty=!0,this},determinant:function(){return i.determinant(this._array)},identity:function(){return i.identity(this._array),this._dirty=!0,this},invert:function(){return i.invert(this._array,this._array),this._dirty=!0,this},mul:function(t){return i.mul(this._array,this._array,t._array),this._dirty=!0,this},mulLeft:function(t){return i.mul(this._array,t._array,this._array),this._dirty=!0,this},multiply:function(t){return i.multiply(this._array,this._array,t._array),this._dirty=!0,this},multiplyLeft:function(t){return i.multiply(this._array,t._array,this._array),this._dirty=!0,this},rotate:function(t){return i.rotate(this._array,this._array,t),this._dirty=!0,this},scale:function(t){return i.scale(this._array,this._array,t._array),this._dirty=!0,this},translate:function(t){return i.translate(this._array,this._array,t._array),
this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}},a.copy=function(t,e){return i.copy(t._array,e._array),t._dirty=!0,t},a.determinant=function(t){return i.determinant(t._array)},a.identity=function(t){return i.identity(t._array),t._dirty=!0,t},a.invert=function(t,e){return i.invert(t._array,e._array),t._dirty=!0,t},a.mul=function(t,e,r){return i.mul(t._array,e._array,r._array),t._dirty=!0,t},a.multiply=a.mul,a.rotate=function(t,e,r){return i.rotate(t._array,e._array,r),t._dirty=!0,t},a.scale=function(t,e,r){return i.scale(t._array,e._array,r._array),t._dirty=!0,t},a.translate=function(t,e,r){return i.translate(t._array,e._array,r._array),t._dirty=!0,t},t.exports=a},function(t,e,r){"use strict";var n=r(2),i=n.mat3,a=function(){this._array=i.create(),this._dirty=!0};a.prototype={constructor:a,setArray:function(t){for(var e=0;e<this._array.length;e++)this._array[e]=t[e];return this._dirty=!0,this},adjoint:function(){return i.adjoint(this._array,this._array),this._dirty=!0,this},clone:function(){return(new a).copy(this)},copy:function(t){return i.copy(this._array,t._array),this._dirty=!0,this},determinant:function(){return i.determinant(this._array)},fromMat2d:function(t){return i.fromMat2d(this._array,t._array),this._dirty=!0,this},fromMat4:function(t){return i.fromMat4(this._array,t._array),this._dirty=!0,this},fromQuat:function(t){return i.fromQuat(this._array,t._array),this._dirty=!0,this},identity:function(){return i.identity(this._array),this._dirty=!0,this},invert:function(){return i.invert(this._array,this._array),this._dirty=!0,this},mul:function(t){return i.mul(this._array,this._array,t._array),this._dirty=!0,this},mulLeft:function(t){return i.mul(this._array,t._array,this._array),this._dirty=!0,this},multiply:function(t){return i.multiply(this._array,this._array,t._array),this._dirty=!0,this},multiplyLeft:function(t){return i.multiply(this._array,t._array,this._array),this._dirty=!0,this},rotate:function(t){return i.rotate(this._array,this._array,t),this._dirty=!0,this},scale:function(t){return i.scale(this._array,this._array,t._array),this._dirty=!0,this},translate:function(t){return i.translate(this._array,this._array,t._array),this._dirty=!0,this},normalFromMat4:function(t){return i.normalFromMat4(this._array,t._array),this._dirty=!0,this},transpose:function(){return i.transpose(this._array,this._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}},a.adjoint=function(t,e){return i.adjoint(t._array,e._array),t._dirty=!0,t},a.copy=function(t,e){return i.copy(t._array,e._array),t._dirty=!0,t},a.determinant=function(t){return i.determinant(t._array)},a.identity=function(t){return i.identity(t._array),t._dirty=!0,t},a.invert=function(t,e){return i.invert(t._array,e._array),t},a.mul=function(t,e,r){return i.mul(t._array,e._array,r._array),t._dirty=!0,t},a.multiply=a.mul,a.fromMat2d=function(t,e){return i.fromMat2d(t._array,e._array),t._dirty=!0,t},a.fromMat4=function(t,e){return i.fromMat4(t._array,e._array),t._dirty=!0,t},a.fromQuat=function(t,e){return i.fromQuat(t._array,e._array),t._dirty=!0,t},a.normalFromMat4=function(t,e){return i.normalFromMat4(t._array,e._array),t._dirty=!0,t},a.rotate=function(t,e,r){return i.rotate(t._array,e._array,r),t._dirty=!0,t},a.scale=function(t,e,r){return i.scale(t._array,e._array,r._array),t._dirty=!0,t},a.transpose=function(t,e){return i.transpose(t._array,e._array),t._dirty=!0,t},a.translate=function(t,e,r){return i.translate(t._array,e._array,r._array),t._dirty=!0,t},t.exports=a},function(t,e,r){"use strict";var n=r(2),i=n.vec4,a=function(t,e,r,n){t=t||0,e=e||0,r=r||0,n=n||0,this._array=i.fromValues(t,e,r,n),this._dirty=!0};a.prototype={constructor:a,add:function(t){return i.add(this._array,this._array,t._array),this._dirty=!0,this},set:function(t,e,r,n){return this._array[0]=t,this._array[1]=e,this._array[2]=r,this._array[3]=n,this._dirty=!0,this},setArray:function(t){return this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3],this._dirty=!0,this},clone:function(){return new a(this.x,this.y,this.z,this.w)},copy:function(t){return i.copy(this._array,t._array),this._dirty=!0,this},dist:function(t){return i.dist(this._array,t._array)},distance:function(t){return i.distance(this._array,t._array)},div:function(t){return i.div(this._array,this._array,t._array),this._dirty=!0,this},divide:function(t){return i.divide(this._array,this._array,t._array),this._dirty=!0,this},dot:function(t){return i.dot(this._array,t._array)},len:function(){return i.len(this._array)},length:function(){return i.length(this._array)},lerp:function(t,e,r){return i.lerp(this._array,t._array,e._array,r),this._dirty=!0,this},min:function(t){return i.min(this._array,this._array,t._array),this._dirty=!0,this},max:function(t){return i.max(this._array,this._array,t._array),this._dirty=!0,this},mul:function(t){return i.mul(this._array,this._array,t._array),this._dirty=!0,this},multiply:function(t){return i.multiply(this._array,this._array,t._array),this._dirty=!0,this},negate:function(){return i.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return i.normalize(this._array,this._array),this._dirty=!0,this},random:function(t){return i.random(this._array,t),this._dirty=!0,this},scale:function(t){return i.scale(this._array,this._array,t),this._dirty=!0,this},scaleAndAdd:function(t,e){return i.scaleAndAdd(this._array,this._array,t._array,e),this._dirty=!0,this},sqrDist:function(t){return i.sqrDist(this._array,t._array)},squaredDistance:function(t){return i.squaredDistance(this._array,t._array)},sqrLen:function(){return i.sqrLen(this._array)},squaredLength:function(){return i.squaredLength(this._array)},sub:function(t){return i.sub(this._array,this._array,t._array),this._dirty=!0,this},subtract:function(t){return i.subtract(this._array,this._array,t._array),this._dirty=!0,this},transformMat4:function(t){return i.transformMat4(this._array,this._array,t._array),this._dirty=!0,this},transformQuat:function(t){return i.transformQuat(this._array,this._array,t._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var o=Object.defineProperty;if(o){var s=a.prototype;o(s,"x",{get:function(){return this._array[0]},set:function(t){this._array[0]=t,this._dirty=!0}}),o(s,"y",{get:function(){return this._array[1]},set:function(t){this._array[1]=t,this._dirty=!0}}),o(s,"z",{get:function(){return this._array[2]},set:function(t){this._array[2]=t,this._dirty=!0}}),o(s,"w",{get:function(){return this._array[3]},set:function(t){this._array[3]=t,this._dirty=!0}})}a.add=function(t,e,r){return i.add(t._array,e._array,r._array),t._dirty=!0,t},a.set=function(t,e,r,n,a){i.set(t._array,e,r,n,a),t._dirty=!0},a.copy=function(t,e){return i.copy(t._array,e._array),t._dirty=!0,t},a.dist=function(t,e){return i.distance(t._array,e._array)},a.distance=a.dist,a.div=function(t,e,r){return i.divide(t._array,e._array,r._array),t._dirty=!0,t},a.divide=a.div,a.dot=function(t,e){return i.dot(t._array,e._array)},a.len=function(t){return i.length(t._array)},a.lerp=function(t,e,r,n){return i.lerp(t._array,e._array,r._array,n),t._dirty=!0,t},a.min=function(t,e,r){return i.min(t._array,e._array,r._array),t._dirty=!0,t},a.max=function(t,e,r){return i.max(t._array,e._array,r._array),t._dirty=!0,t},a.mul=function(t,e,r){return i.multiply(t._array,e._array,r._array),t._dirty=!0,t},a.multiply=a.mul,a.negate=function(t,e){return i.negate(t._array,e._array),t._dirty=!0,t},a.normalize=function(t,e){return i.normalize(t._array,e._array),t._dirty=!0,t},a.random=function(t,e){return i.random(t._array,e),t._dirty=!0,t},a.scale=function(t,e,r){return i.scale(t._array,e._array,r),t._dirty=!0,t},a.scaleAndAdd=function(t,e,r,n){return i.scaleAndAdd(t._array,e._array,r._array,n),t._dirty=!0,t},a.sqrDist=function(t,e){return i.sqrDist(t._array,e._array)},a.squaredDistance=a.sqrDist,a.sqrLen=function(t){return i.sqrLen(t._array)},a.squaredLength=a.sqrLen,a.sub=function(t,e,r){return i.subtract(t._array,e._array,r._array),t._dirty=!0,t},a.subtract=a.sub,a.transformMat4=function(t,e,r){return i.transformMat4(t._array,e._array,r._array),t._dirty=!0,t},a.transformQuat=function(t,e,r){return i.transformQuat(t._array,e._array,r._array),t._dirty=!0,t},t.exports=a},function(t,e,r){var n=r(5),i=r(46),a=r(28),o=r(3),s=r(14),u=r(61),c=r(6),l=n.extend({scene:null,camera:null,renderer:null},function(){this._ray=new i,this._ndc=new a},{pick:function(t,e){var r=this.pickAll(t,e);return r[0]||null},pickAll:function(t,e,r){return this.renderer.screenToNdc(t,e,this._ndc),this.camera.castRay(this._ndc,this._ray),r=r||[],this._intersectNode(this.scene,r),r.sort(this._intersectionCompareFunc),r},_intersectNode:function(t,e){t instanceof u&&t.isRenderable()&&!t.ignorePicking&&t.geometry.isUseIndices()&&this._intersectRenderable(t,e);for(var r=0;r<t._children.length;r++)this._intersectNode(t._children[r],e)},_intersectRenderable:function(){var t=new o,e=new o,r=new o,n=new i,a=new s;return function(i,u){n.copy(this._ray),s.invert(a,i.worldTransform),n.applyTransform(a);var h=i.geometry;if(!h.boundingBox||n.intersectBoundingBox(h.boundingBox)){if(h.pickByRay){var f=h.pickByRay(n);return void(f&&u.push(f))}for(var d,_=i.cullFace===c.BACK&&i.frontFace===c.CCW||i.cullFace===c.FRONT&&i.frontFace===c.CW,p=h.indices,m=h.attributes.position,v=0;v<p.length;v+=3){var g=p[v],y=p[v+1],x=p[v+2];if(m.get(g,t._array),m.get(y,e._array),m.get(x,r._array),d=_?n.intersectTriangle(t,e,r,i.culling):n.intersectTriangle(t,r,e,i.culling)){var T=new o;o.transformMat4(T,d,i.worldTransform),u.push(new l.Intersection(d,T,i,[g,y,x],v/3,o.dist(T,this._ray.origin)))}}}}}(),_intersectionCompareFunc:function(t,e){return t.distance-e.distance}});l.Intersection=function(t,e,r,n,i,a){this.point=t,this.pointWorld=e,this.target=r,this.triangle=n,this.triangleIndex=i,this.distance=a},t.exports=l},function(t,e,r){var n=r(5),i=r(6),a=r(3),o=r(10),s=r(44),u=r(14),c=r(62),l=r(7),h=(r(15),r(24),r(70)),f=r(68),d=r(69),_=(r(75),r(19)),p=r(12),m=r(8),v=r(9),g=r(20),y=r(42),x=r(41),T=r(22),b=r(64),E=r(2),w=E.mat4,S=(E.vec3,["px","nx","py","ny","pz","nz"]);l.import(r(179));var A=n.extend(function(){return{softShadow:A.PCF,shadowBlur:1,lightFrustumBias:2,_frameBuffer:new p,_textures:{},_shadowMapNumber:{POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},_meshMaterials:{},_depthMaterials:{},_depthShaders:{},_distanceMaterials:{},_opaqueCasters:[],_receivers:[],_lightsCastShadow:[],_lightCameras:{},_texturePool:new b}},function(){this._gaussianPassH=new T({fragment:l.source("qtek.compositor.gaussian_blur")}),this._gaussianPassV=new T({fragment:l.source("qtek.compositor.gaussian_blur")}),this._gaussianPassH.setUniform("blurSize",this.shadowBlur),this._gaussianPassH.setUniform("blurDir",0),this._gaussianPassV.setUniform("blurSize",this.shadowBlur),this._gaussianPassV.setUniform("blurDir",1),this._outputDepthPass=new T({fragment:l.source("qtek.sm.debug_depth")})},{render:function(t,e,r,n){this.trigger("beforerender",this,t,e,r),this._renderShadowPass(t,e,r,n),this.trigger("afterrender",this,t,e,r)},renderDebug:function(t,e){t.saveClear();var r=t.viewport,n=0,i=0,a=e||r.width/4,o=a;this.softShadow===A.VSM?this._outputDepthPass.material.shader.define("fragment","USE_VSM"):this._outputDepthPass.material.shader.unDefine("fragment","USE_VSM");for(var s in this._textures){var u=this._textures[s];t.setViewport(n,i,a*u.width/u.height,o),this._outputDepthPass.setUniform("depthMap",u),this._outputDepthPass.render(t),n+=a*u.width/u.height}t.setViewport(r),t.restoreClear()},_bindDepthMaterial:function(t,e,r){for(var n=0;n<t.length;n++){var i,a,o=t[n],s=o.material.shadowTransparentMap instanceof v,u=o.material.shadowTransparentMap,c=o.joints&&o.joints.length;s?(i=c+"-"+u.__GUID__,a=c+"s"):(i=c,a=c);var h=this._depthMaterials[i],f=this._depthShaders[a];o.material!==h&&(f||(f=new l({vertex:l.source("qtek.sm.depth.vertex"),fragment:l.source("qtek.sm.depth.fragment")}),c>0&&(f.define("vertex","SKINNING"),f.define("vertex","JOINT_COUNT",c)),s&&f.define("both","SHADOW_TRANSPARENT"),this._depthShaders[a]=f),h||(h=new _({shader:f}),this._depthMaterials[i]=h),o.material=h,this.softShadow===A.VSM?f.define("fragment","USE_VSM"):f.unDefine("fragment","USE_VSM"),h.setUniform("bias",e),h.setUniform("slopeScale",r),s&&h.set("shadowTransparentMap",u))}},_bindDistanceMaterial:function(t,e){for(var r=e.getWorldPosition()._array,n=0;n<t.length;n++){var i=t[n],a=i.joints&&i.joints.length,o=this._distanceMaterials[a];i.material!==o&&(o||(o=new _({shader:new l({vertex:l.source("qtek.sm.distance.vertex"),fragment:l.source("qtek.sm.distance.fragment")})}),a>0&&(o.shader.define("vertex","SKINNING"),o.shader.define("vertex","JOINT_COUNT",a)),this._distanceMaterials[a]=o),i.material=o,this.softShadow===A.VSM?o.shader.define("fragment","USE_VSM"):o.shader.unDefine("fragment","USE_VSM")),o.set("lightPosition",r),o.set("range",e.range)}},saveMaterial:function(t){for(var e=0;e<t.length;e++){var r=t[e];this._meshMaterials[r.__GUID__]=r.material}},restoreMaterial:function(t){for(var e=0;e<t.length;e++){var r=t[e],n=this._meshMaterials[r.__GUID__];n&&(r.material=n)}},_updateCaster:function(t){t.castShadow&&this._opaqueCasters.push(t),t.receiveShadow?(this._receivers.push(t),t.material.set("shadowEnabled",1)):t.material.set("shadowEnabled",0),this.softShadow===A.VSM?t.material.shader.define("fragment","USE_VSM"):t.material.shader.unDefine("fragment","USE_VSM")},_update:function(t){for(var e=0;e<t.opaqueQueue.length;e++)this._updateCaster(t.opaqueQueue[e]);for(var e=0;e<t.transparentQueue.length;e++)this._updateCaster(t.transparentQueue[e]);for(var e=0;e<t.lights.length;e++){var r=t.lights[e];r.castShadow&&this._lightsCastShadow.push(r)}},_renderShadowPass:function(t,e,r,n){function i(t){return t.height}for(var a in this._shadowMapNumber)this._shadowMapNumber[a]=0;this._lightsCastShadow.length=0,this._opaqueCasters.length=0,this._receivers.length=0;var o=t.gl;if(n||e.update(),this._update(e),this._lightsCastShadow.length){o.enable(o.DEPTH_TEST),o.depthMask(!0),o.disable(o.BLEND),o.clearColor(1,1,1,1);var s=[],u=[],c=[],l=[],_=[],p=[];this.saveMaterial(this._opaqueCasters);for(var m,v=0;v<this._lightsCastShadow.length;v++){var g=this._lightsCastShadow[v];if(g instanceof f){if(m){console.warn("Only one dire light supported with shadow cascade");continue}if(g.shadowCascade>1&&(m=g,g.shadowCascade>4)){console.warn("Support at most 4 cascade");continue}this.renderDirectionalLightShadow(t,e,r,g,this._opaqueCasters,_,l,c)}else g instanceof h?this.renderSpotLightShadow(t,g,this._opaqueCasters,u,s):g instanceof d&&this.renderPointLightShadow(t,g,this._opaqueCasters,p);this._shadowMapNumber[g.type]++}this.restoreMaterial(this._opaqueCasters);var y=_.slice(),x=_.slice();y.pop(),x.shift(),y.reverse(),x.reverse(),l.reverse();for(var T=s.map(i),b=c.map(i),E={},v=0;v<this._receivers.length;v++){var w=this._receivers[v],S=w.material,A=S.shader;if(!E[A.__GUID__]){var M=!1;for(var C in this._shadowMapNumber){var L=this._shadowMapNumber[C],R=C+"_SHADOWMAP_COUNT";A.fragmentDefines[R]!==L&&L>0&&(A.fragmentDefines[R]=L,M=!0)}M&&A.dirty(),m?A.define("fragment","SHADOW_CASCADE",m.shadowCascade):A.unDefine("fragment","SHADOW_CASCADE"),E[A.__GUID__]=!0}s.length>0&&(S.setUniform("spotLightShadowMaps",s),S.setUniform("spotLightMatrices",u),S.setUniform("spotLightShadowMapSizes",T)),c.length>0&&(S.setUniform("directionalLightShadowMaps",c),m&&(S.setUniform("shadowCascadeClipsNear",y),S.setUniform("shadowCascadeClipsFar",x)),S.setUniform("directionalLightMatrices",l),S.setUniform("directionalLightShadowMapSizes",b)),p.length>0&&S.setUniform("pointLightShadowMaps",p)}}},renderDirectionalLightShadow:function(){var t=new s,e=new u,r=new o,n=new u,i=new u,a=new u,l=new u;return function(o,s,h,f,d,_,p,m){var v=f.shadowBias;this._bindDepthMaterial(d,v,f.shadowSlopeScale),d.sort(c.opaqueSortFunc);var g=Math.min(-s.viewBoundingBoxLastFrame.min.z,h.far),y=Math.max(-s.viewBoundingBoxLastFrame.max.z,h.near),x=this._getDirectionalLightCamera(f,s,h),T=a._array;l.copy(x.projectionMatrix),w.invert(i._array,x.worldTransform._array),w.multiply(i._array,i._array,h.worldTransform._array),w.multiply(T,l._array,i._array);for(var b=[],E=h.fov/180*Math.PI,S=h.aspect,M=(h.near+h.far)/(h.near-h.far),C=2*h.near*h.far/(h.near-h.far),L=0;L<=f.shadowCascade;L++){var R=y*Math.pow(g/y,L/f.shadowCascade),N=y+(g-y)*L/f.shadowCascade,D=R*f.cascadeSplitLogFactor+N*(1-f.cascadeSplitLogFactor);b.push(D),_.push(-(-D*M+C)/-D)}var I=this._getTexture(f,f.shadowCascade);m.push(I);var O=o.viewport,P=o.gl;this._frameBuffer.attach(I),this._frameBuffer.bind(o),P.clear(P.COLOR_BUFFER_BIT|P.DEPTH_BUFFER_BIT);for(var L=0;L<f.shadowCascade;L++){var F=b[L],B=b[L+1];w.perspective(e._array,E,S,F,B),t.setFromProjection(e),t.getTransformedBoundingBox(r,i),r.applyProjection(l);var U=r.min._array,k=r.max._array;n.ortho(U[0],k[0],U[1],k[1],1,-1),x.projectionMatrix.multiplyLeft(n);var z=f.shadowResolution||512;o.setViewport((f.shadowCascade-L-1)*z,0,z,z,1);for(var G in this._depthMaterials)this._depthMaterials[G].set("shadowBias",v);o.renderQueue(d,x),this.softShadow===A.VSM&&this._gaussianFilter(o,I,I.width);var V=new u;V.copy(x.worldTransform).invert().multiplyLeft(x.projectionMatrix),p.push(V._array),x.projectionMatrix.copy(l)}this._frameBuffer.unbind(o),o.setViewport(O)}}(),renderSpotLightShadow:function(t,e,r,n,i){this._bindDepthMaterial(r,e.shadowBias,e.shadowSlopeScale),r.sort(c.opaqueSortFunc);var a=this._getTexture(e),o=this._getSpotLightCamera(e),s=t.gl;this._frameBuffer.attach(a),this._frameBuffer.bind(t),s.clear(s.COLOR_BUFFER_BIT|s.DEPTH_BUFFER_BIT),t.renderQueue(r,o),this._frameBuffer.unbind(t),this.softShadow===A.VSM&&this._gaussianFilter(t,a,a.width);var l=new u;l.copy(o.worldTransform).invert().multiplyLeft(o.projectionMatrix),i.push(a),n.push(l._array)},renderPointLightShadow:function(t,e,r,n){var i=this._getTexture(e),a=t.gl;n.push(i),this._bindDistanceMaterial(r,e);for(var o=0;o<6;o++){var s=S[o],u=this._getPointLightCamera(e,s);this._frameBuffer.attach(i,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+o),this._frameBuffer.bind(t),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),t.renderQueue(r,u)}this._frameBuffer.unbind(t)},_gaussianFilter:function(t,e,r){var n={width:r,height:r,type:m.FLOAT},i=(t.gl,this._texturePool.get(n));this._frameBuffer.attach(i),this._frameBuffer.bind(t),this._gaussianPassH.setUniform("texture",e),this._gaussianPassH.setUniform("textureWidth",r),this._gaussianPassH.render(t),this._frameBuffer.attach(e),this._gaussianPassV.setUniform("texture",i),this._gaussianPassV.setUniform("textureHeight",r),this._gaussianPassV.render(t),this._frameBuffer.unbind(t),this._texturePool.put(i)},_getTexture:function(t,e){var r=t.__GUID__,n=this._textures[r],a=t.shadowResolution||512;return e=e||1,n||(n=t instanceof d?new g:new v,n.width=a*e,n.height=a,this.softShadow===A.VSM?(n.type=m.FLOAT,n.anisotropic=4):(n.minFilter=i.NEAREST,n.magFilter=i.NEAREST,n.useMipmap=!1),this._textures[r]=n),n},_getPointLightCamera:function(t,e){this._lightCameras.point||(this._lightCameras.point={px:new y,nx:new y,py:new y,ny:new y,pz:new y,nz:new y});var r=this._lightCameras.point[e];switch(r.far=t.range,r.fov=90,r.position.set(0,0,0),e){case"px":r.lookAt(a.POSITIVE_X,a.NEGATIVE_Y);break;case"nx":r.lookAt(a.NEGATIVE_X,a.NEGATIVE_Y);break;case"py":r.lookAt(a.POSITIVE_Y,a.POSITIVE_Z);break;case"ny":r.lookAt(a.NEGATIVE_Y,a.NEGATIVE_Z);break;case"pz":r.lookAt(a.POSITIVE_Z,a.NEGATIVE_Y);break;case"nz":r.lookAt(a.NEGATIVE_Z,a.NEGATIVE_Y)}return t.getWorldPosition(r.position),r.update(),r},_getDirectionalLightCamera:function(){var t=new u,e=new o,r=new o;return function(n,i,a){this._lightCameras.directional||(this._lightCameras.directional=new x);var o=this._lightCameras.directional;e.copy(i.viewBoundingBoxLastFrame),e.intersection(a.frustum.boundingBox),o.position.copy(e.min).add(e.max).scale(.5).transformMat4(a.worldTransform),o.rotation.copy(n.rotation),o.scale.copy(n.scale),o.updateLocalTransform(),o.updateWorldTransform(),t.copy(o.worldTransform).invert().multiply(a.worldTransform),r.copy(e).applyTransform(t);var s=r.min._array,u=r.max._array;return o.position.scaleAndAdd(o.worldTransform.z,u[2]+this.lightFrustumBias),o.near=0,o.far=-s[2]+u[2]+this.lightFrustumBias,o.left=s[0]-this.lightFrustumBias,o.right=u[0]+this.lightFrustumBias,o.top=u[1]+this.lightFrustumBias,o.bottom=s[1]-this.lightFrustumBias,o.update(!0),o}}(),_getSpotLightCamera:function(t){this._lightCameras.spot||(this._lightCameras.spot=new y);var e=this._lightCameras.spot;return e.fov=2*t.penumbraAngle,e.far=t.range,e.worldTransform.copy(t.worldTransform),e.updateProjectionMatrix(),w.invert(e.viewMatrix._array,e.worldTransform._array),e},dispose:function(t){var e=t.gl||t;for(var r in this._depthMaterials){var n=this._depthMaterials[r];n.dispose(e)}for(var r in this._distanceMaterials){var n=this._distanceMaterials[r];n.dispose(e)}this._frameBuffer&&this._frameBuffer.dispose(e);for(var i in this._textures)this._textures[i].dispose(e);this._texturePool.clear(t.gl),this._depthMaterials={},this._distanceMaterials={},this._textures={},this._lightCameras={},this._shadowMapNumber={POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},this._meshMaterials={};for(var a=0;a<this._receivers.length;a++){var o=this._receivers[a];if(o.material&&o.material.shader){var s=o.material,u=s.shader;u.unDefine("fragment","POINT_LIGHT_SHADOW_COUNT"),u.unDefine("fragment","DIRECTIONAL_LIGHT_SHADOW_COUNT"),u.unDefine("fragment","AMBIENT_LIGHT_SHADOW_COUNT"),s.set("shadowEnabled",0)}}this._opaqueCasters=[],this._receivers=[],this._lightsCastShadow=[]}});A.VSM=1,A.PCF=2,t.exports=A},function(t,e){t.exports="@export qtek.basic.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\n\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 position : POSITION;\n\nattribute vec3 barycentric;\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_COUNT] : SKIN_MATRIX;\n#endif\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Barycentric;\n\nvoid main()\n{\n    vec3 skinnedPosition = position;\n\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n    v_Barycentric = barycentric;\n\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n\n@end\n\n\n\n\n@export qtek.basic.fragment\n\nvarying vec2 v_Texcoord;\nuniform sampler2D diffuseMap;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\n\nuniform float lineWidth : 0.0;\nuniform vec3 lineColor : [0.0, 0.0, 0.0];\nvarying vec3 v_Barycentric;\n\n@import qtek.util.edge_factor\n\n@import qtek.util.rgbm\n\n@import qtek.util.srgb\n\nvoid main()\n{\n\n#ifdef RENDER_TEXCOORD\n    gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n    return;\n#endif\n\n    gl_FragColor = vec4(color, alpha);\n\n#ifdef DIFFUSEMAP_ENABLED\n    vec4 tex = decodeHDR(texture2D(diffuseMap, v_Texcoord));\n\n#ifdef SRGB_DECODE\n    tex = sRGBToLinear(tex);\n#endif\n\n#if defined(DIFFUSEMAP_ALPHA_ALPHA)\n    gl_FragColor.a = tex.a;\n#endif\n\n    gl_FragColor.rgb *= tex.rgb;\n#endif\n\n    gl_FragColor.rgb += emission;\n    if( lineWidth > 0.01)\n    {\n        gl_FragColor.rgb = gl_FragColor.rgb * mix(lineColor, vec3(1.0), edgeFactor(lineWidth));\n    }\n\n#ifdef GAMMA_ENCODE\n        gl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1 / 2.2));\n#endif\n\n    gl_FragColor = encodeHDR(gl_FragColor);\n\n}\n\n@end"},function(t,e){t.exports="@export qtek.compositor.blend\n#ifdef TEXTURE1_ENABLED\nuniform sampler2D texture1;\nuniform float weight1 : 1.0;\n#endif\n#ifdef TEXTURE2_ENABLED\nuniform sampler2D texture2;\nuniform float weight2 : 1.0;\n#endif\n#ifdef TEXTURE3_ENABLED\nuniform sampler2D texture3;\nuniform float weight3 : 1.0;\n#endif\n#ifdef TEXTURE4_ENABLED\nuniform sampler2D texture4;\nuniform float weight4 : 1.0;\n#endif\n#ifdef TEXTURE5_ENABLED\nuniform sampler2D texture5;\nuniform float weight5 : 1.0;\n#endif\n#ifdef TEXTURE6_ENABLED\nuniform sampler2D texture6;\nuniform float weight6 : 1.0;\n#endif\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n    vec4 tex = vec4(0.0);\n#ifdef TEXTURE1_ENABLED\n    tex += decodeHDR(texture2D(texture1, v_Texcoord)) * weight1;\n#endif\n#ifdef TEXTURE2_ENABLED\n    tex += decodeHDR(texture2D(texture2, v_Texcoord)) * weight2;\n#endif\n#ifdef TEXTURE3_ENABLED\n    tex += decodeHDR(texture2D(texture3, v_Texcoord)) * weight3;\n#endif\n#ifdef TEXTURE4_ENABLED\n    tex += decodeHDR(texture2D(texture4, v_Texcoord)) * weight4;\n#endif\n#ifdef TEXTURE5_ENABLED\n    tex += decodeHDR(texture2D(texture5, v_Texcoord)) * weight5;\n#endif\n#ifdef TEXTURE6_ENABLED\n    tex += decodeHDR(texture2D(texture6, v_Texcoord)) * weight6;\n#endif\n\n    gl_FragColor = encodeHDR(tex);\n}\n@end"},function(t,e){t.exports="@export qtek.compositor.kernel.gaussian_9\nfloat gaussianKernel[9];\ngaussianKernel[0] = 0.07;\ngaussianKernel[1] = 0.09;\ngaussianKernel[2] = 0.12;\ngaussianKernel[3] = 0.14;\ngaussianKernel[4] = 0.16;\ngaussianKernel[5] = 0.14;\ngaussianKernel[6] = 0.12;\ngaussianKernel[7] = 0.09;\ngaussianKernel[8] = 0.07;\n@end\n\n@export qtek.compositor.kernel.gaussian_13\n\nfloat gaussianKernel[13];\n\ngaussianKernel[0] = 0.02;\ngaussianKernel[1] = 0.03;\ngaussianKernel[2] = 0.06;\ngaussianKernel[3] = 0.08;\ngaussianKernel[4] = 0.11;\ngaussianKernel[5] = 0.13;\ngaussianKernel[6] = 0.14;\ngaussianKernel[7] = 0.13;\ngaussianKernel[8] = 0.11;\ngaussianKernel[9] = 0.08;\ngaussianKernel[10] = 0.06;\ngaussianKernel[11] = 0.03;\ngaussianKernel[12] = 0.02;\n\n@end\n\n\n@export qtek.compositor.gaussian_blur\n\nuniform sampler2D texture; varying vec2 v_Texcoord;\n\nuniform float blurSize : 2.0;\nuniform vec2 textureSize : [512.0, 512.0];\nuniform float blurDir : 0.0;\n\n@import qtek.util.rgbm\n@import qtek.util.clamp_sample\n\nvoid main (void)\n{\n    @import qtek.compositor.kernel.gaussian_9\n\n    vec2 off = blurSize / textureSize;\n    off *= vec2(1.0 - blurDir, blurDir);\n\n    vec4 sum = vec4(0.0);\n    float weightAll = 0.0;\n\n        for (int i = 0; i < 9; i++) {\n        float w = gaussianKernel[i];\n                sum += decodeHDR(clampSample(texture, v_Texcoord + float(i - 4) * off)) * w;\n        weightAll += w;\n    }\n    gl_FragColor = encodeHDR(sum / weightAll);\n}\n\n@end\n\n@export qtek.compositor.box_blur\n\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 3.0;\nuniform vec2 textureSize : [512.0, 512.0];\n\n@import qtek.util.rgbm\n@import qtek.util.clamp_sample\n\nvoid main(void)\n{\n\n    vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n    vec2 offset = blurSize / textureSize;\n\n    tex += decodeHDR(clampSample(texture, v_Texcoord + vec2(offset.x, 0.0) ));\n    tex += decodeHDR(clampSample(texture, v_Texcoord + vec2(offset.x, offset.y) ));\n    tex += decodeHDR(clampSample(texture, v_Texcoord + vec2(-offset.x, offset.y) ));\n    tex += decodeHDR(clampSample(texture, v_Texcoord + vec2(0.0, offset.y) ));\n    tex += decodeHDR(clampSample(texture, v_Texcoord + vec2(-offset.x, 0.0) ));\n    tex += decodeHDR(clampSample(texture, v_Texcoord + vec2(-offset.x, -offset.y) ));\n    tex += decodeHDR(clampSample(texture, v_Texcoord + vec2(offset.x, -offset.y) ));\n    tex += decodeHDR(clampSample(texture, v_Texcoord + vec2(0.0, -offset.y) ));\n\n    tex /= 9.0;\n\n    \n    gl_FragColor = encodeHDR(tex);\n}\n\n@end"},function(t,e){t.exports="@export qtek.compositor.bright\n\nuniform sampler2D texture;\n\nuniform float threshold : 1;\nuniform float scale : 1.0;\n\nuniform vec2 textureSize: [512, 512];\n\nvarying vec2 v_Texcoord;\n\nconst vec3 lumWeight = vec3(0.2125, 0.7154, 0.0721);\n\n@import qtek.util.rgbm\n\n\nvec3 median(vec3 a, vec3 b, vec3 c)\n{\n    return a + b + c - min(min(a, b), c) - max(max(a, b), c);\n}\n\nvoid main()\n{\n    vec3 texel = decodeHDR(texture2D(texture, v_Texcoord)).rgb;\n\n#ifdef ANTI_FLICKER\n            vec3 d = 1.0 / textureSize.xyx * vec3(1.0, 1.0, 0.0);\n\n    vec3 s1 = decodeHDR(texture2D(texture, v_Texcoord - d.xz)).rgb;\n    vec3 s2 = decodeHDR(texture2D(texture, v_Texcoord + d.xz)).rgb;\n    vec3 s3 = decodeHDR(texture2D(texture, v_Texcoord - d.zy)).rgb;\n    vec3 s4 = decodeHDR(texture2D(texture, v_Texcoord + d.zy)).rgb;\n    texel = median(median(texel, s1, s2), s3, s4);\n\n#endif\n\n    float lum = dot(texel, lumWeight);\n    vec4 color;\n    if (lum > threshold)\n    {\n        color.rgb = texel * scale;\n    }\n    else\n    {\n        color.rgb = vec3(0.0);\n    }\n    color.a = 1.0;\n\n    gl_FragColor = encodeHDR(color);\n}\n@end\n"},function(t,e){t.exports="@export qtek.compositor.dof.coc\n\nuniform sampler2D depth;\n\nuniform float zNear: 0.1;\nuniform float zFar: 2000;\n\nuniform float focalDist: 3;\nuniform float focalRange: 1;\nuniform float focalLength: 30;\nuniform float fstop: 0.36;\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.encode_float\n\nvoid main()\n{\n    float z = texture2D(depth, v_Texcoord).r;\n\n    float dist = 2.0 * zNear * zFar / (zFar + zNear - z * (zFar - zNear));\n\n    float aperture = 1.0 / fstop;\n\n    float coc;\n\n    float uppper = focalDist + focalRange;\n    float lower = focalDist - focalRange;\n    if (dist <= uppper && dist >= lower) {\n                coc = 0.5;\n    }\n    else {\n                float focalAdjusted = dist > uppper ? uppper : lower;\n\n                coc = abs(aperture * (focalLength * (dist - focalAdjusted)) / (dist * (focalAdjusted - focalLength)));\n                                coc = clamp(coc, 0.0, 0.4) / 0.4000001;\n\n                if (dist < lower) {\n            coc = -coc;\n        }\n        coc = coc * 0.5 + 0.5;\n    }\n\n        gl_FragColor = encodeFloat(coc);\n}\n\n@end\n\n@export qtek.compositor.dof.premultiply\n\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\n\n@import qtek.util.decode_float\n\nvoid main() {\n    float fCoc = max(abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0), 0.1);\n    gl_FragColor = encodeHDR(\n        vec4(decodeHDR(texture2D(texture, v_Texcoord)).rgb * fCoc, 1.0)\n    );\n}\n@end\n\n\n@export qtek.compositor.dof.min_coc\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform vec2 textureSize : [512.0, 512.0];\n\n@import qtek.util.float\n\nvoid main()\n{\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n\n    float fCoc = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n    fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zy)));\n    fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.xw)));\n    fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zw)));\n\n    gl_FragColor = encodeFloat(fCoc);\n}\n\n@end\n\n\n@export qtek.compositor.dof.max_coc\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform vec2 textureSize : [512.0, 512.0];\n\n@import qtek.util.float\n\nvoid main()\n{\n\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n\n    float fCoc = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n    fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zy)));\n    fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.xw)));\n    fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zw)));\n\n    gl_FragColor = encodeFloat(fCoc);\n}\n\n@end\n\n\n\n\n@export qtek.compositor.dof.coc_upsample\n\n#define HIGH_QUALITY\n\nuniform sampler2D coc;\nuniform vec2 textureSize : [512, 512];\n\nuniform float sampleScale: 0.5;\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.float\n\nvoid main()\n{\n\n#ifdef HIGH_QUALITY\n        vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n\n    float s;\n    s  = decodeFloat(texture2D(coc, v_Texcoord - d.xy));\n    s += decodeFloat(texture2D(coc, v_Texcoord - d.wy)) * 2.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord - d.zy));\n\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zw)) * 2.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord       )) * 4.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.xw)) * 2.0;\n\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zy));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.wy)) * 2.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n\n    gl_FragColor = encodeFloat(s / 16.0);\n#else\n        vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n\n    float s;\n    s  = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zy));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.xw));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zw));\n\n    gl_FragColor = encodeFloat(s / 4.0);\n#endif\n}\n\n@end\n\n\n\n@export qtek.compositor.dof.upsample\n\n#define HIGH_QUALITY\n\nuniform sampler2D coc;\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\n\nuniform float sampleScale: 0.5;\n\nvarying vec2 v_Texcoord;\n\n\n@import qtek.util.rgbm\n\n@import qtek.util.decode_float\n\nfloat tap(vec2 uv, inout vec4 color, float baseWeight) {\n    float weight = abs(decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0) * baseWeight;\n    color += decodeHDR(texture2D(texture, uv)) * weight;\n    return weight;\n}\n\nvoid main()\n{\n#ifdef HIGH_QUALITY\n        vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n\n    vec4 color = vec4(0.0);\n    float baseWeight = 1.0 / 16.0;\n    float w  = tap(v_Texcoord - d.xy, color, baseWeight);\n    w += tap(v_Texcoord - d.wy, color, baseWeight * 2.0);\n    w += tap(v_Texcoord - d.zy, color, baseWeight);\n\n    w += tap(v_Texcoord + d.zw, color, baseWeight * 2.0);\n    w += tap(v_Texcoord       , color, baseWeight * 4.0);\n    w += tap(v_Texcoord + d.xw, color, baseWeight * 2.0);\n\n    w += tap(v_Texcoord + d.zy, color, baseWeight);\n    w += tap(v_Texcoord + d.wy, color, baseWeight * 2.0);\n    w += tap(v_Texcoord + d.xy, color, baseWeight);\n\n    gl_FragColor = encodeHDR(color / w);\n#else\n        vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n\n    vec4 color = vec4(0.0);\n    float baseWeight = 1.0 / 4.0;\n    float w  = tap(v_Texcoord + d.xy, color, baseWeight);\n    w += tap(v_Texcoord + d.zy, color, baseWeight);\n    w += tap(v_Texcoord + d.xw, color, baseWeight);\n    w += tap(v_Texcoord + d.zw, color, baseWeight);\n\n    gl_FragColor = encodeHDR(color / w);\n#endif\n}\n\n@end\n\n\n\n@export qtek.compositor.dof.downsample\n\nuniform sampler2D texture;\nuniform sampler2D coc;\nuniform vec2 textureSize : [512, 512];\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\n\n@import qtek.util.decode_float\n\nfloat tap(vec2 uv, inout vec4 color) {\n    float weight = abs(decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0) * 0.25;\n    color += decodeHDR(texture2D(texture, uv)) * weight;\n    return weight;\n}\n\nvoid main()\n{\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n\n    vec4 color = vec4(0.0);\n    float weight = tap(v_Texcoord + d.xy, color);\n    weight += tap(v_Texcoord + d.zy, color);\n    weight += tap(v_Texcoord + d.xw, color);\n    weight += tap(v_Texcoord + d.zw, color);\n    color /= weight;\n\n    gl_FragColor = encodeHDR(color);\n}\n\n@end\n\n\n\n@export qtek.compositor.dof.hexagonal_blur_frag\n\n@import qtek.util.float\n\n\nvec4 doBlur(sampler2D targetTexture, vec2 offset) {\n#ifdef BLUR_COC\n    float cocSum = 0.0;\n#else\n    vec4 color = vec4(0.0);\n#endif\n\n    float weightSum = 0.0;\n    float kernelWeight = 1.0 / float(KERNEL_SIZE);\n\n    for (int i = 0; i < KERNEL_SIZE; i++) {\n        vec2 coord = v_Texcoord + offset * float(i);\n\n        float w = kernelWeight;\n#ifdef BLUR_COC\n        float fCoc = decodeFloat(texture2D(targetTexture, coord)) * 2.0 - 1.0;\n                cocSum += clamp(fCoc, -1.0, 0.0) * w;\n#else\n        float fCoc = decodeFloat(texture2D(coc, coord)) * 2.0 - 1.0;\n        vec4 texel = texture2D(targetTexture, coord);\n    #if !defined(BLUR_NEARFIELD)\n        w *= abs(fCoc);\n    #endif\n        color += decodeHDR(texel) * w;\n#endif\n\n        weightSum += w;\n    }\n#ifdef BLUR_COC\n    return encodeFloat(clamp(cocSum / weightSum, -1.0, 0.0) * 0.5 + 0.5);\n#else\n    return color / weightSum;\n#endif\n}\n\n@end\n\n\n@export qtek.compositor.dof.hexagonal_blur_1\n\n#define KERNEL_SIZE 5\n\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 1.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\n@import qtek.util.rgbm\n\n@import qtek.compositor.dof.hexagonal_blur_frag\n\nvoid main()\n{\n    vec2 offset = blurSize / textureSize;\n\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n    offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n\n        gl_FragColor = doBlur(texture, vec2(0.0, offset.y));\n#if !defined(BLUR_COC)\n    gl_FragColor = encodeHDR(gl_FragColor);\n#endif\n}\n\n@end\n\n@export qtek.compositor.dof.hexagonal_blur_2\n\n#define KERNEL_SIZE 5\n\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 1.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\n@import qtek.util.rgbm\n\n@import qtek.compositor.dof.hexagonal_blur_frag\n\nvoid main()\n{\n    vec2 offset = blurSize / textureSize;\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n    offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n\n    offset.y /= 2.0;\n\n        gl_FragColor = doBlur(texture, -offset);\n#if !defined(BLUR_COC)\n    gl_FragColor = encodeHDR(gl_FragColor);\n#endif\n}\n@end\n\n@export qtek.compositor.dof.hexagonal_blur_3\n\n#define KERNEL_SIZE 5\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform sampler2D coc;\n\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 1.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\n@import qtek.util.rgbm\n\n@import qtek.compositor.dof.hexagonal_blur_frag\n\nvoid main()\n{\n    vec2 offset = blurSize / textureSize;\n\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n    offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n\n    offset.y /= 2.0;\n    vec2 vDownRight = vec2(offset.x, -offset.y);\n\n        vec4 texel1 = doBlur(texture1, -offset);\n        vec4 texel2 = doBlur(texture1, vDownRight);\n        vec4 texel3 = doBlur(texture2, vDownRight);\n\n#ifdef BLUR_COC\n    float coc1 = decodeFloat(texel1) * 2.0 - 1.0;\n    float coc2 = decodeFloat(texel2) * 2.0 - 1.0;\n    float coc3 = decodeFloat(texel3) * 2.0 - 1.0;\n    gl_FragColor = encodeFloat(\n        ((coc1 + coc2 + coc3) / 3.0) * 0.5 + 0.5\n    );\n\n#else\n    vec4 color = (texel1 + texel2 + texel3) / 3.0;\n    gl_FragColor = encodeHDR(color);\n#endif\n}\n\n@end\n\n@export qtek.compositor.dof.composite\n\n#define DEBUG 0\n\nuniform sampler2D original;\nuniform sampler2D blurred;\nuniform sampler2D nearfield;\nuniform sampler2D coc;\nuniform sampler2D nearcoc;\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\n@import qtek.util.float\n\nvoid main()\n{\n    vec4 blurredColor = decodeHDR(texture2D(blurred, v_Texcoord));\n    vec4 originalColor = decodeHDR(texture2D(original, v_Texcoord));\n\n    float fCoc = decodeFloat(texture2D(coc, v_Texcoord));\n\n        blurredColor.rgb /= max(fCoc, 0.1);\n    fCoc = abs(fCoc * 2.0 - 1.0);\n\n        float weight = fCoc;\n\n#ifdef NEARFIELD_ENABLED\n    vec4 nearfieldColor = decodeHDR(texture2D(nearfield, v_Texcoord));\n    float fNearCoc = decodeFloat(texture2D(nearcoc, v_Texcoord));\n    fNearCoc = abs(fNearCoc * 2.0 - 1.0);\n\n        gl_FragColor = encodeHDR(\n        mix(\n            nearfieldColor, vec4(mix(originalColor.rgb, blurredColor.rgb, weight), 1.0),\n                        pow(1.0 - fNearCoc, 4.0)\n        )\n    );\n#else\n    gl_FragColor = encodeHDR(vec4(mix(originalColor.rgb, blurredColor.rgb, weight), 1.0));\n#endif\n\n#if DEBUG == 1\n        gl_FragColor = vec4(vec3(fCoc), 1.0);\n#elif DEBUG == 2\n        gl_FragColor = vec4(vec3(fNearCoc), 1.0);\n#elif DEBUG == 3\n    gl_FragColor = encodeHDR(blurredColor);\n#elif DEBUG == 4\n        gl_FragColor = encodeHDR(nearfieldColor);\n#endif\n}\n\n@end";
},function(t,e){t.exports="@export qtek.compositor.downsample\n\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\nfloat brightness(vec3 c)\n{\n    return max(max(c.r, c.g), c.b);\n}\n\n@import qtek.util.clamp_sample\n\nvoid main()\n{\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n\n#ifdef ANTI_FLICKER\n            vec3 s1 = decodeHDR(clampSample(texture, v_Texcoord + d.xy)).rgb;\n    vec3 s2 = decodeHDR(clampSample(texture, v_Texcoord + d.zy)).rgb;\n    vec3 s3 = decodeHDR(clampSample(texture, v_Texcoord + d.xw)).rgb;\n    vec3 s4 = decodeHDR(clampSample(texture, v_Texcoord + d.zw)).rgb;\n\n        float s1w = 1.0 / (brightness(s1) + 1.0);\n    float s2w = 1.0 / (brightness(s2) + 1.0);\n    float s3w = 1.0 / (brightness(s3) + 1.0);\n    float s4w = 1.0 / (brightness(s4) + 1.0);\n    float oneDivideSum = 1.0 / (s1w + s2w + s3w + s4w);\n\n    vec4 color = vec4(\n        (s1 * s1w + s2 * s2w + s3 * s3w + s4 * s4w) * oneDivideSum,\n        1.0\n    );\n#else\n    vec4 color = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n    color += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n    color += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n    color += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n    color *= 0.25;\n#endif\n\n    gl_FragColor = encodeHDR(color);\n}\n\n@end"},function(t,e){t.exports="@export qtek.compositor.fxaa\n\nuniform sampler2D texture;\nuniform vec4 viewport : VIEWPORT;\n\nvarying vec2 v_Texcoord;\n\n#define FXAA_REDUCE_MIN   (1.0/128.0)\n#define FXAA_REDUCE_MUL   (1.0/8.0)\n#define FXAA_SPAN_MAX     8.0\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n    vec2 resolution = 1.0 / viewport.zw;\n    vec3 rgbNW =  decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ) ).xyz;\n    vec3 rgbNE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ) ).xyz;\n    vec3 rgbSW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ) ).xyz;\n    vec3 rgbSE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ) ).xyz;\n    vec4 rgbaM  = decodeHDR( texture2D( texture,  gl_FragCoord.xy  * resolution ) );\n    vec3 rgbM  = rgbaM.xyz;\n    float opacity  = rgbaM.w;\n\n    vec3 luma = vec3( 0.299, 0.587, 0.114 );\n\n    float lumaNW = dot( rgbNW, luma );\n    float lumaNE = dot( rgbNE, luma );\n    float lumaSW = dot( rgbSW, luma );\n    float lumaSE = dot( rgbSE, luma );\n    float lumaM  = dot( rgbM,  luma );\n    float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\n    float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\n\n    vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n    float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\n\n    float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\n    dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\n          max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n                dir * rcpDirMin)) * resolution;\n\n    vec3 rgbA = decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ) ).xyz;\n    rgbA += decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ) ).xyz;\n    rgbA *= 0.5;\n\n    vec3 rgbB = decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * -0.5 ) ).xyz;\n    rgbB += decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * 0.5 ) ).xyz;\n    rgbB *= 0.25;\n    rgbB += rgbA * 0.5;\n\n    float lumaB = dot( rgbB, luma );\n\n    if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) )\n    {\n                gl_FragColor = vec4( rgbA, opacity );\n\n    }\n    else {\n\n        gl_FragColor = vec4( rgbB, opacity );\n\n    }\n}\n\n@end"},function(t,e){t.exports="@export qtek.compositor.hdr.log_lum\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\n\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n    vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n    float luminance = dot(tex.rgb, w);\n    luminance = log(luminance + 0.001);\n\n    gl_FragColor = encodeHDR(vec4(vec3(luminance), 1.0));\n}\n\n@end\n\n@export qtek.compositor.hdr.lum_adaption\nvarying vec2 v_Texcoord;\n\nuniform sampler2D adaptedLum;\nuniform sampler2D currentLum;\n\nuniform float frameTime : 0.02;\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n    float fAdaptedLum = decodeHDR(texture2D(adaptedLum, vec2(0.5, 0.5))).r;\n    float fCurrentLum = exp(encodeHDR(texture2D(currentLum, vec2(0.5, 0.5))).r);\n\n    fAdaptedLum += (fCurrentLum - fAdaptedLum) * (1.0 - pow(0.98, 30.0 * frameTime));\n    gl_FragColor = encodeHDR(vec4(vec3(fAdaptedLum), 1.0));\n}\n@end\n\n@export qtek.compositor.hdr.composite\n\nuniform sampler2D texture;\n#ifdef BLOOM_ENABLED\nuniform sampler2D bloom;\n#endif\n#ifdef LENSFLARE_ENABLED\nuniform sampler2D lensflare;\nuniform sampler2D lensdirt;\n#endif\n\n#ifdef LUM_ENABLED\nuniform sampler2D lum;\n#endif\n\n#ifdef LUT_ENABLED\nuniform sampler2D lut;\n#endif\n\n#ifdef VIGNETTE\nuniform float vignetteDarkness: 1.0;\nuniform float vignetteOffset: 1.0;\n#endif\n\nuniform float exposure : 1.0;\nuniform float bloomIntensity : 0.25;\nuniform float lensflareIntensity : 1;\n\nvarying vec2 v_Texcoord;\n\nconst vec3 whiteScale = vec3(11.2);\n\n@import qtek.util.srgb\n\nvec3 uncharted2ToneMap(vec3 x)\n{\n    const float A = 0.22;       const float B = 0.30;       const float C = 0.10;       const float D = 0.20;       const float E = 0.01;       const float F = 0.30;   \n    return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\n}\n\nvec3 filmicToneMap(vec3 color)\n{\n    vec3 x = max(vec3(0.0), color - 0.004);\n    return (x*(6.2*x+0.5))/(x*(6.2*x+1.7)+0.06);\n}\n\nvec3 ACESToneMapping(vec3 color)\n{\n    const float A = 2.51;\n    const float B = 0.03;\n    const float C = 2.43;\n    const float D = 0.59;\n    const float E = 0.14;\n    return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\n\nfloat eyeAdaption(float fLum)\n{\n    return mix(0.2, fLum, 0.5);\n}\n\n#ifdef LUT_ENABLED\nvec3 lutTransform(vec3 color) {\n    float blueColor = color.b * 63.0;\n\n    vec2 quad1;\n    quad1.y = floor(floor(blueColor) / 8.0);\n    quad1.x = floor(blueColor) - (quad1.y * 8.0);\n\n    vec2 quad2;\n    quad2.y = floor(ceil(blueColor) / 8.0);\n    quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n\n    vec2 texPos1;\n    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n\n    vec2 texPos2;\n    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n\n    vec4 newColor1 = texture2D(lut, texPos1);\n    vec4 newColor2 = texture2D(lut, texPos2);\n\n    vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n    return newColor.rgb;\n}\n#endif\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n        vec4 texel = vec4(0.0);\n#ifdef TEXTURE_ENABLED\n    texel += decodeHDR(texture2D(texture, v_Texcoord));\n#endif\n\n#ifdef BLOOM_ENABLED\n    texel += decodeHDR(texture2D(bloom, v_Texcoord)) * bloomIntensity;\n#endif\n\n#ifdef LENSFLARE_ENABLED\n    texel += decodeHDR(texture2D(lensflare, v_Texcoord)) * texture2D(lensdirt, v_Texcoord) * lensflareIntensity;\n#endif\n\n#ifdef LUM_ENABLED\n    float fLum = texture2D(lum, vec2(0.5, 0.5)).r;\n    float adaptedLumDest = 3.0 / (max(0.1, 1.0 + 10.0*eyeAdaption(fLum)));\n    float exposureBias = adaptedLumDest * exposure;\n#else\n    float exposureBias = exposure;\n#endif\n    texel.rgb *= exposureBias;\n\n                texel.rgb = ACESToneMapping(texel.rgb);\n    texel = linearTosRGB(texel);\n\n#ifdef LUT_ENABLED\n    texel.rgb = lutTransform(clamp(texel.rgb,vec3(0.0),vec3(1.0)));\n#endif\n\n#ifdef VIGNETTE\n    vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(vignetteOffset);\n    texel.rgb = mix(texel.rgb, vec3(1.0 - vignetteDarkness), dot(uv, uv));\n#endif\n\n    gl_FragColor = encodeHDR(texel);\n\n#ifdef DEBUG\n        #if DEBUG == 1\n    gl_FragColor = encodeHDR(decodeHDR(texture2D(texture, v_Texcoord)));\n        #elif DEBUG == 2\n    gl_FragColor = encodeHDR(decodeHDR(texture2D(bloom, v_Texcoord)).rgb * bloomIntensity);\n        #elif DEBUG == 3\n    gl_FragColor = encodeHDR(decodeHDR(texture2D(lensflare, v_Texcoord).rgb * lensflareIntensity));\n    #endif\n#endif\n}\n\n@end"},function(t,e){t.exports="@export qtek.compositor.lensflare\n\n#define SAMPLE_NUMBER 8\n\nuniform sampler2D texture;\nuniform sampler2D lenscolor;\n\nuniform vec2 textureSize : [512, 512];\n\nuniform float dispersal : 0.3;\nuniform float haloWidth : 0.4;\nuniform float distortion : 1.0;\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\n\nvec4 textureDistorted(\n    in vec2 texcoord,\n    in vec2 direction,\n    in vec3 distortion\n) {\n    return vec4(\n        decodeHDR(texture2D(texture, texcoord + direction * distortion.r)).r,\n        decodeHDR(texture2D(texture, texcoord + direction * distortion.g)).g,\n        decodeHDR(texture2D(texture, texcoord + direction * distortion.b)).b,\n        1.0\n    );\n}\n\nvoid main()\n{\n    vec2 texcoord = -v_Texcoord + vec2(1.0);     vec2 textureOffset = 1.0 / textureSize;\n\n    vec2 ghostVec = (vec2(0.5) - texcoord) * dispersal;\n    vec2 haloVec = normalize(ghostVec) * haloWidth;\n\n    vec3 distortion = vec3(-textureOffset.x * distortion, 0.0, textureOffset.x * distortion);\n        vec4 result = vec4(0.0);\n    for (int i = 0; i < SAMPLE_NUMBER; i++)\n    {\n        vec2 offset = fract(texcoord + ghostVec * float(i));\n\n        float weight = length(vec2(0.5) - offset) / length(vec2(0.5));\n        weight = pow(1.0 - weight, 10.0);\n\n        result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n    }\n\n    result *= texture2D(lenscolor, vec2(length(vec2(0.5) - texcoord)) / length(vec2(0.5)));\n        float weight = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\n    weight = pow(1.0 - weight, 10.0);\n    vec2 offset = fract(texcoord + haloVec);\n    result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n\n    gl_FragColor = result;\n}\n@end"},function(t,e){t.exports="\n@export qtek.compositor.lut\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\nuniform sampler2D lookup;\n\nvoid main()\n{\n\n    vec4 tex = texture2D(texture, v_Texcoord);\n\n    float blueColor = tex.b * 63.0;\n\n    vec2 quad1;\n    quad1.y = floor(floor(blueColor) / 8.0);\n    quad1.x = floor(blueColor) - (quad1.y * 8.0);\n\n    vec2 quad2;\n    quad2.y = floor(ceil(blueColor) / 8.0);\n    quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n\n    vec2 texPos1;\n    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n\n    vec2 texPos2;\n    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n\n    vec4 newColor1 = texture2D(lookup, texPos1);\n    vec4 newColor2 = texture2D(lookup, texPos2);\n\n    vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n    gl_FragColor = vec4(newColor.rgb, tex.w);\n}\n\n@end"},function(t,e){t.exports="@export qtek.compositor.output\n\n#define OUTPUT_ALPHA\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n    vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n\n    gl_FragColor.rgb = tex.rgb;\n\n#ifdef OUTPUT_ALPHA\n    gl_FragColor.a = tex.a;\n#else\n    gl_FragColor.a = 1.0;\n#endif\n\n    gl_FragColor = encodeHDR(gl_FragColor);\n}\n\n@end"},function(t,e){t.exports="\n@export qtek.compositor.upsample\n\n#define HIGH_QUALITY\n\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\n\nuniform float sampleScale: 0.5;\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\n\n@import qtek.util.clamp_sample\n\nvoid main()\n{\n\n#ifdef HIGH_QUALITY\n        vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n\n    vec4 s;\n    s  = decodeHDR(clampSample(texture, v_Texcoord - d.xy));\n    s += decodeHDR(clampSample(texture, v_Texcoord - d.wy)) * 2.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord - d.zy));\n\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zw)) * 2.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord       )) * 4.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.xw)) * 2.0;\n\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.wy)) * 2.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n\n    gl_FragColor = encodeHDR(s / 16.0);\n#else\n        vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n\n    vec4 s;\n    s  = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n\n    gl_FragColor = encodeHDR(s / 4.0);\n#endif\n}\n\n@end"},function(t,e){t.exports="\n@export qtek.compositor.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n\nvarying vec2 v_Texcoord;\n\nvoid main()\n{\n    v_Texcoord = texcoord;\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n\n@end"},function(t,e){t.exports="vec3 calcAmbientSHLight(int idx, vec3 N) {\n    int offset = 9 * idx;\n\n        return ambientSHLightCoefficients[0]\n        + ambientSHLightCoefficients[1] * N.x\n        + ambientSHLightCoefficients[2] * N.y\n        + ambientSHLightCoefficients[3] * N.z\n        + ambientSHLightCoefficients[4] * N.x * N.z\n        + ambientSHLightCoefficients[5] * N.z * N.y\n        + ambientSHLightCoefficients[6] * N.y * N.x\n        + ambientSHLightCoefficients[7] * (3.0 * N.z * N.z - 1.0)\n        + ambientSHLightCoefficients[8] * (N.x * N.x - N.y * N.y);\n}"},function(t,e,r){var n="uniform vec3 ",i="uniform float ",a="@export qtek.header.",o="@end",s=":unconfigurable;";t.exports=[a+"directional_light",n+"directionalLightDirection[DIRECTIONAL_LIGHT_COUNT]"+s,n+"directionalLightColor[DIRECTIONAL_LIGHT_COUNT]"+s,o,a+"ambient_light",n+"ambientLightColor[AMBIENT_LIGHT_COUNT]"+s,o,a+"ambient_sh_light",n+"ambientSHLightColor[AMBIENT_SH_LIGHT_COUNT]"+s,n+"ambientSHLightCoefficients[AMBIENT_SH_LIGHT_COUNT * 9]"+s,r(177),o,a+"ambient_cubemap_light",n+"ambientCubemapLightColor[AMBIENT_CUBEMAP_LIGHT_COUNT]"+s,"uniform samplerCube ambientCubemapLightCubemap[AMBIENT_CUBEMAP_LIGHT_COUNT]"+s,"uniform sampler2D ambientCubemapLightBRDFLookup[AMBIENT_CUBEMAP_LIGHT_COUNT]"+s,o,a+"point_light",n+"pointLightPosition[POINT_LIGHT_COUNT]"+s,i+"pointLightRange[POINT_LIGHT_COUNT]"+s,n+"pointLightColor[POINT_LIGHT_COUNT]"+s,o,a+"spot_light",n+"spotLightPosition[SPOT_LIGHT_COUNT]"+s,n+"spotLightDirection[SPOT_LIGHT_COUNT]"+s,i+"spotLightRange[SPOT_LIGHT_COUNT]"+s,i+"spotLightUmbraAngleCosine[SPOT_LIGHT_COUNT]"+s,i+"spotLightPenumbraAngleCosine[SPOT_LIGHT_COUNT]"+s,i+"spotLightFalloffFactor[SPOT_LIGHT_COUNT]"+s,n+"spotLightColor[SPOT_LIGHT_COUNT]"+s,o].join("\n")},function(t,e){t.exports="@export qtek.sm.depth.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\n\n#ifdef SHADOW_TRANSPARENT\nattribute vec2 texcoord : TEXCOORD_0;\n#endif\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_COUNT] : SKIN_MATRIX;\n#endif\n\nvarying vec4 v_ViewPosition;\n\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\n\nvoid main(){\n\n    vec3 skinnedPosition = position;\n\n#ifdef SKINNING\n\n    @import qtek.chunk.skin_matrix\n\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n\n    v_ViewPosition = worldViewProjection * vec4(skinnedPosition, 1.0);\n    gl_Position = v_ViewPosition;\n\n#ifdef SHADOW_TRANSPARENT\n    v_Texcoord = texcoord;\n#endif\n}\n@end\n\n@export qtek.sm.depth.fragment\n\nvarying vec4 v_ViewPosition;\n\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\n\nuniform float bias : 0.001;\nuniform float slopeScale : 1.0;\n\n#ifdef SHADOW_TRANSPARENT\nuniform sampler2D transparentMap;\n#endif\n\n@import qtek.util.encode_float\n\nvoid main(){\n            float depth = v_ViewPosition.z / v_ViewPosition.w;\n    \n#ifdef USE_VSM\n    depth = depth * 0.5 + 0.5;\n    float moment1 = depth;\n    float moment2 = depth * depth;\n\n        float dx = dFdx(depth);\n    float dy = dFdy(depth);\n    moment2 += 0.25*(dx*dx+dy*dy);\n\n    gl_FragColor = vec4(moment1, moment2, 0.0, 1.0);\n#else\n        float dx = dFdx(depth);\n    float dy = dFdy(depth);\n    depth += sqrt(dx*dx + dy*dy) * slopeScale + bias;\n\n#ifdef SHADOW_TRANSPARENT\n    if (texture2D(transparentMap, v_Texcoord).a <= 0.1) {\n                gl_FragColor = encodeFloat(0.9999);\n        return;\n    }\n#endif\n\n    gl_FragColor = encodeFloat(depth * 0.5 + 0.5);\n#endif\n}\n@end\n\n@export qtek.sm.debug_depth\n\nuniform sampler2D depthMap;\nvarying vec2 v_Texcoord;\n\n@import qtek.util.decode_float\n\nvoid main() {\n    vec4 tex = texture2D(depthMap, v_Texcoord);\n#ifdef USE_VSM\n    gl_FragColor = vec4(tex.rgb, 1.0);\n#else\n    float depth = decodeFloat(tex);\n    gl_FragColor = vec4(depth, depth, depth, 1.0);\n#endif\n}\n\n@end\n\n\n@export qtek.sm.distance.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\n\nattribute vec3 position : POSITION;\n\n#ifdef SKINNING\nattribute vec3 boneWeight;\nattribute vec4 boneIndex;\n\nuniform mat4 skinMatrix[JOINT_COUNT] : SKIN_MATRIX;\n#endif\n\nvarying vec3 v_WorldPosition;\n\nvoid main (){\n\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n\n    gl_Position = worldViewProjection * vec4(skinnedPosition , 1.0);\n    v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n}\n\n@end\n\n@export qtek.sm.distance.fragment\n\nuniform vec3 lightPosition;\nuniform float range : 100;\n\nvarying vec3 v_WorldPosition;\n\n@import qtek.util.encode_float\n\nvoid main(){\n    float dist = distance(lightPosition, v_WorldPosition);\n#ifdef USE_VSM\n    gl_FragColor = vec4(dist, dist * dist, 0.0, 0.0);\n#else\n    dist = dist / range;\n    gl_FragColor = encodeFloat(dist);\n#endif\n}\n@end\n\n@export qtek.plugin.shadow_map_common\n\n@import qtek.util.decode_float\n\nfloat tapShadowMap(sampler2D map, vec2 uv, float z){\n    vec4 tex = texture2D(map, uv);\n            return step(z, decodeFloat(tex) * 2.0 - 1.0);\n}\n\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize, vec2 scale) {\n\n    float shadowContrib = tapShadowMap(map, uv, z);\n    vec2 offset = vec2(1.0 / textureSize) * scale;\n    shadowContrib += tapShadowMap(map, uv+vec2(offset.x, 0.0), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(offset.x, offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(0.0, offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, 0.0), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, -offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(offset.x, -offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(0.0, -offset.y), z);\n\n    return shadowContrib / 9.0;\n}\n\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize) {\n    return pcf(map, uv, z, textureSize, vec2(1.0));\n}\n\nfloat chebyshevUpperBound(vec2 moments, float z){\n    float p = 0.0;\n    z = z * 0.5 + 0.5;\n    if (z <= moments.x) {\n        p = 1.0;\n    }\n    float variance = moments.y - moments.x * moments.x;\n        variance = max(variance, 0.0000001);\n        float mD = moments.x - z;\n    float pMax = variance / (variance + mD * mD);\n            pMax = clamp((pMax-0.4)/(1.0-0.4), 0.0, 1.0);\n    return max(p, pMax);\n}\nfloat computeShadowContrib(\n    sampler2D map, mat4 lightVPM, vec3 position, float textureSize, vec2 scale, vec2 offset\n) {\n\n    vec4 posInLightSpace = lightVPM * vec4(position, 1.0);\n    posInLightSpace.xyz /= posInLightSpace.w;\n    float z = posInLightSpace.z;\n        if(all(greaterThan(posInLightSpace.xyz, vec3(-0.99, -0.99, -1.0))) &&\n        all(lessThan(posInLightSpace.xyz, vec3(0.99, 0.99, 1.0)))){\n                vec2 uv = (posInLightSpace.xy+1.0) / 2.0;\n\n        #ifdef USE_VSM\n            vec2 moments = texture2D(map, uv * scale + offset).xy;\n            return chebyshevUpperBound(moments, z);\n        #else\n            return pcf(map, uv * scale + offset, z, textureSize, scale);\n        #endif\n    }\n    return 1.0;\n}\n\nfloat computeShadowContrib(sampler2D map, mat4 lightVPM, vec3 position, float textureSize) {\n    return computeShadowContrib(map, lightVPM, position, textureSize, vec2(1.0), vec2(0.0));\n}\n\nfloat computeShadowContribOmni(samplerCube map, vec3 direction, float range)\n{\n    float dist = length(direction);\n    vec4 shadowTex = textureCube(map, direction);\n\n#ifdef USE_VSM\n    vec2 moments = shadowTex.xy;\n    float variance = moments.y - moments.x * moments.x;\n    float mD = moments.x - dist;\n    float p = variance / (variance + mD * mD);\n    if(moments.x + 0.001 < dist){\n        return clamp(p, 0.0, 1.0);\n    }else{\n        return 1.0;\n    }\n#else\n    return step(dist, (decodeFloat(shadowTex) + 0.0002) * range);\n#endif\n}\n\n@end\n\n\n\n@export qtek.plugin.compute_shadow_map\n\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT) || defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT) || defined(POINT_LIGHT_SHADOWMAP_COUNT)\n\n#ifdef SPOT_LIGHT_SHADOWMAP_COUNT\nuniform sampler2D spotLightShadowMaps[SPOT_LIGHT_SHADOWMAP_COUNT];\nuniform mat4 spotLightMatrices[SPOT_LIGHT_SHADOWMAP_COUNT];\nuniform float spotLightShadowMapSizes[SPOT_LIGHT_SHADOWMAP_COUNT];\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_SHADOWMAP_COUNT\n#if defined(SHADOW_CASCADE)\nuniform sampler2D directionalLightShadowMaps[1];\nuniform mat4 directionalLightMatrices[SHADOW_CASCADE];\nuniform float directionalLightShadowMapSizes[1];\nuniform float shadowCascadeClipsNear[SHADOW_CASCADE];\nuniform float shadowCascadeClipsFar[SHADOW_CASCADE];\n#else\nuniform sampler2D directionalLightShadowMaps[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT];\nuniform mat4 directionalLightMatrices[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT];\nuniform float directionalLightShadowMapSizes[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT];\n#endif\n#endif\n\n#ifdef POINT_LIGHT_SHADOWMAP_COUNT\nuniform samplerCube pointLightShadowMaps[POINT_LIGHT_SHADOWMAP_COUNT];\nuniform float pointLightShadowMapSizes[POINT_LIGHT_SHADOWMAP_COUNT];\n#endif\n\nuniform bool shadowEnabled : true;\n\n@import qtek.plugin.shadow_map_common\n\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n\nvoid computeShadowOfSpotLights(vec3 position, inout float shadowContribs[SPOT_LIGHT_COUNT] ) {\n    float shadowContrib;\n    for(int _idx_ = 0; _idx_ < SPOT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n        shadowContrib = computeShadowContrib(\n            spotLightShadowMaps[_idx_], spotLightMatrices[_idx_], position,\n            spotLightShadowMapSizes[_idx_]\n        );\n        shadowContribs[_idx_] = shadowContrib;\n    }}\n        for(int _idx_ = SPOT_LIGHT_SHADOWMAP_COUNT; _idx_ < SPOT_LIGHT_COUNT; _idx_++){{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n\n#endif\n\n\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n\n#ifdef SHADOW_CASCADE\n\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n        float depth = (2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far)\n                    / (gl_DepthRange.far - gl_DepthRange.near);\n\n    float shadowContrib;\n            shadowContribs[0] = 1.0;\n\n    for (int _idx_ = 0; _idx_ < SHADOW_CASCADE; _idx_++) {{\n        if (\n            depth >= shadowCascadeClipsNear[_idx_] &&\n            depth <= shadowCascadeClipsFar[_idx_]\n        ) {\n            shadowContrib = computeShadowContrib(\n                directionalLightShadowMaps[0], directionalLightMatrices[_idx_], position,\n                directionalLightShadowMapSizes[0],\n                vec2(1.0 / float(SHADOW_CASCADE), 1.0),\n                vec2(float(_idx_) / float(SHADOW_CASCADE), 0.0)\n            );\n                        shadowContribs[0] = shadowContrib;\n        }\n    }}\n        for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n\n#else\n\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n    float shadowContrib;\n\n    for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n        shadowContrib = computeShadowContrib(\n            directionalLightShadowMaps[_idx_], directionalLightMatrices[_idx_], position,\n            directionalLightShadowMapSizes[_idx_]\n        );\n        shadowContribs[_idx_] = shadowContrib;\n    }}\n        for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n#endif\n\n#endif\n\n\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n\nvoid computeShadowOfPointLights(vec3 position, inout float shadowContribs[POINT_LIGHT_COUNT] ){\n    vec3 lightPosition;\n    vec3 direction;\n    for(int _idx_ = 0; _idx_ < POINT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n        lightPosition = pointLightPosition[_idx_];\n        direction = position - lightPosition;\n        shadowContribs[_idx_] = computeShadowContribOmni(pointLightShadowMaps[_idx_], direction, pointLightRange[_idx_]);\n    }}\n    for(int _idx_ = POINT_LIGHT_SHADOWMAP_COUNT; _idx_ < POINT_LIGHT_COUNT; _idx_++) {{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n\n#endif\n\n#endif\n\n@end"},function(t,e){t.exports="@export qtek.skybox.vertex\n\nuniform mat4 world : WORLD;\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\n\nvarying vec3 v_WorldPosition;\n\nvoid main()\n{\n    v_WorldPosition = (world * vec4(position, 1.0)).xyz;\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n\n@end\n\n@export qtek.skybox.fragment\n\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform samplerCube environmentMap;\nuniform float lod: 0.0;\n\nvarying vec3 v_WorldPosition;\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 viewDirection = normalize(v_WorldPosition - eyePos);\n\n    vec3 tex = decodeHDR(textureCubeLodEXT(environmentMap, viewDirection, lod)).rgb;\n\n#ifdef SRGB_DECODE\n    tex.rgb = pow(tex.rgb, vec3(2.2));\n#endif\n\n    gl_FragColor = encodeHDR(vec4(tex, 1.0));\n}\n@end"},function(t,e){t.exports="\n@export qtek.util.rand\nhighp float rand(vec2 uv) {\n    const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n    highp float dt = dot(uv.xy, vec2(a,b)), sn = mod(dt, 3.141592653589793);\n    return fract(sin(sn) * c);\n}\n@end\n\n@export qtek.util.calculate_attenuation\n\nuniform float attenuationFactor : 5.0;\n\nfloat lightAttenuation(float dist, float range)\n{\n    float attenuation = 1.0;\n    attenuation = dist*dist/(range*range+1.0);\n    float att_s = attenuationFactor;\n    attenuation = 1.0/(attenuation*att_s+1.0);\n    att_s = 1.0/(att_s+1.0);\n    attenuation = attenuation - att_s;\n    attenuation /= 1.0 - att_s;\n    return clamp(attenuation, 0.0, 1.0);\n}\n\n@end\n\n@export qtek.util.edge_factor\n\nfloat edgeFactor(float width)\n{\n    vec3 d = fwidth(v_Barycentric);\n    vec3 a3 = smoothstep(vec3(0.0), d * width, v_Barycentric);\n    return min(min(a3.x, a3.y), a3.z);\n}\n\n@end\n\n@export qtek.util.encode_float\nvec4 encodeFloat(const in float depth)\n{\n            \n            \n    const vec4 bitShifts = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\n    const vec4 bit_mask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\n    vec4 res = fract(depth * bitShifts);\n    res -= res.xxyz * bit_mask;\n\n    return res;\n}\n@end\n\n@export qtek.util.decode_float\nfloat decodeFloat(const in vec4 color)\n{\n            \n    \n    const vec4 bitShifts = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);\n    return dot(color, bitShifts);\n}\n@end\n\n\n@export qtek.util.float\n@import qtek.util.encode_float\n@import qtek.util.decode_float\n@end\n\n\n\n@export qtek.util.rgbm_decode\nvec3 RGBMDecode(vec4 rgbm, float range) {\n  return range * rgbm.rgb * rgbm.a;\n    }\n@end\n\n@export qtek.util.rgbm_encode\nvec4 RGBMEncode(vec3 color, float range) {\n    if (dot(color, color) == 0.0) {\n        return vec4(0.0);\n    }\n    vec4 rgbm;\n    color /= range;\n    rgbm.a = clamp(max(max(color.r, color.g), max(color.b, 1e-6)), 0.0, 1.0);\n    rgbm.a = ceil(rgbm.a * 255.0) / 255.0;\n    rgbm.rgb = color / rgbm.a;\n    return rgbm;\n}\n@end\n\n@export qtek.util.rgbm\n@import qtek.util.rgbm_decode\n@import qtek.util.rgbm_encode\n\nvec4 decodeHDR(vec4 color)\n{\n#if defined(RGBM_DECODE) || defined(RGBM)\n    return vec4(RGBMDecode(color, 51.5), 1.0);\n#else\n    return color;\n#endif\n}\n\nvec4 encodeHDR(vec4 color)\n{\n#if defined(RGBM_ENCODE) || defined(RGBM)\n    return RGBMEncode(color.xyz, 51.5);\n#else\n    return color;\n#endif\n}\n\n@end\n\n\n@export qtek.util.srgb\n\nvec4 sRGBToLinear(in vec4 value) {\n    return vec4(mix(pow(value.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)), value.rgb * 0.0773993808, vec3(lessThanEqual(value.rgb, vec3(0.04045)))), value.w);\n}\n\nvec4 linearTosRGB(in vec4 value) {\n    return vec4(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))), value.w);\n}\n@end\n\n\n@export qtek.chunk.skin_matrix\n\nmat4 skinMatrixWS;\nif (joint.x >= 0.0)\n{\n    skinMatrixWS = skinMatrix[int(joint.x)] * weight.x;\n}\nif (joint.y >= 0.0)\n{\n    skinMatrixWS += skinMatrix[int(joint.y)] * weight.y;\n}\nif (joint.z >= 0.0)\n{\n    skinMatrixWS += skinMatrix[int(joint.z)] * weight.z;\n}\nif (joint.w >= 0.0)\n{\n    skinMatrixWS += skinMatrix[int(joint.w)] * (1.0-weight.x-weight.y-weight.z);\n}\n@end\n\n\n\n@export qtek.util.parallax_correct\n\nvec3 parallaxCorrect(in vec3 dir, in vec3 pos, in vec3 boxMin, in vec3 boxMax) {\n            vec3 first = (boxMax - pos) / dir;\n    vec3 second = (boxMin - pos) / dir;\n\n    vec3 further = max(first, second);\n    float dist = min(further.x, min(further.y, further.z));\n\n    vec3 fixedPos = pos + dir * dist;\n    vec3 boxCenter = (boxMax + boxMin) * 0.5;\n\n    return normalize(fixedPos - boxCenter);\n}\n\n@end\n\n\n\n@export qtek.util.clamp_sample\nvec4 clampSample(const in sampler2D texture, const in vec2 coord)\n{\n#ifdef STEREO\n            float eye = step(0.5, coord.x) * 0.5;\n    vec2 coordClamped = clamp(coord, vec2(eye, 0.0), vec2(0.5 + eye, 1.0));\n#else\n    vec2 coordClamped = clamp(coord, vec2(0.0), vec2(1.0));\n#endif\n    return texture2D(texture, coordClamped);\n}\n@end"},function(t,e,r){var n=r(9),i=r(20),a=r(8),o=r(12),s=r(22),u=r(19),c=r(7),l=r(73),h=r(26),f=r(47),d=r(17),_=r(48),p=r(186),m=r(187),v={},g=["px","nx","py","ny","pz","nz"];v.prefilterEnvironmentMap=function(t,e,r,s,p){p&&s||(s=v.generateNormalDistribution(),p=v.integrateBRDF(t,s)),r=r||{};var y=r.width||64,x=r.height||64,T=r.type||e.type,b=new i({width:y,height:x,type:T,flipY:!1,mipmaps:[]});b.isPowerOfTwo()||console.warn("Width and height must be power of two to enable mipmap.");var E=Math.min(y,x),w=Math.log(E)/Math.log(2)+1,S=new u({
shader:new c({vertex:c.source("qtek.skybox.vertex"),fragment:m})});S.set("normalDistribution",s),r.encodeRGBM&&S.shader.define("fragment","RGBM_ENCODE"),r.decodeRGBM&&S.shader.define("fragment","RGBM_DECODE");var A,M=new h;if(e instanceof n){var C=new i({width:y,height:x,type:T===a.FLOAT?a.HALF_FLOAT:T});_.panoramaToCubeMap(t,e,C,{encodeRGBM:r.decodeRGBM}),e=C}A=new l({scene:M,material:S}),A.material.set("environmentMap",e);var L=new f({texture:b});r.encodeRGBM&&(T=b.type=a.UNSIGNED_BYTE);for(var R=new n({width:y,height:x,type:T}),N=new o({depthBuffer:!1}),D=d[T===a.UNSIGNED_BYTE?"Uint8Array":"Float32Array"],I=0;I<w;I++){b.mipmaps[I]={pixels:{}},A.material.set("roughness",I/(g.length-1));for(var O=R.width,P=2*Math.atan(O/(O-.5))/Math.PI*180,F=0;F<g.length;F++){var B=new D(R.width*R.height*4);N.attach(R),N.bind(t);var U=L.getCamera(g[F]);U.fov=P,t.render(M,U),t.gl.readPixels(0,0,R.width,R.height,a.RGBA,T,B),N.unbind(t),b.mipmaps[I].pixels[g[F]]=B}R.width/=2,R.height/=2,R.dirty()}return N.dispose(t.gl),R.dispose(t.gl),A.dispose(t.gl),s.dispose(t.gl),{environmentMap:b,brdfLookup:p,normalDistribution:s,maxMipmapLevel:w}},v.integrateBRDF=function(t,e){e=e||v.generateNormalDistribution();var r=new o({depthBuffer:!1}),i=new s({fragment:p}),u=new n({width:512,height:256,type:a.HALF_FLOAT,minFilter:a.NEAREST,magFilter:a.NEAREST,useMipmap:!1});return i.setUniform("normalDistribution",e),i.setUniform("viewportSize",[512,256]),i.attachOutput(u),i.render(t,r),r.dispose(t.gl),u},v.generateNormalDistribution=function(t,e){for(var t=t||256,e=e||1024,r=new n({width:t,height:e,type:a.FLOAT,minFilter:a.NEAREST,magFilter:a.NEAREST,useMipmap:!1}),i=new Float32Array(e*t*4),o=0;o<e;o++){var s=o/e,u=(o<<16|o>>>16)>>>0;u=((1431655765&u)<<1|(2863311530&u)>>>1)>>>0,u=((858993459&u)<<2|(3435973836&u)>>>2)>>>0,u=((252645135&u)<<4|(4042322160&u)>>>4)>>>0,u=(((16711935&u)<<8|(4278255360&u)>>>8)>>>0)/4294967296;for(var c=0;c<t;c++){var l=c/t,h=l*l,f=2*Math.PI*s,d=Math.sqrt((1-u)/(1+(h*h-1)*u)),_=Math.sqrt(1-d*d),p=4*(o*t+c);i[p]=_*Math.cos(f),i[p+1]=_*Math.sin(f),i[p+2]=d,i[p+3]=1}}return r.pixels=i,r},t.exports=v},function(t,e,r){"use strict";function n(t){return t.charCodeAt(0)+(t.charCodeAt(1)<<8)+(t.charCodeAt(2)<<16)+(t.charCodeAt(3)<<24)}var i=r(8),a=r(9),o=(r(20),542327876),s=131072,u=512,c=4,l=31,h=n("DXT1"),f=n("DXT3"),d=n("DXT5"),_=0,p=1,m=2,v=3,g=4,y=7,x=20,T=21,b=28,E={parse:function(t,e){var r=new Int32Array(t,0,l);if(r[_]!==o)return null;if(!r(x)&c)return null;var n,E,w=r(T),S=r[g],A=r[v],M=r[b]&u,C=r[m]&s;switch(w){case h:n=8,E=i.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case f:n=16,E=i.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case d:n=16,E=i.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}var L=r[p]+4,R=M?6:1,N=1;C&&(N=Math.max(1,r[y]));for(var D=[],I=0;I<R;I++){var O=S,P=A;D[I]=new a({width:O,height:P,format:E});for(var F=[],B=0;B<N;B++){var U=Math.max(4,O)/4*Math.max(4,P)/4*n,k=new Uint8Array(t,L,U);L+=U,O*=.5,P*=.5,F[B]=k}D[I].pixels=F[0],C&&(D[I].mipmaps=F)}return e?(e.width=D[0].width,e.height=D[0].height,e.format=D[0].format,e.pixels=D[0].pixels,e.mipmaps=D[0].mipmaps,void 0):D[0]}};t.exports=E},function(t,e,r){"use strict";function n(t,e,r,n){if(t[3]>0){var i=Math.pow(2,t[3]-128-8+n);e[r+0]=t[0]*i,e[r+1]=t[1]*i,e[r+2]=t[2]*i}else e[r+0]=0,e[r+1]=0,e[r+2]=0;return e[r+3]=1,e}function i(t,e,r){for(var n="",i=e;i<r;i++)n+=l(t[i]);return n}function a(t,e){e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3]}function o(t,e,r,n){for(var i=0,o=0,s=n;s>0;)if(t[o][0]=e[r++],t[o][1]=e[r++],t[o][2]=e[r++],t[o][3]=e[r++],1===t[o][0]&&1===t[o][1]&&1===t[o][2]){for(var u=t[o][3]<<i>>>0;u>0;u--)a(t[o-1],t[o]),o++,s--;i+=8}else o++,s--,i=0;return r}function s(t,e,r,n){if(n<h|n>f)return o(t,e,r,n);var i=e[r++];if(2!=i)return o(t,e,r-1,n);if(t[0][1]=e[r++],t[0][2]=e[r++],i=e[r++],(t[0][2]<<8>>>0|i)>>>0!==n)return null;for(var i=0;i<4;i++)for(var a=0;a<n;){var s=e[r++];if(s>128){s=(127&s)>>>0;for(var u=e[r++];s--;)t[a++][i]=u}else for(;s--;)t[a++][i]=e[r++]}return r}var u=r(8),c=r(9),l=String.fromCharCode,h=8,f=32767,d={parseRGBE:function(t,e,r){null==r&&(r=0);var a=new Uint8Array(t),o=a.length;if("#?"===i(a,0,2)){for(var h=2;h<o&&("\n"!==l(a[h])||"\n"!==l(a[h+1]));h++);if(!(h>=o)){h+=2;for(var f="";h<o;h++){var d=l(a[h]);if("\n"===d)break;f+=d}var _=f.split(" "),p=parseInt(_[1]),m=parseInt(_[3]);if(m&&p){for(var v=h+1,g=[],y=0;y<m;y++){g[y]=[];for(var x=0;x<4;x++)g[y][x]=0}for(var T=new Float32Array(m*p*4),b=0,E=0;E<p;E++){var v=s(g,a,v,m);if(!v)return null;for(var y=0;y<m;y++)n(g[y],T,b,r),b+=4}return e||(e=new c),e.width=m,e.height=p,e.pixels=T,e.type=u.FLOAT,e}}}},parseRGBEFromPNG:function(t){}};t.exports=d},function(t,e,r){function n(t,e){var r=t[0],n=t[1],i=t[2];return 0===e?1:1===e?r:2===e?n:3===e?i:4===e?r*i:5===e?n*i:6===e?r*n:7===e?3*i*i-1:r*r-n*n}function i(t,e,r,i){for(var a=new u.Float32Array(27),o=_.create(),s=_.create(),c=_.create(),l=0;l<9;l++){for(var h=_.create(),f=0;f<m.length;f++){for(var d=e[m[f]],p=_.create(),g=0,y=0,x=v[m[f]],T=0;T<i;T++)for(var b=0;b<r;b++){o[0]=b/(r-1)*2-1,o[1]=T/(i-1)*2-1,o[2]=-1,_.normalize(o,o),c[0]=o[x[0]]*x[3],c[1]=o[x[1]]*x[4],c[2]=o[x[2]]*x[5],s[0]=d[y++]/255,s[1]=d[y++]/255,s[2]=d[y++]/255;var E=d[y++]/255*51.5;s[0]*=E,s[1]*=E,s[2]*=E,_.scaleAndAdd(p,p,s,n(c,l)*-o[2]),g+=-o[2]}_.scaleAndAdd(h,h,p,1/g)}a[3*l]=h[0]/6,a[3*l+1]=h[1]/6,a[3*l+2]=h[2]/6}return a}var a=r(8),o=r(12),s=r(9),u=(r(20),r(48),r(22),r(17)),c=r(73),l=r(74),h=r(47),f=r(26),d=r(2),_=d.vec3,p={},m=(r(188),["px","nx","py","ny","pz","nz"]),v={px:[2,1,0,-1,-1,1],nx:[2,1,0,1,-1,-1],py:[0,2,1,1,-1,-1],ny:[0,2,1,1,1,1],pz:[0,1,2,-1,-1,-1],nz:[0,1,2,1,-1,1]};p.projectEnvironmentMap=function(t,e,r){r=r||{},r.lod=r.lod||0;var n,u=new f;n=e instanceof s?new l({scene:u,environmentMap:e}):new c({scene:u,environmentMap:e});var d=128,_=128,p=new s({width:d,height:_}),v=new o;n.material.shader.define("fragment","RGBM_ENCODE"),r.decodeRGBM&&n.material.shader.define("fragment","RGBM_DECODE"),n.material.set("lod",r.lod);for(var g=new h({texture:p}),y={},x=0;x<m.length;x++){y[m[x]]=new Uint8Array(d*_*4);var T=g.getCamera(m[x]);T.fov=90,v.attach(p),v.bind(t),t.render(u,T),t.gl.readPixels(0,0,d,_,a.RGBA,a.UNSIGNED_BYTE,y[m[x]]),v.unbind(t)}return n.dispose(t.gl),v.dispose(t.gl),p.dispose(t.gl),i(t,y,d,_)},t.exports=p},function(t,e){t.exports="#define SAMPLE_NUMBER 1024\n#define PI 3.14159265358979\n\n\nuniform sampler2D normalDistribution;\n\nuniform vec2 viewportSize : [512, 256];\n\nconst vec3 N = vec3(0.0, 0.0, 1.0);\nconst float fSampleNumber = float(SAMPLE_NUMBER);\n\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\n    vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\n\n    vec3 upVector = abs(N.z) < 0.999 ? vec3(0.0, 0.0, 1.0) : vec3(1.0, 0.0, 0.0);\n    vec3 tangentX = normalize(cross(upVector, N));\n    vec3 tangentY = cross(N, tangentX);\n        return tangentX * H.x + tangentY * H.y + N * H.z;\n}\n\nfloat G_Smith(float roughness, float NoV, float NoL) {\n        float k = roughness * roughness / 2.0;\n    float G1V = NoV / (NoV * (1.0 - k) + k);\n    float G1L = NoL / (NoL * (1.0 - k) + k);\n    return G1L * G1V;\n}\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / viewportSize;\n    float NoV = uv.x;\n    float roughness = uv.y;\n\n    vec3 V;\n    V.x = sqrt(1.0 - NoV * NoV);\n    V.y = 0.0;\n    V.z = NoV;\n\n    float A = 0.0;\n    float B = 0.0;\n\n    for (int i = 0; i < SAMPLE_NUMBER; i++) {\n        vec3 H = importanceSampleNormal(float(i) / fSampleNumber, roughness, N);\n        vec3 L = reflect(-V, H);\n        float NoL = clamp(L.z, 0.0, 1.0);\n        float NoH = clamp(H.z, 0.0, 1.0);\n        float VoH = clamp(dot(V, H), 0.0, 1.0);\n\n        if (NoL > 0.0) {\n            float G = G_Smith(roughness, NoV, NoL);\n            float G_Vis = G * VoH / (NoH * NoV);\n            float Fc = pow(1.0 - VoH, 5.0);\n            A += (1.0 - Fc) * G_Vis;\n            B += Fc * G_Vis;\n        }\n    }\n\n    gl_FragColor = vec4(vec2(A, B) / fSampleNumber, 0.0, 1.0);\n}\n"},function(t,e){t.exports="#define SAMPLE_NUMBER 1024\n#define PI 3.14159265358979\n\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform samplerCube environmentMap;\nuniform sampler2D normalDistribution;\n\nuniform float roughness : 0.5;\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_WorldPosition;\n\nconst float fSampleNumber = float(SAMPLE_NUMBER);\n\n@import qtek.util.rgbm\n\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\n    vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\n\n    vec3 upVector = abs(N.z) < 0.999 ? vec3(0.0, 0.0, 1.0) : vec3(1.0, 0.0, 0.0);\n    vec3 tangentX = normalize(cross(upVector, N));\n    vec3 tangentY = cross(N, tangentX);\n        return tangentX * H.x + tangentY * H.y + N * H.z;\n}\n\nvoid main() {\n\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 V = normalize(v_WorldPosition - eyePos);\n\n    vec3 N = V;\n    vec3 R = V;\n\n    vec3 prefilteredColor = vec3(0.0);\n    float totalWeight = 0.0;\n\n\n    for (int i = 0; i < SAMPLE_NUMBER; i++) {\n        vec3 H = importanceSampleNormal(float(i) / fSampleNumber, roughness, N);\n        vec3 L = reflect(-V, H);\n\n        float NoL = clamp(dot(N, L), 0.0, 1.0);\n        if (NoL > 0.0) {\n            prefilteredColor += decodeHDR(textureCube(environmentMap, L)).rgb * NoL;\n            totalWeight += NoL;\n        }\n    }\n\n    gl_FragColor = encodeHDR(vec4(prefilteredColor / totalWeight, 1.0));\n}\n"},function(t,e){t.exports="uniform samplerCube environmentMap;\n\nvarying vec2 v_Texcoord;\n\n#define TEXTURE_SIZE 16\n\nmat3 front = mat3(\n     1.0,  0.0,  0.0,\n     0.0,  1.0,  0.0,\n     0.0,  0.0,  1.0\n);\n\nmat3 back = mat3(\n    -1.0,  0.0,  0.0,\n     0.0,  1.0,  0.0,\n     0.0,  0.0, -1.0\n);\n\nmat3 left = mat3(\n     0.0,  0.0, -1.0,\n     0.0,  1.0,  0.0,\n     1.0,  0.0,  0.0\n);\n\nmat3 right = mat3(\n     0.0,  0.0,  1.0,\n     0.0,  1.0,  0.0,\n    -1.0,  0.0,  0.0\n);\n\nmat3 up = mat3(\n     1.0,  0.0,  0.0,\n     0.0,  0.0,  1.0,\n     0.0, -1.0,  0.0\n);\n\nmat3 down = mat3(\n     1.0,  0.0,  0.0,\n     0.0,  0.0, -1.0,\n     0.0,  1.0,  0.0\n);\n\n\nfloat harmonics(vec3 normal){\n    int index = int(gl_FragCoord.x);\n\n    float x = normal.x;\n    float y = normal.y;\n    float z = normal.z;\n\n    if(index==0){\n        return 1.0;\n    }\n    else if(index==1){\n        return x;\n    }\n    else if(index==2){\n        return y;\n    }\n    else if(index==3){\n        return z;\n    }\n    else if(index==4){\n        return x*z;\n    }\n    else if(index==5){\n        return y*z;\n    }\n    else if(index==6){\n        return x*y;\n    }\n    else if(index==7){\n        return 3.0*z*z - 1.0;\n    }\n    else{\n        return x*x - y*y;\n    }\n}\n\nvec3 sampleSide(mat3 rot)\n{\n\n    vec3 result = vec3(0.0);\n    float divider = 0.0;\n    for (int i = 0; i < TEXTURE_SIZE * TEXTURE_SIZE; i++) {\n        float x = mod(float(i), float(TEXTURE_SIZE));\n        float y = float(i / TEXTURE_SIZE);\n\n        vec2 sidecoord = ((vec2(x, y) + vec2(0.5, 0.5)) / vec2(TEXTURE_SIZE)) * 2.0 - 1.0;\n        vec3 normal = normalize(vec3(sidecoord, -1.0));\n        vec3 fetchNormal = rot * normal;\n        vec3 texel = textureCube(environmentMap, fetchNormal).rgb;\n\n                result += harmonics(fetchNormal) * texel * -normal.z;\n\n        divider += -normal.z;\n    }\n\n    return result / divider;\n}\n\nvoid main()\n{\n    vec3 result = (\n        sampleSide(front) +\n        sampleSide(back) +\n        sampleSide(left) +\n        sampleSide(right) +\n        sampleSide(up) +\n        sampleSide(down)\n    ) / 6.0;\n    gl_FragColor = vec4(result, 1.0);\n}"},function(t,e){t.exports="0.3.0"},function(t,e,r){function n(t,e){return t[e]}function i(t,e,r){t[e]=r}function a(t,e,r){return(e-t)*r+t}function o(t,e,r){return r>.5?e:t}function s(t,e,r,n,i){var o=t.length;if(1==i)for(var s=0;s<o;s++)n[s]=a(t[s],e[s],r);else for(var u=t[0].length,s=0;s<o;s++)for(var c=0;c<u;c++)n[s][c]=a(t[s][c],e[s][c],r)}function u(t,e,r){var n=t.length,i=e.length;if(n!==i){var a=n>i;if(a)t.length=i;else for(var o=n;o<i;o++)t.push(1===r?e[o]:y.call(e[o]))}for(var s=t[0]&&t[0].length,o=0;o<t.length;o++)if(1===r)isNaN(t[o])&&(t[o]=e[o]);else for(var u=0;u<s;u++)isNaN(t[o][u])&&(t[o][u]=e[o][u])}function c(t,e,r){if(t===e)return!0;var n=t.length;if(n!==e.length)return!1;if(1===r){for(var i=0;i<n;i++)if(t[i]!==e[i])return!1}else for(var a=t[0].length,i=0;i<n;i++)for(var o=0;o<a;o++)if(t[i][o]!==e[i][o])return!1;return!0}function l(t,e,r,n,i,a,o,s,u){var c=t.length;if(1==u)for(var l=0;l<c;l++)s[l]=h(t[l],e[l],r[l],n[l],i,a,o);else for(var f=t[0].length,l=0;l<c;l++)for(var d=0;d<f;d++)s[l][d]=h(t[l][d],e[l][d],r[l][d],n[l][d],i,a,o)}function h(t,e,r,n,i,a,o){var s=.5*(r-t),u=.5*(n-e);return(2*(e-r)+s+u)*o+(-3*(e-r)-2*s-u)*a+s*i+e}function f(t){if(g(t)){var e=t.length;if(g(t[0])){for(var r=[],n=0;n<e;n++)r.push(y.call(t[n]));return r}return y.call(t)}return t}function d(t){return t[0]=Math.floor(t[0]),t[1]=Math.floor(t[1]),t[2]=Math.floor(t[2]),"rgba("+t.join(",")+")"}function _(t,e,r,n,i){var f=t._getter,_=t._setter,v="spline"===e,y=n.length;if(y){var x,T=n[0].value,b=g(T),E=!1,w=!1,S=b&&g(T[0])?2:1;n.sort(function(t,e){return t.time-e.time}),x=n[y-1].time;for(var A=[],M=[],C=n[0].value,L=!0,R=0;R<y;R++){A.push(n[R].time/x);var N=n[R].value;if(b&&c(N,C,S)||!b&&N===C||(L=!1),C=N,"string"==typeof N){var D=m.parse(N);D?(N=D,E=!0):w=!0}M.push(N)}if(!L){for(var I=M[y-1],R=0;R<y-1;R++)b?u(M[R],I,S):!isNaN(M[R])||isNaN(I)||w||E||(M[R]=I);b&&u(f(t._target,i),I,S);var O,P,F,B,U,k,z=0,G=0;if(E)var V=[0,0,0,0];var H=function(t,e){var r;if(e<0)r=0;else if(e<G){for(O=Math.min(z+1,y-1),r=O;r>=0&&!(A[r]<=e);r--);r=Math.min(r,y-2)}else{for(r=z;r<y&&!(A[r]>e);r++);r=Math.min(r-1,y-2)}z=r,G=e;var n=A[r+1]-A[r];if(0!==n)if(P=(e-A[r])/n,v)if(B=M[r],F=M[0===r?r:r-1],U=M[r>y-2?y-1:r+1],k=M[r>y-3?y-1:r+2],b)l(F,B,U,k,P,P*P,P*P*P,f(t,i),S);else{var u;if(E)u=l(F,B,U,k,P,P*P,P*P*P,V,1),u=d(V);else{if(w)return o(B,U,P);u=h(F,B,U,k,P,P*P,P*P*P)}_(t,i,u)}else if(b)s(M[r],M[r+1],P,f(t,i),S);else{var u;if(E)s(M[r],M[r+1],P,V,1),u=d(V);else{if(w)return o(M[r],M[r+1],P);u=a(M[r],M[r+1],P)}_(t,i,u)}},W=new p({target:t._target,life:x,loop:t._loop,delay:t._delay,onframe:H,ondestroy:r});return e&&"spline"!==e&&(W.easing=e),W}}}var p=r(191),m=r(198),v=r(18),g=v.isArrayLike,y=Array.prototype.slice,x=function(t,e,r,a){this._tracks={},this._target=t,this._loop=e||!1,this._getter=r||n,this._setter=a||i,this._clipCount=0,this._delay=0,this._doneList=[],this._onframeList=[],this._clipList=[]};x.prototype={when:function(t,e){var r=this._tracks;for(var n in e)if(e.hasOwnProperty(n)){if(!r[n]){r[n]=[];var i=this._getter(this._target,n);if(null==i)continue;0!==t&&r[n].push({time:0,value:f(i)})}r[n].push({time:t,value:e[n]})}return this},during:function(t){return this._onframeList.push(t),this},_doneCallback:function(){this._tracks={},this._clipList.length=0;for(var t=this._doneList,e=t.length,r=0;r<e;r++)t[r].call(this)},start:function(t){var e,r=this,n=0,i=function(){n--,n||r._doneCallback()};for(var a in this._tracks)if(this._tracks.hasOwnProperty(a)){var o=_(this,t,i,this._tracks[a],a);o&&(this._clipList.push(o),n++,this.animation&&this.animation.addClip(o),e=o)}if(e){var s=e.onframe;e.onframe=function(t,e){s(t,e);for(var n=0;n<r._onframeList.length;n++)r._onframeList[n](t,e)}}return n||this._doneCallback(),this},stop:function(t){for(var e=this._clipList,r=this.animation,n=0;n<e.length;n++){var i=e[n];t&&i.onframe(this._target,1),r&&r.removeClip(i)}e.length=0},delay:function(t){return this._delay=t,this},done:function(t){return t&&this._doneList.push(t),this},getClips:function(){return this._clipList}},t.exports=x},function(t,e,r){function n(t){this._target=t.target,this._life=t.life||1e3,this._delay=t.delay||0,this._initialized=!1,this.loop=null!=t.loop&&t.loop,this.gap=t.gap||0,this.easing=t.easing||"Linear",this.onframe=t.onframe,this.ondestroy=t.ondestroy,this.onrestart=t.onrestart}var i=r(192);n.prototype={constructor:n,step:function(t){this._initialized||(this._startTime=t+this._delay,this._initialized=!0);var e=(t-this._startTime)/this._life;if(!(e<0)){e=Math.min(e,1);var r=this.easing,n="string"==typeof r?i[r]:r,a="function"==typeof n?n(e):e;return this.fire("frame",a),1==e?this.loop?(this.restart(t),"restart"):(this._needsRemove=!0,"destroy"):null}},restart:function(t){var e=(t-this._startTime)%this._life;this._startTime=t-e+this.gap,this._needsRemove=!1},fire:function(t,e){t="on"+t,this[t]&&this[t](this._target,e)}},t.exports=n},function(t,e){var r={linear:function(t){return t},quadraticIn:function(t){return t*t},quadraticOut:function(t){return t*(2-t)},quadraticInOut:function(t){return(t*=2)<1?.5*t*t:-.5*(--t*(t-2)-1)},cubicIn:function(t){return t*t*t},cubicOut:function(t){return--t*t*t+1},cubicInOut:function(t){return(t*=2)<1?.5*t*t*t:.5*((t-=2)*t*t+2)},quarticIn:function(t){return t*t*t*t},quarticOut:function(t){return 1- --t*t*t*t},quarticInOut:function(t){return(t*=2)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)},quinticIn:function(t){return t*t*t*t*t},quinticOut:function(t){return--t*t*t*t*t+1},quinticInOut:function(t){return(t*=2)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)},sinusoidalIn:function(t){return 1-Math.cos(t*Math.PI/2)},sinusoidalOut:function(t){return Math.sin(t*Math.PI/2)},sinusoidalInOut:function(t){return.5*(1-Math.cos(Math.PI*t))},exponentialIn:function(t){return 0===t?0:Math.pow(1024,t-1)},exponentialOut:function(t){return 1===t?1:1-Math.pow(2,-10*t)},exponentialInOut:function(t){return 0===t?0:1===t?1:(t*=2)<1?.5*Math.pow(1024,t-1):.5*(-Math.pow(2,-10*(t-1))+2)},circularIn:function(t){return 1-Math.sqrt(1-t*t)},circularOut:function(t){return Math.sqrt(1- --t*t)},circularInOut:function(t){return(t*=2)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},elasticIn:function(t){var e,r=.1,n=.4;return 0===t?0:1===t?1:(!r||r<1?(r=1,e=n/4):e=n*Math.asin(1/r)/(2*Math.PI),-(r*Math.pow(2,10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/n)))},elasticOut:function(t){var e,r=.1,n=.4;return 0===t?0:1===t?1:(!r||r<1?(r=1,e=n/4):e=n*Math.asin(1/r)/(2*Math.PI),r*Math.pow(2,-10*t)*Math.sin((t-e)*(2*Math.PI)/n)+1)},elasticInOut:function(t){var e,r=.1,n=.4;return 0===t?0:1===t?1:(!r||r<1?(r=1,e=n/4):e=n*Math.asin(1/r)/(2*Math.PI),(t*=2)<1?-.5*(r*Math.pow(2,10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/n)):r*Math.pow(2,-10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/n)*.5+1)},backIn:function(t){var e=1.70158;return t*t*((e+1)*t-e)},backOut:function(t){var e=1.70158;return--t*t*((e+1)*t+e)+1},backInOut:function(t){var e=2.5949095;return(t*=2)<1?.5*(t*t*((e+1)*t-e)):.5*((t-=2)*t*((e+1)*t+e)+2)},bounceIn:function(t){return 1-r.bounceOut(1-t)},bounceOut:function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375},bounceInOut:function(t){return t<.5?.5*r.bounceIn(2*t):.5*r.bounceOut(2*t-1)+.5}};t.exports=r},function(t,e){t.exports="undefined"!=typeof window&&(window.requestAnimationFrame||window.msRequestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame)||function(t){setTimeout(t,16)}},function(t,e,r){function n(t,e){var r=t+":"+e;if(u[r])return u[r];for(var n=(t+"").split("\n"),i=0,a=0,o=n.length;a<o;a++)i=Math.max(_.measureText(n[a],e).width,i);return c>l&&(c=0,u={}),c++,u[r]=i,i}function i(t,e,r,i){var a=((t||"")+"").split("\n").length,o=n(t,e),s=n("国",e),u=a*s,c=new f(0,0,o,u);switch(c.lineHeight=s,i){case"bottom":case"alphabetic":c.y-=s;break;case"middle":c.y-=s/2}switch(r){case"end":case"right":c.x-=c.width;break;case"center":c.x-=c.width/2}return c}function a(t,e,r,n){var i=e.x,a=e.y,o=e.height,s=e.width,u=r.height,c=o/2-u/2,l="left";switch(t){case"left":i-=n,a+=c,l="right";break;case"right":i+=n+s,a+=c,l="left";break;case"top":i+=s/2,a-=n+u,l="center";break;case"bottom":i+=s/2,a+=o+n,l="center";break;case"inside":i+=s/2,a+=c,l="center";break;case"insideLeft":i+=n,a+=c,l="left";break;case"insideRight":i+=s-n,a+=c,l="right";break;case"insideTop":i+=s/2,a+=n,l="center";break;case"insideBottom":i+=s/2,a+=o-u-n,l="center";break;case"insideTopLeft":i+=n,a+=n,l="left";break;case"insideTopRight":i+=s-n,a+=n,l="right";break;case"insideBottomLeft":i+=n,a+=o-u-n;break;case"insideBottomRight":i+=s-n,a+=o-u-n,l="right"}return{x:i,y:a,textAlign:l,textBaseline:"top"}}function o(t,e,r,i,a){if(!e)return"";a=a||{},i=d(i,"...");for(var o=d(a.maxIterations,2),u=d(a.minChar,0),c=n("国",r),l=n("a",r),h=d(a.placeholder,""),f=e=Math.max(0,e-1),_=0;_<u&&f>=l;_++)f-=l;var p=n(i);p>f&&(i="",p=0),f=e-p;for(var m=(t+"").split("\n"),_=0,v=m.length;_<v;_++){var g=m[_],y=n(g,r);if(!(y<=e)){for(var x=0;;x++){if(y<=f||x>=o){g+=i;break}var T=0===x?s(g,f,l,c):y>0?Math.floor(g.length*f/y):0;g=g.substr(0,T),y=n(g,r)}""===g&&(g=h),m[_]=g}}return m.join("\n")}function s(t,e,r,n){for(var i=0,a=0,o=t.length;a<o&&i<e;a++){var s=t.charCodeAt(a);i+=0<=s&&s<=127?r:n}return a}var u={},c=0,l=5e3,h=r(18),f=r(76),d=h.retrieve,_={getWidth:n,getBoundingRect:i,adjustTextPositionOnRect:a,truncateText:o,measureText:function(t,e){var r=h.getContext();return r.font=e||"12px sans-serif",r.measureText(t)}};t.exports=_},function(t,e){var r="undefined"==typeof Float32Array?Array:Float32Array,n={create:function(){var t=new r(6);return n.identity(t),t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},copy:function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t},mul:function(t,e,r){var n=e[0]*r[0]+e[2]*r[1],i=e[1]*r[0]+e[3]*r[1],a=e[0]*r[2]+e[2]*r[3],o=e[1]*r[2]+e[3]*r[3],s=e[0]*r[4]+e[2]*r[5]+e[4],u=e[1]*r[4]+e[3]*r[5]+e[5];return t[0]=n,t[1]=i,t[2]=a,t[3]=o,t[4]=s,t[5]=u,t},translate:function(t,e,r){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4]+r[0],t[5]=e[5]+r[1],t},rotate:function(t,e,r){var n=e[0],i=e[2],a=e[4],o=e[1],s=e[3],u=e[5],c=Math.sin(r),l=Math.cos(r);return t[0]=n*l+o*c,t[1]=-n*c+o*l,t[2]=i*l+s*c,t[3]=-i*c+l*s,t[4]=l*a+c*u,t[5]=l*u-c*a,t},scale:function(t,e,r){var n=r[0],i=r[1];return t[0]=e[0]*n,t[1]=e[1]*i,t[2]=e[2]*n,t[3]=e[3]*i,t[4]=e[4]*n,t[5]=e[5]*i,t},invert:function(t,e){var r=e[0],n=e[2],i=e[4],a=e[1],o=e[3],s=e[5],u=r*o-a*n;return u?(u=1/u,t[0]=o*u,t[1]=-a*u,t[2]=-n*u,t[3]=r*u,t[4]=(n*s-o*i)*u,t[5]=(a*i-r*s)*u,t):null}};t.exports=n},function(t,e){var r="undefined"==typeof Float32Array?Array:Float32Array,n={create:function(t,e){var n=new r(2);return null==t&&(t=0),null==e&&(e=0),n[0]=t,n[1]=e,n},copy:function(t,e){return t[0]=e[0],t[1]=e[1],t},clone:function(t){var e=new r(2);return e[0]=t[0],e[1]=t[1],e},set:function(t,e,r){return t[0]=e,t[1]=r,t},add:function(t,e,r){return t[0]=e[0]+r[0],t[1]=e[1]+r[1],t},scaleAndAdd:function(t,e,r,n){return t[0]=e[0]+r[0]*n,t[1]=e[1]+r[1]*n,t},sub:function(t,e,r){return t[0]=e[0]-r[0],t[1]=e[1]-r[1],t},len:function(t){return Math.sqrt(this.lenSquare(t))},lenSquare:function(t){return t[0]*t[0]+t[1]*t[1]},mul:function(t,e,r){return t[0]=e[0]*r[0],t[1]=e[1]*r[1],t},div:function(t,e,r){return t[0]=e[0]/r[0],t[1]=e[1]/r[1],t},dot:function(t,e){return t[0]*e[0]+t[1]*e[1]},scale:function(t,e,r){return t[0]=e[0]*r,t[1]=e[1]*r,t},normalize:function(t,e){var r=n.len(e);return 0===r?(t[0]=0,t[1]=0):(t[0]=e[0]/r,t[1]=e[1]/r),t},distance:function(t,e){return Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1]))},distanceSquare:function(t,e){return(t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])},negate:function(t,e){return t[0]=-e[0],t[1]=-e[1],t},lerp:function(t,e,r,n){return t[0]=e[0]+n*(r[0]-e[0]),t[1]=e[1]+n*(r[1]-e[1]),t},applyTransform:function(t,e,r){var n=e[0],i=e[1];return t[0]=r[0]*n+r[2]*i+r[4],t[1]=r[1]*n+r[3]*i+r[5],t},min:function(t,e,r){return t[0]=Math.min(e[0],r[0]),t[1]=Math.min(e[1],r[1]),t},max:function(t,e,r){return t[0]=Math.max(e[0],r[0]),t[1]=Math.max(e[1],r[1]),t}};n.length=n.len,n.lengthSquare=n.lenSquare,n.dist=n.distance,n.distSquare=n.distanceSquare,t.exports=n},function(t,e){var r=Array.prototype.slice,n=function(){this._$handlers={}};n.prototype={constructor:n,one:function(t,e,r){var n=this._$handlers;if(!e||!t)return this;n[t]||(n[t]=[]);for(var i=0;i<n[t].length;i++)if(n[t][i].h===e)return this;return n[t].push({h:e,one:!0,ctx:r||this}),this},on:function(t,e,r){var n=this._$handlers;if(!e||!t)return this;n[t]||(n[t]=[]);for(var i=0;i<n[t].length;i++)if(n[t][i].h===e)return this;return n[t].push({h:e,one:!1,ctx:r||this}),this},isSilent:function(t){var e=this._$handlers;return e[t]&&e[t].length},off:function(t,e){var r=this._$handlers;if(!t)return this._$handlers={},this;if(e){if(r[t]){for(var n=[],i=0,a=r[t].length;i<a;i++)r[t][i].h!=e&&n.push(r[t][i]);r[t]=n}r[t]&&0===r[t].length&&delete r[t]}else delete r[t];return this},trigger:function(t){if(this._$handlers[t]){var e=arguments,n=e.length;n>3&&(e=r.call(e,1));for(var i=this._$handlers[t],a=i.length,o=0;o<a;){switch(n){case 1:i[o].h.call(i[o].ctx);break;case 2:i[o].h.call(i[o].ctx,e[1]);break;case 3:i[o].h.call(i[o].ctx,e[1],e[2]);break;default:i[o].h.apply(i[o].ctx,e)}i[o].one?(i.splice(o,1),a--):o++}}return this},triggerWithContext:function(t){if(this._$handlers[t]){var e=arguments,n=e.length;n>4&&(e=r.call(e,1,e.length-1));for(var i=e[e.length-1],a=this._$handlers[t],o=a.length,s=0;s<o;){switch(n){case 1:a[s].h.call(i);break;case 2:a[s].h.call(i,e[1]);break;case 3:a[s].h.call(i,e[1],e[2]);break;default:a[s].h.apply(i,e)}a[s].one?(a.splice(s,1),o--):s++}}return this}},t.exports=n},function(t,e,r){function n(t){return t=Math.round(t),t<0?0:t>255?255:t}function i(t){return t=Math.round(t),t<0?0:t>360?360:t}function a(t){return t<0?0:t>1?1:t}function o(t){return n(t.length&&"%"===t.charAt(t.length-1)?parseFloat(t)/100*255:parseInt(t,10))}function s(t){return a(t.length&&"%"===t.charAt(t.length-1)?parseFloat(t)/100:parseFloat(t))}function u(t,e,r){return r<0?r+=1:r>1&&(r-=1),6*r<1?t+(e-t)*r*6:2*r<1?e:3*r<2?t+(e-t)*(2/3-r)*6:t}function c(t,e,r){return t+(e-t)*r}function l(t,e,r,n,i){return t[0]=e,t[1]=r,t[2]=n,t[3]=i,t}function h(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}function f(t,e){A&&h(A,e),A=S.put(t,A||e.slice())}function d(t,e){if(t){e=e||[];var r=S.get(t);if(r)return h(e,r);t+="";var n=t.replace(/ /g,"").toLowerCase();if(n in w)return h(e,w[n]),f(t,e),e;if("#"!==n.charAt(0)){var i=n.indexOf("("),a=n.indexOf(")");if(i!==-1&&a+1===n.length){var u=n.substr(0,i),c=n.substr(i+1,a-(i+1)).split(","),d=1;switch(u){case"rgba":if(4!==c.length)return void l(e,0,0,0,1);d=s(c.pop());case"rgb":return 3!==c.length?void l(e,0,0,0,1):(l(e,o(c[0]),o(c[1]),o(c[2]),d),f(t,e),e);case"hsla":return 4!==c.length?void l(e,0,0,0,1):(c[3]=s(c[3]),_(c,e),f(t,e),e);case"hsl":return 3!==c.length?void l(e,0,0,0,1):(_(c,e),f(t,e),e);default:return}}l(e,0,0,0,1)}else{if(4===n.length){var p=parseInt(n.substr(1),16);return p>=0&&p<=4095?(l(e,(3840&p)>>4|(3840&p)>>8,240&p|(240&p)>>4,15&p|(15&p)<<4,1),f(t,e),e):void l(e,0,0,0,1)}if(7===n.length){var p=parseInt(n.substr(1),16);return p>=0&&p<=16777215?(l(e,(16711680&p)>>16,(65280&p)>>8,255&p,1),f(t,e),e):void l(e,0,0,0,1)}}}}function _(t,e){var r=(parseFloat(t[0])%360+360)%360/360,i=s(t[1]),a=s(t[2]),o=a<=.5?a*(i+1):a+i-a*i,c=2*a-o;return e=e||[],l(e,n(255*u(c,o,r+1/3)),n(255*u(c,o,r)),n(255*u(c,o,r-1/3)),1),4===t.length&&(e[3]=t[3]),e}function p(t){if(t){var e,r,n=t[0]/255,i=t[1]/255,a=t[2]/255,o=Math.min(n,i,a),s=Math.max(n,i,a),u=s-o,c=(s+o)/2;if(0===u)e=0,r=0;else{r=c<.5?u/(s+o):u/(2-s-o);var l=((s-n)/6+u/2)/u,h=((s-i)/6+u/2)/u,f=((s-a)/6+u/2)/u;n===s?e=f-h:i===s?e=1/3+l-f:a===s&&(e=2/3+h-l),e<0&&(e+=1),e>1&&(e-=1)}var d=[360*e,r,c];return null!=t[3]&&d.push(t[3]),d}}function m(t,e){var r=d(t);if(r){for(var n=0;n<3;n++)e<0?r[n]=r[n]*(1-e)|0:r[n]=(255-r[n])*e+r[n]|0;return b(r,4===r.length?"rgba":"rgb")}}function v(t,e){var r=d(t);if(r)return((1<<24)+(r[0]<<16)+(r[1]<<8)+ +r[2]).toString(16).slice(1)}function g(t,e,r){if(r=r||[0,0,0,0],!e||!e.length||!(t>=0&&t<=1))return r;var i=t*(e.length-1),a=Math.floor(i),o=Math.ceil(i),s=e[a],u=e[o],l=i-a;return r[0]=n(c(s[0],u[0],l)),r[1]=n(c(s[1],u[1],l)),r[2]=n(c(s[2],u[2],l)),r[3]=n(c(s[3],u[3],l)),r}function y(t,e,r){if(e&&e.length&&t>=0&&t<=1){var i=t*(e.length-1),o=Math.floor(i),s=Math.ceil(i),u=d(e[o]),l=d(e[s]),h=i-o,f=b([n(c(u[0],l[0],h)),n(c(u[1],l[1],h)),n(c(u[2],l[2],h)),a(c(u[3],l[3],h))],"rgba");return r?{color:f,leftIndex:o,rightIndex:s,value:i}:f}}function x(t,e,r,n){if(t=d(t))return t=p(t),null!=e&&(t[0]=i(e)),null!=r&&(t[1]=s(r)),null!=n&&(t[2]=s(n)),b(_(t),"rgba")}function T(t,e){if(t=d(t),t&&null!=e)return t[3]=a(e),b(t,"rgba")}function b(t,e){if(t){var r=t[0]+","+t[1]+","+t[2];return"rgba"!==e&&"hsva"!==e&&"hsla"!==e||(r+=","+t[3]),e+"("+r+")"}}var E=r(77),w={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],
springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]},S=new E(20),A=null;t.exports={parse:d,lift:m,toHex:v,fastMapToColor:g,mapToColor:y,modifyHSL:x,modifyAlpha:T,stringify:b}}])});